#! /bin/bash
# Generated by configure.
# Run this file to recreate the current configuration.
# Compiler output produced by configure, useful for debugging
# configure, is in config.log if it exists.

debug=false
ac_cs_recheck=false
ac_cs_silent=false

SHELL=${CONFIG_SHELL-/bin/bash}
export SHELL
## -------------------- ##
## M4sh Initialization. ##
## -------------------- ##

# Be more Bourne compatible
DUALCASE=1; export DUALCASE # for MKS sh
if test -n "${ZSH_VERSION+set}" && (emulate sh) >/dev/null 2>&1; then :
  emulate sh
  NULLCMD=:
  # Pre-4.2 versions of Zsh do word splitting on ${1+"$@"}, which
  # is contrary to our usage.  Disable this feature.
  alias -g '${1+"$@"}'='"$@"'
  setopt NO_GLOB_SUBST
else
  case `(set -o) 2>/dev/null` in #(
  *posix*) :
    set -o posix ;; #(
  *) :
     ;;
esac
fi


as_nl='
'
export as_nl
# Printing a long string crashes Solaris 7 /usr/bin/printf.
as_echo='\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'
as_echo=$as_echo$as_echo$as_echo$as_echo$as_echo
as_echo=$as_echo$as_echo$as_echo$as_echo$as_echo$as_echo
# Prefer a ksh shell builtin over an external printf program on Solaris,
# but without wasting forks for bash or zsh.
if test -z "$BASH_VERSION$ZSH_VERSION" \
    && (test "X`print -r -- $as_echo`" = "X$as_echo") 2>/dev/null; then
  as_echo='print -r --'
  as_echo_n='print -rn --'
elif (test "X`printf %s $as_echo`" = "X$as_echo") 2>/dev/null; then
  as_echo='printf %s\n'
  as_echo_n='printf %s'
else
  if test "X`(/usr/ucb/echo -n -n $as_echo) 2>/dev/null`" = "X-n $as_echo"; then
    as_echo_body='eval /usr/ucb/echo -n "$1$as_nl"'
    as_echo_n='/usr/ucb/echo -n'
  else
    as_echo_body='eval expr "X$1" : "X\\(.*\\)"'
    as_echo_n_body='eval
      arg=$1;
      case $arg in #(
      *"$as_nl"*)
	expr "X$arg" : "X\\(.*\\)$as_nl";
	arg=`expr "X$arg" : ".*$as_nl\\(.*\\)"`;;
      esac;
      expr "X$arg" : "X\\(.*\\)" | tr -d "$as_nl"
    '
    export as_echo_n_body
    as_echo_n='sh -c $as_echo_n_body as_echo'
  fi
  export as_echo_body
  as_echo='sh -c $as_echo_body as_echo'
fi

# The user is always right.
if test "${PATH_SEPARATOR+set}" != set; then
  PATH_SEPARATOR=:
  (PATH='/bin;/bin'; FPATH=$PATH; sh -c :) >/dev/null 2>&1 && {
    (PATH='/bin:/bin'; FPATH=$PATH; sh -c :) >/dev/null 2>&1 ||
      PATH_SEPARATOR=';'
  }
fi


# IFS
# We need space, tab and new line, in precisely that order.  Quoting is
# there to prevent editors from complaining about space-tab.
# (If _AS_PATH_WALK were called with IFS unset, it would disable word
# splitting by setting IFS to empty value.)
IFS=" ""	$as_nl"

# Find who we are.  Look in the path if we contain no directory separator.
as_myself=
case $0 in #((
  *[\\/]* ) as_myself=$0 ;;
  *) as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
for as_dir in $PATH
do
  IFS=$as_save_IFS
  test -z "$as_dir" && as_dir=.
    test -r "$as_dir/$0" && as_myself=$as_dir/$0 && break
  done
IFS=$as_save_IFS

     ;;
esac
# We did not find ourselves, most probably we were run as `sh COMMAND'
# in which case we are not to be found in the path.
if test "x$as_myself" = x; then
  as_myself=$0
fi
if test ! -f "$as_myself"; then
  $as_echo "$as_myself: error: cannot find myself; rerun with an absolute file name" >&2
  exit 1
fi

# Unset variables that we do not need and which cause bugs (e.g. in
# pre-3.0 UWIN ksh).  But do not cause bugs in bash 2.01; the "|| exit 1"
# suppresses any "Segmentation fault" message there.  '((' could
# trigger a bug in pdksh 5.2.14.
for as_var in BASH_ENV ENV MAIL MAILPATH
do eval test x\${$as_var+set} = xset \
  && ( (unset $as_var) || exit 1) >/dev/null 2>&1 && unset $as_var || :
done
PS1='$ '
PS2='> '
PS4='+ '

# NLS nuisances.
LC_ALL=C
export LC_ALL
LANGUAGE=C
export LANGUAGE

# CDPATH.
(unset CDPATH) >/dev/null 2>&1 && unset CDPATH


# as_fn_error STATUS ERROR [LINENO LOG_FD]
# ----------------------------------------
# Output "`basename $0`: error: ERROR" to stderr. If LINENO and LOG_FD are
# provided, also output the error to LOG_FD, referencing LINENO. Then exit the
# script with STATUS, using 1 if that was 0.
as_fn_error ()
{
  as_status=$1; test $as_status -eq 0 && as_status=1
  if test "$4"; then
    as_lineno=${as_lineno-"$3"} as_lineno_stack=as_lineno_stack=$as_lineno_stack
    $as_echo "$as_me:${as_lineno-$LINENO}: error: $2" >&$4
  fi
  $as_echo "$as_me: error: $2" >&2
  as_fn_exit $as_status
} # as_fn_error


# as_fn_set_status STATUS
# -----------------------
# Set $? to STATUS, without forking.
as_fn_set_status ()
{
  return $1
} # as_fn_set_status

# as_fn_exit STATUS
# -----------------
# Exit the shell with STATUS, even in a "trap 0" or "set -e" context.
as_fn_exit ()
{
  set +e
  as_fn_set_status $1
  exit $1
} # as_fn_exit

# as_fn_unset VAR
# ---------------
# Portably unset VAR.
as_fn_unset ()
{
  { eval $1=; unset $1;}
}
as_unset=as_fn_unset
# as_fn_append VAR VALUE
# ----------------------
# Append the text in VALUE to the end of the definition contained in VAR. Take
# advantage of any shell optimizations that allow amortized linear growth over
# repeated appends, instead of the typical quadratic growth present in naive
# implementations.
if (eval "as_var=1; as_var+=2; test x\$as_var = x12") 2>/dev/null; then :
  eval 'as_fn_append ()
  {
    eval $1+=\$2
  }'
else
  as_fn_append ()
  {
    eval $1=\$$1\$2
  }
fi # as_fn_append

# as_fn_arith ARG...
# ------------------
# Perform arithmetic evaluation on the ARGs, and store the result in the
# global $as_val. Take advantage of shells that can avoid forks. The arguments
# must be portable across $(()) and expr.
if (eval "test \$(( 1 + 1 )) = 2") 2>/dev/null; then :
  eval 'as_fn_arith ()
  {
    as_val=$(( $* ))
  }'
else
  as_fn_arith ()
  {
    as_val=`expr "$@" || test $? -eq 1`
  }
fi # as_fn_arith


if expr a : '\(a\)' >/dev/null 2>&1 &&
   test "X`expr 00001 : '.*\(...\)'`" = X001; then
  as_expr=expr
else
  as_expr=false
fi

if (basename -- /) >/dev/null 2>&1 && test "X`basename -- / 2>&1`" = "X/"; then
  as_basename=basename
else
  as_basename=false
fi

if (as_dir=`dirname -- /` && test "X$as_dir" = X/) >/dev/null 2>&1; then
  as_dirname=dirname
else
  as_dirname=false
fi

as_me=`$as_basename -- "$0" ||
$as_expr X/"$0" : '.*/\([^/][^/]*\)/*$' \| \
	 X"$0" : 'X\(//\)$' \| \
	 X"$0" : 'X\(/\)' \| . 2>/dev/null ||
$as_echo X/"$0" |
    sed '/^.*\/\([^/][^/]*\)\/*$/{
	    s//\1/
	    q
	  }
	  /^X\/\(\/\/\)$/{
	    s//\1/
	    q
	  }
	  /^X\/\(\/\).*/{
	    s//\1/
	    q
	  }
	  s/.*/./; q'`

# Avoid depending upon Character Ranges.
as_cr_letters='abcdefghijklmnopqrstuvwxyz'
as_cr_LETTERS='ABCDEFGHIJKLMNOPQRSTUVWXYZ'
as_cr_Letters=$as_cr_letters$as_cr_LETTERS
as_cr_digits='0123456789'
as_cr_alnum=$as_cr_Letters$as_cr_digits

ECHO_C= ECHO_N= ECHO_T=
case `echo -n x` in #(((((
-n*)
  case `echo 'xy\c'` in
  *c*) ECHO_T='	';;	# ECHO_T is single tab character.
  xy)  ECHO_C='\c';;
  *)   echo `echo ksh88 bug on AIX 6.1` > /dev/null
       ECHO_T='	';;
  esac;;
*)
  ECHO_N='-n';;
esac

rm -f conf$$ conf$$.exe conf$$.file
if test -d conf$$.dir; then
  rm -f conf$$.dir/conf$$.file
else
  rm -f conf$$.dir
  mkdir conf$$.dir 2>/dev/null
fi
if (echo >conf$$.file) 2>/dev/null; then
  if ln -s conf$$.file conf$$ 2>/dev/null; then
    as_ln_s='ln -s'
    # ... but there are two gotchas:
    # 1) On MSYS, both `ln -s file dir' and `ln file dir' fail.
    # 2) DJGPP < 2.04 has no symlinks; `ln -s' creates a wrapper executable.
    # In both cases, we have to default to `cp -pR'.
    ln -s conf$$.file conf$$.dir 2>/dev/null && test ! -f conf$$.exe ||
      as_ln_s='cp -pR'
  elif ln conf$$.file conf$$ 2>/dev/null; then
    as_ln_s=ln
  else
    as_ln_s='cp -pR'
  fi
else
  as_ln_s='cp -pR'
fi
rm -f conf$$ conf$$.exe conf$$.dir/conf$$.file conf$$.file
rmdir conf$$.dir 2>/dev/null


# as_fn_mkdir_p
# -------------
# Create "$as_dir" as a directory, including parents if necessary.
as_fn_mkdir_p ()
{

  case $as_dir in #(
  -*) as_dir=./$as_dir;;
  esac
  test -d "$as_dir" || eval $as_mkdir_p || {
    as_dirs=
    while :; do
      case $as_dir in #(
      *\'*) as_qdir=`$as_echo "$as_dir" | sed "s/'/'\\\\\\\\''/g"`;; #'(
      *) as_qdir=$as_dir;;
      esac
      as_dirs="'$as_qdir' $as_dirs"
      as_dir=`$as_dirname -- "$as_dir" ||
$as_expr X"$as_dir" : 'X\(.*[^/]\)//*[^/][^/]*/*$' \| \
	 X"$as_dir" : 'X\(//\)[^/]' \| \
	 X"$as_dir" : 'X\(//\)$' \| \
	 X"$as_dir" : 'X\(/\)' \| . 2>/dev/null ||
$as_echo X"$as_dir" |
    sed '/^X\(.*[^/]\)\/\/*[^/][^/]*\/*$/{
	    s//\1/
	    q
	  }
	  /^X\(\/\/\)[^/].*/{
	    s//\1/
	    q
	  }
	  /^X\(\/\/\)$/{
	    s//\1/
	    q
	  }
	  /^X\(\/\).*/{
	    s//\1/
	    q
	  }
	  s/.*/./; q'`
      test -d "$as_dir" && break
    done
    test -z "$as_dirs" || eval "mkdir $as_dirs"
  } || test -d "$as_dir" || as_fn_error $? "cannot create directory $as_dir"


} # as_fn_mkdir_p
if mkdir -p . 2>/dev/null; then
  as_mkdir_p='mkdir -p "$as_dir"'
else
  test -d ./-p && rmdir ./-p
  as_mkdir_p=false
fi


# as_fn_executable_p FILE
# -----------------------
# Test if FILE is an executable regular file.
as_fn_executable_p ()
{
  test -f "$1" && test -x "$1"
} # as_fn_executable_p
as_test_x='test -x'
as_executable_p=as_fn_executable_p

# Sed expression to map a string onto a valid CPP name.
as_tr_cpp="eval sed 'y%*$as_cr_letters%P$as_cr_LETTERS%;s%[^_$as_cr_alnum]%_%g'"

# Sed expression to map a string onto a valid variable name.
as_tr_sh="eval sed 'y%*+%pp%;s%[^_$as_cr_alnum]%_%g'"


exec 6>&1
## ----------------------------------- ##
## Main body of $CONFIG_STATUS script. ##
## ----------------------------------- ##
# Save the log message, to keep $0 and so on meaningful, and to
# report actual input values of CONFIG_FILES etc. instead of their
# values after options handling.
ac_log="
This file was extended by Open MPI $as_me 1.8.8, which was
generated by GNU Autoconf 2.69.  Invocation command line was

  CONFIG_FILES    = $CONFIG_FILES
  CONFIG_HEADERS  = $CONFIG_HEADERS
  CONFIG_LINKS    = $CONFIG_LINKS
  CONFIG_COMMANDS = $CONFIG_COMMANDS
  $ $0 $@

on `(hostname || uname -n) 2>/dev/null | sed 1q`
"

# Files that config.status was made for.
config_files=" ompi/include/ompi/version.h orte/include/orte/version.h oshmem/include/oshmem/version.h opal/include/opal/version.h ompi/mpi/java/Makefile ompi/mpi/java/java/Makefile ompi/mpi/java/c/Makefile ompi/mpi/fortran/configure-fortran-output.h opal/mca/hwloc/Makefile opal/mca/hwloc/hwloc191/Makefile opal/mca/hwloc/hwloc191/hwloc/Makefile opal/mca/hwloc/hwloc191/hwloc/include/Makefile opal/mca/hwloc/hwloc191/hwloc/src/Makefile opal/mca/hwloc/external/Makefile opal/mca/common/Makefile opal/mca/common/pmi/Makefile opal/mca/backtrace/Makefile opal/mca/backtrace/printstack/Makefile opal/mca/backtrace/execinfo/Makefile opal/mca/backtrace/none/Makefile opal/mca/compress/Makefile opal/mca/compress/gzip/Makefile opal/mca/compress/bzip/Makefile opal/mca/crs/Makefile opal/mca/crs/none/Makefile opal/mca/crs/dmtcp/Makefile opal/mca/crs/self/Makefile opal/mca/crs/blcr/Makefile opal/mca/db/Makefile opal/mca/db/print/Makefile opal/mca/db/hash/Makefile opal/mca/db/pmi/Makefile opal/mca/db/sqlite/Makefile opal/mca/dl/Makefile opal/mca/dl/dlopen/Makefile opal/mca/dl/libltdl/Makefile opal/mca/event/Makefile opal/mca/event/external/Makefile opal/mca/event/libevent2021/Makefile opal/mca/if/Makefile opal/mca/if/solaris_ipv6/Makefile opal/mca/if/bsdx_ipv4/Makefile opal/mca/if/bsdx_ipv6/Makefile opal/mca/if/posix_ipv4/Makefile opal/mca/if/linux_ipv6/Makefile opal/mca/installdirs/Makefile opal/mca/installdirs/env/Makefile opal/mca/installdirs/config/Makefile opal/mca/installdirs/config/install_dirs.h opal/mca/memchecker/Makefile opal/mca/memchecker/valgrind/Makefile opal/mca/memcpy/Makefile opal/mca/memory/Makefile opal/mca/memory/linux/Makefile opal/mca/memory/malloc_solaris/Makefile opal/mca/pstat/Makefile opal/mca/pstat/linux/Makefile opal/mca/pstat/test/Makefile opal/mca/sec/Makefile opal/mca/sec/basic/Makefile opal/mca/sec/keystone/Makefile opal/mca/shmem/Makefile opal/mca/shmem/mmap/Makefile opal/mca/shmem/posix/Makefile opal/mca/shmem/sysv/Makefile opal/mca/timer/Makefile opal/mca/timer/altix/Makefile opal/mca/timer/catamount/Makefile opal/mca/timer/solaris/Makefile opal/mca/timer/linux/Makefile opal/mca/timer/aix/Makefile opal/mca/timer/darwin/Makefile orte/mca/dfs/Makefile orte/mca/dfs/test/Makefile orte/mca/dfs/app/Makefile orte/mca/dfs/orted/Makefile orte/mca/errmgr/Makefile orte/mca/errmgr/default_tool/Makefile orte/mca/errmgr/default_hnp/Makefile orte/mca/errmgr/default_orted/Makefile orte/mca/errmgr/default_app/Makefile orte/mca/ess/Makefile orte/mca/ess/tool/Makefile orte/mca/ess/hnp/Makefile orte/mca/ess/singleton/Makefile orte/mca/ess/env/Makefile orte/mca/ess/pmi/Makefile orte/mca/ess/slurm/Makefile orte/mca/ess/alps/Makefile orte/mca/ess/lsf/Makefile orte/mca/ess/tm/Makefile orte/mca/filem/Makefile orte/mca/filem/raw/Makefile orte/mca/grpcomm/Makefile orte/mca/grpcomm/bad/Makefile orte/mca/grpcomm/pmi/Makefile orte/mca/iof/Makefile orte/mca/iof/mr_orted/Makefile orte/mca/iof/tool/Makefile orte/mca/iof/hnp/Makefile orte/mca/iof/orted/Makefile orte/mca/iof/mr_hnp/Makefile orte/mca/odls/Makefile orte/mca/odls/default/Makefile orte/mca/oob/Makefile orte/mca/oob/tcp/Makefile orte/mca/plm/Makefile orte/mca/plm/isolated/Makefile orte/mca/plm/slurm/Makefile orte/mca/plm/alps/Makefile orte/mca/plm/rsh/Makefile orte/mca/plm/lsf/Makefile orte/mca/plm/tm/Makefile orte/mca/ras/Makefile orte/mca/ras/simulator/Makefile orte/mca/ras/loadleveler/Makefile orte/mca/ras/slurm/Makefile orte/mca/ras/alps/Makefile orte/mca/ras/gridengine/Makefile orte/mca/ras/lsf/Makefile orte/mca/ras/tm/Makefile orte/mca/rmaps/Makefile orte/mca/rmaps/resilient/Makefile orte/mca/rmaps/seq/Makefile orte/mca/rmaps/round_robin/Makefile orte/mca/rmaps/ppr/Makefile orte/mca/rmaps/staged/Makefile orte/mca/rmaps/mindist/Makefile orte/mca/rmaps/lama/Makefile orte/mca/rmaps/rank_file/Makefile orte/mca/rml/Makefile orte/mca/rml/oob/Makefile orte/mca/rml/ftrm/Makefile orte/mca/routed/Makefile orte/mca/routed/direct/Makefile orte/mca/routed/radix/Makefile orte/mca/routed/debruijn/Makefile orte/mca/routed/binomial/Makefile orte/mca/sensor/Makefile orte/mca/sensor/resusage/Makefile orte/mca/sensor/file/Makefile orte/mca/sensor/heartbeat/Makefile orte/mca/sensor/ft_tester/Makefile orte/mca/snapc/Makefile orte/mca/snapc/full/Makefile orte/mca/sstore/Makefile orte/mca/sstore/stage/Makefile orte/mca/sstore/central/Makefile orte/mca/state/Makefile orte/mca/state/app/Makefile orte/mca/state/staged_orted/Makefile orte/mca/state/staged_hnp/Makefile orte/mca/state/tool/Makefile orte/mca/state/hnp/Makefile orte/mca/state/orted/Makefile orte/mca/state/novm/Makefile ompi/mca/common/Makefile ompi/mca/common/ugni/Makefile ompi/mca/common/sm/Makefile ompi/mca/common/mx/Makefile ompi/mca/common/verbs/Makefile ompi/mca/common/cuda/Makefile ompi/mca/allocator/Makefile ompi/mca/allocator/bucket/Makefile ompi/mca/allocator/basic/Makefile ompi/mca/bcol/Makefile ompi/mca/bcol/ptpcoll/Makefile ompi/mca/bcol/basesmuma/Makefile ompi/mca/bml/Makefile ompi/mca/bml/r2/Makefile ompi/mca/btl/Makefile ompi/mca/btl/self/Makefile ompi/mca/btl/smcuda/Makefile ompi/mca/btl/ugni/Makefile ompi/mca/btl/sm/Makefile ompi/mca/btl/scif/Makefile ompi/mca/btl/portals4/Makefile ompi/mca/btl/tcp/Makefile ompi/mca/btl/openib/Makefile ompi/mca/btl/vader/Makefile ompi/mca/btl/usnic/Makefile ompi/mca/coll/Makefile ompi/mca/coll/tuned/Makefile ompi/mca/coll/libnbc/Makefile ompi/mca/coll/self/Makefile ompi/mca/coll/sm/Makefile ompi/mca/coll/basic/Makefile ompi/mca/coll/inter/Makefile ompi/mca/coll/hierarch/Makefile ompi/mca/coll/hcoll/Makefile ompi/mca/coll/ml/Makefile ompi/mca/coll/fca/Makefile ompi/mca/coll/portals4/Makefile ompi/mca/coll/cuda/Makefile ompi/mca/crcp/Makefile ompi/mca/crcp/bkmrk/Makefile ompi/mca/dpm/Makefile ompi/mca/dpm/orte/Makefile ompi/mca/fbtl/Makefile ompi/mca/fbtl/pvfs2/Makefile ompi/mca/fbtl/posix/Makefile ompi/mca/fcoll/Makefile ompi/mca/fcoll/individual/Makefile ompi/mca/fcoll/dynamic/Makefile ompi/mca/fcoll/ylib/Makefile ompi/mca/fcoll/static/Makefile ompi/mca/fcoll/two_phase/Makefile ompi/mca/fs/Makefile ompi/mca/fs/ufs/Makefile ompi/mca/fs/pvfs2/Makefile ompi/mca/io/Makefile ompi/mca/io/ompio/Makefile ompi/mca/io/romio/Makefile ompi/mca/mpool/Makefile ompi/mca/mpool/grdma/Makefile ompi/mca/mpool/sm/Makefile ompi/mca/mpool/udreg/Makefile ompi/mca/mpool/rgpusm/Makefile ompi/mca/mpool/gpusm/Makefile ompi/mca/mtl/Makefile ompi/mca/mtl/psm/Makefile ompi/mca/mtl/mxm/Makefile ompi/mca/mtl/portals4/Makefile ompi/mca/mtl/mx/Makefile ompi/mca/op/Makefile ompi/mca/osc/Makefile ompi/mca/osc/sm/Makefile ompi/mca/osc/rdma/Makefile ompi/mca/osc/portals4/Makefile ompi/mca/pml/Makefile ompi/mca/pml/cm/Makefile ompi/mca/pml/bfo/Makefile ompi/mca/pml/crcpw/Makefile ompi/mca/pml/v/Makefile ompi/mca/pml/ob1/Makefile ompi/mca/pubsub/Makefile ompi/mca/pubsub/pmi/Makefile ompi/mca/pubsub/orte/Makefile ompi/mca/rcache/Makefile ompi/mca/rcache/vma/Makefile ompi/mca/rte/Makefile ompi/mca/rte/orte/Makefile ompi/mca/sbgp/Makefile ompi/mca/sbgp/basesmuma/Makefile ompi/mca/sbgp/basesmsocket/Makefile ompi/mca/sbgp/p2p/Makefile ompi/mca/sharedfp/Makefile ompi/mca/sharedfp/individual/Makefile ompi/mca/sharedfp/sm/Makefile ompi/mca/sharedfp/lockedfile/Makefile ompi/mca/topo/Makefile ompi/mca/topo/basic/Makefile ompi/mca/vprotocol/Makefile ompi/mca/vprotocol/pessimist/Makefile oshmem/mca/atomic/Makefile oshmem/mca/atomic/basic/Makefile oshmem/mca/atomic/mxm/Makefile oshmem/mca/memheap/Makefile oshmem/mca/memheap/ptmalloc/Makefile oshmem/mca/memheap/buddy/Makefile oshmem/mca/scoll/Makefile oshmem/mca/scoll/basic/Makefile oshmem/mca/scoll/mpi/Makefile oshmem/mca/scoll/fca/Makefile oshmem/mca/spml/Makefile oshmem/mca/spml/yoda/Makefile oshmem/mca/spml/ikrit/Makefile oshmem/mca/sshmem/Makefile oshmem/mca/sshmem/mmap/Makefile oshmem/mca/sshmem/verbs/Makefile oshmem/mca/sshmem/sysv/Makefile ompi/mpiext/affinity/Makefile ompi/mpiext/affinity/c/Makefile ompi/mpiext/cr/Makefile ompi/mpiext/cr/c/Makefile ompi/contrib/libompitrace/Makefile Makefile config/Makefile contrib/Makefile contrib/dist/mofed/debian/changelog contrib/dist/mofed/debian/control contrib/dist/mofed/debian/copyright:LICENSE test/Makefile test/event/Makefile test/asm/Makefile test/datatype/Makefile test/class/Makefile test/support/Makefile test/threads/Makefile test/util/Makefile contrib/dist/mofed/debian/rules contrib/dist/mofed/compile_debian_mlnx_example opal/Makefile opal/etc/Makefile opal/include/Makefile opal/asm/Makefile opal/datatype/Makefile opal/util/Makefile opal/util/keyval/Makefile opal/mca/base/Makefile opal/tools/wrappers/Makefile opal/tools/wrappers/opalcc-wrapper-data.txt opal/tools/wrappers/opalc++-wrapper-data.txt opal/tools/wrappers/opal.pc opal/tools/opal-checkpoint/Makefile opal/tools/opal-restart/Makefile orte/Makefile orte/include/Makefile orte/etc/Makefile orte/tools/orted/Makefile orte/tools/orterun/Makefile orte/tools/wrappers/Makefile orte/tools/wrappers/ortecc-wrapper-data.txt orte/tools/wrappers/orte.pc orte/tools/orte-checkpoint/Makefile orte/tools/orte-restart/Makefile orte/tools/orte-ps/Makefile orte/tools/orte-clean/Makefile orte/tools/orte-top/Makefile orte/tools/orte-migrate/Makefile orte/tools/orte-info/Makefile orte/tools/orte-server/Makefile ompi/Makefile ompi/etc/Makefile ompi/include/Makefile ompi/include/mpif.h ompi/include/mpif-config.h ompi/datatype/Makefile ompi/debuggers/Makefile ompi/mpi/c/Makefile ompi/mpi/c/profile/Makefile ompi/mpi/cxx/Makefile ompi/mpi/fortran/base/Makefile ompi/mpi/fortran/mpif-h/Makefile ompi/mpi/fortran/mpif-h/profile/Makefile ompi/mpi/fortran/use-mpi-tkr/Makefile ompi/mpi/fortran/use-mpi-tkr/fortran_sizes.h ompi/mpi/fortran/use-mpi-tkr/fortran_kinds.sh ompi/mpi/fortran/use-mpi-ignore-tkr/Makefile ompi/mpi/fortran/use-mpi-ignore-tkr/mpi-ignore-tkr-interfaces.h ompi/mpi/fortran/use-mpi-ignore-tkr/mpi-ignore-tkr-file-interfaces.h ompi/mpi/fortran/use-mpi-f08/Makefile ompi/mpi/fortran/use-mpi-f08-desc/Makefile ompi/mpi/fortran/mpiext/Makefile ompi/mpi/tool/Makefile ompi/mpi/tool/profile/Makefile ompi/tools/ompi_info/Makefile ompi/tools/wrappers/Makefile ompi/tools/wrappers/mpicc-wrapper-data.txt ompi/tools/wrappers/mpic++-wrapper-data.txt ompi/tools/wrappers/mpifort-wrapper-data.txt ompi/tools/wrappers/ompi.pc ompi/tools/wrappers/ompi-c.pc ompi/tools/wrappers/ompi-cxx.pc ompi/tools/wrappers/ompi-fort.pc ompi/tools/wrappers/mpijavac.pl oshmem/Makefile oshmem/include/Makefile oshmem/shmem/c/Makefile oshmem/shmem/c/profile/Makefile oshmem/shmem/fortran/Makefile oshmem/shmem/fortran/profile/Makefile oshmem/tools/oshmem_info/Makefile oshmem/tools/wrappers/Makefile oshmem/tools/wrappers/shmemcc-wrapper-data.txt oshmem/tools/wrappers/shmemfort-wrapper-data.txt"
config_headers=" opal/include/opal_config.h orte/include/orte_config.h ompi/include/mpi.h oshmem/include/shmem.h opal/mca/hwloc/hwloc191/hwloc/include/private/autogen/config.h opal/mca/hwloc/hwloc191/hwloc/include/hwloc/autogen/config.h"
config_commands=" depfiles opal/mca/event/libevent2021/libevent/include/event2/event-config.h libtool"

ac_cs_usage="\
\`$as_me' instantiates files and other configuration actions
from templates according to the current configuration.  Unless the files
and actions are specified as TAGs, all are instantiated by default.

Usage: $0 [OPTION]... [TAG]...

  -h, --help       print this help, then exit
  -V, --version    print version number and configuration settings, then exit
      --config     print configuration, then exit
  -q, --quiet, --silent
                   do not print progress messages
  -d, --debug      don't remove temporary files
      --recheck    update $as_me by reconfiguring in the same conditions
      --file=FILE[:TEMPLATE]
                   instantiate the configuration file FILE
      --header=FILE[:TEMPLATE]
                   instantiate the configuration header FILE

Configuration files:
$config_files

Configuration headers:
$config_headers

Configuration commands:
$config_commands

Report bugs to <http://www.open-mpi.org/community/help/>."

ac_cs_config="'--prefix=/home/elwardi/foam/foam-extend-4.0/ThirdParty/packages/openmpi-1.8.8/platforms/linux64GccDPDebug' '--exec_prefix=/home/elwardi/foam/foam-extend-4.0/ThirdParty/packages/openmpi-1.8.8/platforms/linux64GccDPDebug' '--enable-mpirun-prefix-by-default' '--enable-orterun-prefix-by-default' '--enable-shared' '--enable-mpi-cxx' '--disable-static' '--disable-mpi-f77' '--disable-mpi-f90' '--without-slurm' '--enable-mpi-profile' '--without-sge' '--enable-mca-no-build=ras-gridengine,pls-gridengine' '--disable-vt' 'CC=gcc-5' 'CFLAGS=-m64 -fPIC' 'LDFLAGS=-m64' 'CXX=g++-5' 'CXXFLAGS=-m64 -fPIC'"
ac_cs_version="\
Open MPI config.status 1.8.8
configured by ./configure, generated by GNU Autoconf 2.69,
  with options \"$ac_cs_config\"

Copyright (C) 2012 Free Software Foundation, Inc.
This config.status script is free software; the Free Software Foundation
gives unlimited permission to copy, distribute and modify it."

ac_pwd='/home/elwardi/foam/foam-extend-4.0/ThirdParty/rpmBuild/BUILD/openmpi-1.8.8'
srcdir='.'
INSTALL='/usr/bin/install -c'
MKDIR_P='/bin/mkdir -p'
AWK='mawk'
test -n "$AWK" || AWK=awk
# The default lists apply if the user does not specify any file.
ac_need_defaults=:
while test $# != 0
do
  case $1 in
  --*=?*)
    ac_option=`expr "X$1" : 'X\([^=]*\)='`
    ac_optarg=`expr "X$1" : 'X[^=]*=\(.*\)'`
    ac_shift=:
    ;;
  --*=)
    ac_option=`expr "X$1" : 'X\([^=]*\)='`
    ac_optarg=
    ac_shift=:
    ;;
  *)
    ac_option=$1
    ac_optarg=$2
    ac_shift=shift
    ;;
  esac

  case $ac_option in
  # Handling of the options.
  -recheck | --recheck | --rechec | --reche | --rech | --rec | --re | --r)
    ac_cs_recheck=: ;;
  --version | --versio | --versi | --vers | --ver | --ve | --v | -V )
    $as_echo "$ac_cs_version"; exit ;;
  --config | --confi | --conf | --con | --co | --c )
    $as_echo "$ac_cs_config"; exit ;;
  --debug | --debu | --deb | --de | --d | -d )
    debug=: ;;
  --file | --fil | --fi | --f )
    $ac_shift
    case $ac_optarg in
    *\'*) ac_optarg=`$as_echo "$ac_optarg" | sed "s/'/'\\\\\\\\''/g"` ;;
    '') as_fn_error $? "missing file argument" ;;
    esac
    as_fn_append CONFIG_FILES " '$ac_optarg'"
    ac_need_defaults=false;;
  --header | --heade | --head | --hea )
    $ac_shift
    case $ac_optarg in
    *\'*) ac_optarg=`$as_echo "$ac_optarg" | sed "s/'/'\\\\\\\\''/g"` ;;
    esac
    as_fn_append CONFIG_HEADERS " '$ac_optarg'"
    ac_need_defaults=false;;
  --he | --h)
    # Conflict between --help and --header
    as_fn_error $? "ambiguous option: \`$1'
Try \`$0 --help' for more information.";;
  --help | --hel | -h )
    $as_echo "$ac_cs_usage"; exit ;;
  -q | -quiet | --quiet | --quie | --qui | --qu | --q \
  | -silent | --silent | --silen | --sile | --sil | --si | --s)
    ac_cs_silent=: ;;

  # This is an error.
  -*) as_fn_error $? "unrecognized option: \`$1'
Try \`$0 --help' for more information." ;;

  *) as_fn_append ac_config_targets " $1"
     ac_need_defaults=false ;;

  esac
  shift
done

ac_configure_extra_args=

if $ac_cs_silent; then
  exec 6>/dev/null
  ac_configure_extra_args="$ac_configure_extra_args --silent"
fi

if $ac_cs_recheck; then
  set X /bin/bash './configure'  '--prefix=/home/elwardi/foam/foam-extend-4.0/ThirdParty/packages/openmpi-1.8.8/platforms/linux64GccDPDebug' '--exec_prefix=/home/elwardi/foam/foam-extend-4.0/ThirdParty/packages/openmpi-1.8.8/platforms/linux64GccDPDebug' '--enable-mpirun-prefix-by-default' '--enable-orterun-prefix-by-default' '--enable-shared' '--enable-mpi-cxx' '--disable-static' '--disable-mpi-f77' '--disable-mpi-f90' '--without-slurm' '--enable-mpi-profile' '--without-sge' '--enable-mca-no-build=ras-gridengine,pls-gridengine' '--disable-vt' 'CC=gcc-5' 'CFLAGS=-m64 -fPIC' 'LDFLAGS=-m64' 'CXX=g++-5' 'CXXFLAGS=-m64 -fPIC' $ac_configure_extra_args --no-create --no-recursion
  shift
  $as_echo "running CONFIG_SHELL=/bin/bash $*" >&6
  CONFIG_SHELL='/bin/bash'
  export CONFIG_SHELL
  exec "$@"
fi

exec 5>>config.log
{
  echo
  sed 'h;s/./-/g;s/^.../## /;s/...$/ ##/;p;x;p;x' <<_ASBOX
## Running $as_me. ##
_ASBOX
  $as_echo "$ac_log"
} >&5

#
# INIT-COMMANDS
#
AMDEP_TRUE="" ac_aux_dir="config"


# The HP-UX ksh and POSIX shell print the target directory to stdout
# if CDPATH is set.
(unset CDPATH) >/dev/null 2>&1 && unset CDPATH

sed_quote_subst='s/\(["`$\\]\)/\\\1/g'
double_quote_subst='s/\(["`\\]\)/\\\1/g'
delay_variable_subst='s/\\\\\\\\\\\$/\\\\\\$/g'
enable_shared='yes'
enable_static='no'
NM='/usr/bin/nm -B'
macro_version='2.4.2'
macro_revision='1.3337'
AS='as'
DLLTOOL='false'
OBJDUMP='objdump'
pic_mode='default'
enable_fast_install='needless'
SHELL='/bin/bash'
ECHO='printf %s\n'
PATH_SEPARATOR=':'
host_alias=''
host='x86_64-pc-linux-gnu'
host_os='linux-gnu'
build_alias=''
build='x86_64-pc-linux-gnu'
build_os='linux-gnu'
SED='/bin/sed'
Xsed='/bin/sed -e 1s/^X//'
GREP='/bin/grep'
EGREP='/bin/grep -E'
FGREP='/bin/grep -F'
LD='/usr/bin/ld -m elf_x86_64'
LN_S='ln -s'
max_cmd_len='1572864'
ac_objext='o'
exeext=''
lt_unset='unset'
lt_SP2NL='tr \040 \012'
lt_NL2SP='tr \015\012 \040\040'
lt_cv_to_host_file_cmd='func_convert_file_noop'
lt_cv_to_tool_file_cmd='func_convert_file_noop'
reload_flag=' -r'
reload_cmds='$LD$reload_flag -o $output$reload_objs'
deplibs_check_method='pass_all'
file_magic_cmd='$MAGIC_CMD'
file_magic_glob=''
want_nocaseglob='no'
sharedlib_from_linklib_cmd='printf %s\n'
AR='ar'
AR_FLAGS='cru'
archiver_list_spec='@'
STRIP='strip'
RANLIB='ranlib'
old_postinstall_cmds='chmod 644 $oldlib~$RANLIB $tool_oldlib'
old_postuninstall_cmds=''
old_archive_cmds='$AR $AR_FLAGS $oldlib$oldobjs~$RANLIB $tool_oldlib'
lock_old_archive_extraction='no'
CC='gcc-5'
CFLAGS='-O3 -DNDEBUG -m64 -fPIC -finline-functions -fno-strict-aliasing -pthread'
compiler='g++-5'
GCC='yes'
lt_cv_sys_global_symbol_pipe='sed -n -e '\''s/^.*[	 ]\([ABCDGIRSTW][ABCDGIRSTW]*\)[	 ][	 ]*\([_A-Za-z][_A-Za-z0-9]*\)$/\1 \2 \2/p'\'' | sed '\''/ __gnu_lto/d'\'''
lt_cv_sys_global_symbol_to_cdecl='sed -n -e '\''s/^T .* \(.*\)$/extern int \1();/p'\'' -e '\''s/^[ABCDGIRSTW]* .* \(.*\)$/extern char \1;/p'\'''
lt_cv_sys_global_symbol_to_c_name_address='sed -n -e '\''s/^: \([^ ]*\)[ ]*$/  {\"\1\", (void *) 0},/p'\'' -e '\''s/^[ABCDGIRSTW]* \([^ ]*\) \([^ ]*\)$/  {"\2", (void *) \&\2},/p'\'''
lt_cv_sys_global_symbol_to_c_name_address_lib_prefix='sed -n -e '\''s/^: \([^ ]*\)[ ]*$/  {\"\1\", (void *) 0},/p'\'' -e '\''s/^[ABCDGIRSTW]* \([^ ]*\) \(lib[^ ]*\)$/  {"\2", (void *) \&\2},/p'\'' -e '\''s/^[ABCDGIRSTW]* \([^ ]*\) \([^ ]*\)$/  {"lib\2", (void *) \&\2},/p'\'''
nm_file_list_spec='@'
lt_sysroot=''
objdir='.libs'
MAGIC_CMD='file'
lt_prog_compiler_no_builtin_flag=' -fno-builtin'
lt_prog_compiler_pic=' -fPIC -DPIC'
lt_prog_compiler_wl='-Wl,'
lt_prog_compiler_static='-static'
lt_cv_prog_compiler_c_o='yes'
need_locks='no'
MANIFEST_TOOL=':'
DSYMUTIL=''
NMEDIT=''
LIPO=''
OTOOL=''
OTOOL64=''
libext='a'
shrext_cmds='.so'
extract_expsyms_cmds=''
archive_cmds_need_lc='no'
enable_shared_with_static_runtimes='no'
export_dynamic_flag_spec='${wl}--export-dynamic'
whole_archive_flag_spec='${wl}--whole-archive$convenience ${wl}--no-whole-archive'
compiler_needs_object='no'
old_archive_from_new_cmds=''
old_archive_from_expsyms_cmds=''
archive_cmds='$CC -shared $pic_flag $libobjs $deplibs $compiler_flags ${wl}-soname $wl$soname -o $lib'
archive_expsym_cmds='echo "{ global:" > $output_objdir/$libname.ver~
	    cat $export_symbols | sed -e "s/\(.*\)/\1;/" >> $output_objdir/$libname.ver~
	    echo "local: *; };" >> $output_objdir/$libname.ver~
	    $CC -shared $pic_flag $libobjs $deplibs $compiler_flags ${wl}-soname $wl$soname ${wl}-version-script ${wl}$output_objdir/$libname.ver -o $lib'
module_cmds=''
module_expsym_cmds=''
with_gnu_ld='yes'
allow_undefined_flag=''
no_undefined_flag=''
hardcode_libdir_flag_spec='${wl}-rpath ${wl}$libdir'
hardcode_libdir_separator=''
hardcode_direct='no'
hardcode_direct_absolute='no'
hardcode_minus_L='no'
hardcode_shlibpath_var='unsupported'
hardcode_automatic='no'
inherit_rpath='no'
link_all_deplibs='unknown'
always_export_symbols='no'
export_symbols_cmds='$NM $libobjs $convenience | $global_symbol_pipe | $SED '\''s/.* //'\'' | sort | uniq > $export_symbols'
exclude_expsyms='_GLOBAL_OFFSET_TABLE_|_GLOBAL__F[ID]_.*'
include_expsyms=''
prelink_cmds=''
postlink_cmds=''
file_list_spec=''
variables_saved_for_relink='PATH LD_LIBRARY_PATH LD_RUN_PATH GCC_EXEC_PREFIX COMPILER_PATH LIBRARY_PATH'
need_lib_prefix='no'
need_version='no'
version_type='linux'
runpath_var='LD_RUN_PATH'
shlibpath_var='LD_LIBRARY_PATH'
shlibpath_overrides_runpath='yes'
libname_spec='lib$name'
library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext}$major $libname${shared_ext}'
soname_spec='${libname}${release}${shared_ext}$major'
install_override_mode=''
postinstall_cmds=''
postuninstall_cmds=''
finish_cmds='PATH="\$PATH:/sbin" ldconfig -n $libdir'
finish_eval=''
hardcode_into_libs='yes'
sys_lib_search_path_spec='/usr/lib/gcc/x86_64-linux-gnu/5 /usr/lib/x86_64-linux-gnu /usr/lib /lib/x86_64-linux-gnu /lib '
sys_lib_dlsearch_path_spec='/lib /usr/lib /usr/lib/x86_64-linux-gnu/libfakeroot /usr/local/lib /usr/local/lib/x86_64-linux-gnu /lib/x86_64-linux-gnu /usr/lib/x86_64-linux-gnu '
hardcode_action='immediate'
enable_dlopen='yes'
enable_dlopen_self='yes'
enable_dlopen_self_static='no'
old_striplib='strip --strip-debug'
striplib='strip --strip-unneeded'
compiler_lib_search_dirs=''
predep_objects=''
postdep_objects=''
predeps=''
postdeps=''
compiler_lib_search_path=''
LD_CXX='/usr/bin/ld -m elf_x86_64'
LD_FC=''
reload_flag_CXX=' -r'
reload_flag_FC=' -r'
reload_cmds_CXX='$LD$reload_flag -o $output$reload_objs'
reload_cmds_FC='$LD$reload_flag -o $output$reload_objs'
old_archive_cmds_CXX='$AR $AR_FLAGS $oldlib$oldobjs~$RANLIB $tool_oldlib'
old_archive_cmds_FC='$AR $AR_FLAGS $oldlib$oldobjs~$RANLIB $tool_oldlib'
compiler_CXX='g++-5'
compiler_FC=''
GCC_CXX='yes'
GCC_FC=''
lt_prog_compiler_no_builtin_flag_CXX=' -fno-builtin'
lt_prog_compiler_no_builtin_flag_FC=''
lt_prog_compiler_pic_CXX=' -fPIC -DPIC'
lt_prog_compiler_pic_FC=''
lt_prog_compiler_wl_CXX='-Wl,'
lt_prog_compiler_wl_FC=''
lt_prog_compiler_static_CXX='-static'
lt_prog_compiler_static_FC=''
lt_cv_prog_compiler_c_o_CXX='yes'
lt_cv_prog_compiler_c_o_FC=''
archive_cmds_need_lc_CXX='no'
archive_cmds_need_lc_FC='no'
enable_shared_with_static_runtimes_CXX='no'
enable_shared_with_static_runtimes_FC='no'
export_dynamic_flag_spec_CXX='${wl}--export-dynamic'
export_dynamic_flag_spec_FC=''
whole_archive_flag_spec_CXX='${wl}--whole-archive$convenience ${wl}--no-whole-archive'
whole_archive_flag_spec_FC=''
compiler_needs_object_CXX='no'
compiler_needs_object_FC=''
old_archive_from_new_cmds_CXX=''
old_archive_from_new_cmds_FC=''
old_archive_from_expsyms_cmds_CXX=''
old_archive_from_expsyms_cmds_FC=''
archive_cmds_CXX='$CC $pic_flag -shared -nostdlib $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags ${wl}-soname $wl$soname -o $lib'
archive_cmds_FC=''
archive_expsym_cmds_CXX='$CC $pic_flag -shared -nostdlib $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags ${wl}-soname $wl$soname ${wl}-retain-symbols-file $wl$export_symbols -o $lib'
archive_expsym_cmds_FC=''
module_cmds_CXX=''
module_cmds_FC=''
module_expsym_cmds_CXX=''
module_expsym_cmds_FC=''
with_gnu_ld_CXX='yes'
with_gnu_ld_FC=''
allow_undefined_flag_CXX=''
allow_undefined_flag_FC=''
no_undefined_flag_CXX=''
no_undefined_flag_FC=''
hardcode_libdir_flag_spec_CXX='${wl}-rpath ${wl}$libdir'
hardcode_libdir_flag_spec_FC=''
hardcode_libdir_separator_CXX=''
hardcode_libdir_separator_FC=''
hardcode_direct_CXX='no'
hardcode_direct_FC='no'
hardcode_direct_absolute_CXX='no'
hardcode_direct_absolute_FC='no'
hardcode_minus_L_CXX='no'
hardcode_minus_L_FC='no'
hardcode_shlibpath_var_CXX='unsupported'
hardcode_shlibpath_var_FC=''
hardcode_automatic_CXX='no'
hardcode_automatic_FC='no'
inherit_rpath_CXX='no'
inherit_rpath_FC='no'
link_all_deplibs_CXX='unknown'
link_all_deplibs_FC='unknown'
always_export_symbols_CXX='no'
always_export_symbols_FC='no'
export_symbols_cmds_CXX='$NM $libobjs $convenience | $global_symbol_pipe | $SED '\''s/.* //'\'' | sort | uniq > $export_symbols'
export_symbols_cmds_FC=''
exclude_expsyms_CXX='_GLOBAL_OFFSET_TABLE_|_GLOBAL__F[ID]_.*'
exclude_expsyms_FC=''
include_expsyms_CXX=''
include_expsyms_FC=''
prelink_cmds_CXX=''
prelink_cmds_FC=''
postlink_cmds_CXX=''
postlink_cmds_FC=''
file_list_spec_CXX=''
file_list_spec_FC=''
hardcode_action_CXX='immediate'
hardcode_action_FC=''
compiler_lib_search_dirs_CXX='/usr/lib/gcc/x86_64-linux-gnu/5 /usr/lib/gcc/x86_64-linux-gnu/5/../../../x86_64-linux-gnu /usr/lib/gcc/x86_64-linux-gnu/5/../../../../lib /lib/x86_64-linux-gnu /lib/../lib /usr/lib/x86_64-linux-gnu /usr/lib/../lib /usr/lib/gcc/x86_64-linux-gnu/5/../../..'
compiler_lib_search_dirs_FC=''
predep_objects_CXX='/usr/lib/gcc/x86_64-linux-gnu/5/../../../x86_64-linux-gnu/crti.o /usr/lib/gcc/x86_64-linux-gnu/5/crtbeginS.o'
predep_objects_FC=''
postdep_objects_CXX='/usr/lib/gcc/x86_64-linux-gnu/5/crtendS.o /usr/lib/gcc/x86_64-linux-gnu/5/../../../x86_64-linux-gnu/crtn.o'
postdep_objects_FC=''
predeps_CXX=''
predeps_FC=''
postdeps_CXX='-lstdc++ -lm -lgcc_s -lpthread -lc -lgcc_s'
postdeps_FC=''
compiler_lib_search_path_CXX='-L/usr/lib/gcc/x86_64-linux-gnu/5 -L/usr/lib/gcc/x86_64-linux-gnu/5/../../../x86_64-linux-gnu -L/usr/lib/gcc/x86_64-linux-gnu/5/../../../../lib -L/lib/x86_64-linux-gnu -L/lib/../lib -L/usr/lib/x86_64-linux-gnu -L/usr/lib/../lib -L/usr/lib/gcc/x86_64-linux-gnu/5/../../..'
compiler_lib_search_path_FC=''

LTCC='gcc-5'
LTCFLAGS='-O3 -DNDEBUG -m64 -fPIC -finline-functions -fno-strict-aliasing -pthread'
compiler='gcc-5'

# A function that is used when there is no print builtin or printf.
func_fallback_echo ()
{
  eval 'cat <<_LTECHO_EOF
$1
_LTECHO_EOF'
}

# Quote evaled strings.
for var in NM AS DLLTOOL OBJDUMP SHELL ECHO PATH_SEPARATOR SED GREP EGREP FGREP LD LN_S lt_SP2NL lt_NL2SP reload_flag deplibs_check_method file_magic_cmd file_magic_glob want_nocaseglob sharedlib_from_linklib_cmd AR AR_FLAGS archiver_list_spec STRIP RANLIB CC CFLAGS compiler lt_cv_sys_global_symbol_pipe lt_cv_sys_global_symbol_to_cdecl lt_cv_sys_global_symbol_to_c_name_address lt_cv_sys_global_symbol_to_c_name_address_lib_prefix nm_file_list_spec lt_prog_compiler_no_builtin_flag lt_prog_compiler_pic lt_prog_compiler_wl lt_prog_compiler_static lt_cv_prog_compiler_c_o need_locks MANIFEST_TOOL DSYMUTIL NMEDIT LIPO OTOOL OTOOL64 shrext_cmds export_dynamic_flag_spec whole_archive_flag_spec compiler_needs_object with_gnu_ld allow_undefined_flag no_undefined_flag hardcode_libdir_flag_spec hardcode_libdir_separator exclude_expsyms include_expsyms file_list_spec variables_saved_for_relink libname_spec library_names_spec soname_spec install_override_mode finish_eval old_striplib striplib compiler_lib_search_dirs predep_objects postdep_objects predeps postdeps compiler_lib_search_path LD_CXX LD_FC reload_flag_CXX reload_flag_FC compiler_CXX compiler_FC lt_prog_compiler_no_builtin_flag_CXX lt_prog_compiler_no_builtin_flag_FC lt_prog_compiler_pic_CXX lt_prog_compiler_pic_FC lt_prog_compiler_wl_CXX lt_prog_compiler_wl_FC lt_prog_compiler_static_CXX lt_prog_compiler_static_FC lt_cv_prog_compiler_c_o_CXX lt_cv_prog_compiler_c_o_FC export_dynamic_flag_spec_CXX export_dynamic_flag_spec_FC whole_archive_flag_spec_CXX whole_archive_flag_spec_FC compiler_needs_object_CXX compiler_needs_object_FC with_gnu_ld_CXX with_gnu_ld_FC allow_undefined_flag_CXX allow_undefined_flag_FC no_undefined_flag_CXX no_undefined_flag_FC hardcode_libdir_flag_spec_CXX hardcode_libdir_flag_spec_FC hardcode_libdir_separator_CXX hardcode_libdir_separator_FC exclude_expsyms_CXX exclude_expsyms_FC include_expsyms_CXX include_expsyms_FC file_list_spec_CXX file_list_spec_FC compiler_lib_search_dirs_CXX compiler_lib_search_dirs_FC predep_objects_CXX predep_objects_FC postdep_objects_CXX postdep_objects_FC predeps_CXX predeps_FC postdeps_CXX postdeps_FC compiler_lib_search_path_CXX compiler_lib_search_path_FC; do
    case `eval \\$ECHO \\""\\$$var"\\"` in
    *[\\\`\"\$]*)
      eval "lt_$var=\\\"\`\$ECHO \"\$$var\" | \$SED \"\$sed_quote_subst\"\`\\\""
      ;;
    *)
      eval "lt_$var=\\\"\$$var\\\""
      ;;
    esac
done

# Double-quote double-evaled strings.
for var in reload_cmds old_postinstall_cmds old_postuninstall_cmds old_archive_cmds extract_expsyms_cmds old_archive_from_new_cmds old_archive_from_expsyms_cmds archive_cmds archive_expsym_cmds module_cmds module_expsym_cmds export_symbols_cmds prelink_cmds postlink_cmds postinstall_cmds postuninstall_cmds finish_cmds sys_lib_search_path_spec sys_lib_dlsearch_path_spec reload_cmds_CXX reload_cmds_FC old_archive_cmds_CXX old_archive_cmds_FC old_archive_from_new_cmds_CXX old_archive_from_new_cmds_FC old_archive_from_expsyms_cmds_CXX old_archive_from_expsyms_cmds_FC archive_cmds_CXX archive_cmds_FC archive_expsym_cmds_CXX archive_expsym_cmds_FC module_cmds_CXX module_cmds_FC module_expsym_cmds_CXX module_expsym_cmds_FC export_symbols_cmds_CXX export_symbols_cmds_FC prelink_cmds_CXX prelink_cmds_FC postlink_cmds_CXX postlink_cmds_FC; do
    case `eval \\$ECHO \\""\\$$var"\\"` in
    *[\\\`\"\$]*)
      eval "lt_$var=\\\"\`\$ECHO \"\$$var\" | \$SED -e \"\$double_quote_subst\" -e \"\$sed_quote_subst\" -e \"\$delay_variable_subst\"\`\\\""
      ;;
    *)
      eval "lt_$var=\\\"\$$var\\\""
      ;;
    esac
done

ac_aux_dir='config'
xsi_shell='yes'
lt_shell_append='yes'

# See if we are running on zsh, and set the options which allow our
# commands through without removal of \ escapes INIT.
if test -n "${ZSH_VERSION+set}" ; then
   setopt NO_GLOB_SUBST
fi


    PACKAGE='openmpi'
    VERSION='1.8.8'
    TIMESTAMP=''
    RM='rm -f'
    ofile='libtool'





ac_aux_dir='config'




# Handling of arguments.
for ac_config_target in $ac_config_targets
do
  case $ac_config_target in
    "depfiles") CONFIG_COMMANDS="$CONFIG_COMMANDS depfiles" ;;
    "ompi/include/ompi/version.h") CONFIG_FILES="$CONFIG_FILES ompi/include/ompi/version.h" ;;
    "orte/include/orte/version.h") CONFIG_FILES="$CONFIG_FILES orte/include/orte/version.h" ;;
    "oshmem/include/oshmem/version.h") CONFIG_FILES="$CONFIG_FILES oshmem/include/oshmem/version.h" ;;
    "opal/include/opal/version.h") CONFIG_FILES="$CONFIG_FILES opal/include/opal/version.h" ;;
    "opal/include/opal_config.h") CONFIG_HEADERS="$CONFIG_HEADERS opal/include/opal_config.h" ;;
    "orte/include/orte_config.h") CONFIG_HEADERS="$CONFIG_HEADERS orte/include/orte_config.h" ;;
    "ompi/include/mpi.h") CONFIG_HEADERS="$CONFIG_HEADERS ompi/include/mpi.h" ;;
    "oshmem/include/shmem.h") CONFIG_HEADERS="$CONFIG_HEADERS oshmem/include/shmem.h" ;;
    "ompi/mpi/java/Makefile") CONFIG_FILES="$CONFIG_FILES ompi/mpi/java/Makefile" ;;
    "ompi/mpi/java/java/Makefile") CONFIG_FILES="$CONFIG_FILES ompi/mpi/java/java/Makefile" ;;
    "ompi/mpi/java/c/Makefile") CONFIG_FILES="$CONFIG_FILES ompi/mpi/java/c/Makefile" ;;
    "ompi/mpi/fortran/configure-fortran-output.h") CONFIG_FILES="$CONFIG_FILES ompi/mpi/fortran/configure-fortran-output.h" ;;
    "opal/mca/common/Makefile") CONFIG_FILES="$CONFIG_FILES opal/mca/common/Makefile" ;;
    "opal/mca/common/pmi/Makefile") CONFIG_FILES="$CONFIG_FILES opal/mca/common/pmi/Makefile" ;;
    "opal/mca/backtrace/Makefile") CONFIG_FILES="$CONFIG_FILES opal/mca/backtrace/Makefile" ;;
    "opal/mca/backtrace/printstack/Makefile") CONFIG_FILES="$CONFIG_FILES opal/mca/backtrace/printstack/Makefile" ;;
    "opal/mca/backtrace/execinfo/Makefile") CONFIG_FILES="$CONFIG_FILES opal/mca/backtrace/execinfo/Makefile" ;;
    "opal/mca/backtrace/none/Makefile") CONFIG_FILES="$CONFIG_FILES opal/mca/backtrace/none/Makefile" ;;
    "opal/mca/compress/Makefile") CONFIG_FILES="$CONFIG_FILES opal/mca/compress/Makefile" ;;
    "opal/mca/compress/gzip/Makefile") CONFIG_FILES="$CONFIG_FILES opal/mca/compress/gzip/Makefile" ;;
    "opal/mca/compress/bzip/Makefile") CONFIG_FILES="$CONFIG_FILES opal/mca/compress/bzip/Makefile" ;;
    "opal/mca/crs/Makefile") CONFIG_FILES="$CONFIG_FILES opal/mca/crs/Makefile" ;;
    "opal/mca/crs/none/Makefile") CONFIG_FILES="$CONFIG_FILES opal/mca/crs/none/Makefile" ;;
    "opal/mca/crs/dmtcp/Makefile") CONFIG_FILES="$CONFIG_FILES opal/mca/crs/dmtcp/Makefile" ;;
    "opal/mca/crs/self/Makefile") CONFIG_FILES="$CONFIG_FILES opal/mca/crs/self/Makefile" ;;
    "opal/mca/crs/blcr/Makefile") CONFIG_FILES="$CONFIG_FILES opal/mca/crs/blcr/Makefile" ;;
    "opal/mca/db/Makefile") CONFIG_FILES="$CONFIG_FILES opal/mca/db/Makefile" ;;
    "opal/mca/db/print/Makefile") CONFIG_FILES="$CONFIG_FILES opal/mca/db/print/Makefile" ;;
    "opal/mca/db/hash/Makefile") CONFIG_FILES="$CONFIG_FILES opal/mca/db/hash/Makefile" ;;
    "opal/mca/db/pmi/Makefile") CONFIG_FILES="$CONFIG_FILES opal/mca/db/pmi/Makefile" ;;
    "opal/mca/db/sqlite/Makefile") CONFIG_FILES="$CONFIG_FILES opal/mca/db/sqlite/Makefile" ;;
    "opal/mca/dl/Makefile") CONFIG_FILES="$CONFIG_FILES opal/mca/dl/Makefile" ;;
    "opal/mca/dl/dlopen/Makefile") CONFIG_FILES="$CONFIG_FILES opal/mca/dl/dlopen/Makefile" ;;
    "opal/mca/dl/libltdl/Makefile") CONFIG_FILES="$CONFIG_FILES opal/mca/dl/libltdl/Makefile" ;;
    "opal/mca/event/Makefile") CONFIG_FILES="$CONFIG_FILES opal/mca/event/Makefile" ;;
    "opal/mca/event/external/Makefile") CONFIG_FILES="$CONFIG_FILES opal/mca/event/external/Makefile" ;;
    "opal/mca/event/libevent2021/Makefile") CONFIG_FILES="$CONFIG_FILES opal/mca/event/libevent2021/Makefile" ;;
    "opal/mca/event/libevent2021/libevent/include/event2/event-config.h") CONFIG_COMMANDS="$CONFIG_COMMANDS opal/mca/event/libevent2021/libevent/include/event2/event-config.h" ;;
    "opal/mca/hwloc/Makefile") CONFIG_FILES="$CONFIG_FILES opal/mca/hwloc/Makefile" ;;
    "opal/mca/hwloc/hwloc191/Makefile") CONFIG_FILES="$CONFIG_FILES opal/mca/hwloc/hwloc191/Makefile" ;;
    "opal/mca/hwloc/hwloc191/hwloc/include/private/autogen/config.h") CONFIG_HEADERS="$CONFIG_HEADERS opal/mca/hwloc/hwloc191/hwloc/include/private/autogen/config.h" ;;
    "opal/mca/hwloc/hwloc191/hwloc/include/hwloc/autogen/config.h") CONFIG_HEADERS="$CONFIG_HEADERS opal/mca/hwloc/hwloc191/hwloc/include/hwloc/autogen/config.h" ;;
    "opal/mca/hwloc/hwloc191/hwloc/Makefile") CONFIG_FILES="$CONFIG_FILES opal/mca/hwloc/hwloc191/hwloc/Makefile" ;;
    "opal/mca/hwloc/hwloc191/hwloc/include/Makefile") CONFIG_FILES="$CONFIG_FILES opal/mca/hwloc/hwloc191/hwloc/include/Makefile" ;;
    "opal/mca/hwloc/hwloc191/hwloc/src/Makefile") CONFIG_FILES="$CONFIG_FILES opal/mca/hwloc/hwloc191/hwloc/src/Makefile" ;;
    "opal/mca/hwloc/external/Makefile") CONFIG_FILES="$CONFIG_FILES opal/mca/hwloc/external/Makefile" ;;
    "opal/mca/if/Makefile") CONFIG_FILES="$CONFIG_FILES opal/mca/if/Makefile" ;;
    "opal/mca/if/solaris_ipv6/Makefile") CONFIG_FILES="$CONFIG_FILES opal/mca/if/solaris_ipv6/Makefile" ;;
    "opal/mca/if/bsdx_ipv4/Makefile") CONFIG_FILES="$CONFIG_FILES opal/mca/if/bsdx_ipv4/Makefile" ;;
    "opal/mca/if/bsdx_ipv6/Makefile") CONFIG_FILES="$CONFIG_FILES opal/mca/if/bsdx_ipv6/Makefile" ;;
    "opal/mca/if/posix_ipv4/Makefile") CONFIG_FILES="$CONFIG_FILES opal/mca/if/posix_ipv4/Makefile" ;;
    "opal/mca/if/linux_ipv6/Makefile") CONFIG_FILES="$CONFIG_FILES opal/mca/if/linux_ipv6/Makefile" ;;
    "opal/mca/installdirs/Makefile") CONFIG_FILES="$CONFIG_FILES opal/mca/installdirs/Makefile" ;;
    "opal/mca/installdirs/env/Makefile") CONFIG_FILES="$CONFIG_FILES opal/mca/installdirs/env/Makefile" ;;
    "opal/mca/installdirs/config/Makefile") CONFIG_FILES="$CONFIG_FILES opal/mca/installdirs/config/Makefile" ;;
    "opal/mca/installdirs/config/install_dirs.h") CONFIG_FILES="$CONFIG_FILES opal/mca/installdirs/config/install_dirs.h" ;;
    "opal/mca/memchecker/Makefile") CONFIG_FILES="$CONFIG_FILES opal/mca/memchecker/Makefile" ;;
    "opal/mca/memchecker/valgrind/Makefile") CONFIG_FILES="$CONFIG_FILES opal/mca/memchecker/valgrind/Makefile" ;;
    "opal/mca/memcpy/Makefile") CONFIG_FILES="$CONFIG_FILES opal/mca/memcpy/Makefile" ;;
    "opal/mca/memory/Makefile") CONFIG_FILES="$CONFIG_FILES opal/mca/memory/Makefile" ;;
    "opal/mca/memory/linux/Makefile") CONFIG_FILES="$CONFIG_FILES opal/mca/memory/linux/Makefile" ;;
    "opal/mca/memory/malloc_solaris/Makefile") CONFIG_FILES="$CONFIG_FILES opal/mca/memory/malloc_solaris/Makefile" ;;
    "opal/mca/pstat/Makefile") CONFIG_FILES="$CONFIG_FILES opal/mca/pstat/Makefile" ;;
    "opal/mca/pstat/linux/Makefile") CONFIG_FILES="$CONFIG_FILES opal/mca/pstat/linux/Makefile" ;;
    "opal/mca/pstat/test/Makefile") CONFIG_FILES="$CONFIG_FILES opal/mca/pstat/test/Makefile" ;;
    "opal/mca/sec/Makefile") CONFIG_FILES="$CONFIG_FILES opal/mca/sec/Makefile" ;;
    "opal/mca/sec/basic/Makefile") CONFIG_FILES="$CONFIG_FILES opal/mca/sec/basic/Makefile" ;;
    "opal/mca/sec/keystone/Makefile") CONFIG_FILES="$CONFIG_FILES opal/mca/sec/keystone/Makefile" ;;
    "opal/mca/shmem/Makefile") CONFIG_FILES="$CONFIG_FILES opal/mca/shmem/Makefile" ;;
    "opal/mca/shmem/mmap/Makefile") CONFIG_FILES="$CONFIG_FILES opal/mca/shmem/mmap/Makefile" ;;
    "opal/mca/shmem/posix/Makefile") CONFIG_FILES="$CONFIG_FILES opal/mca/shmem/posix/Makefile" ;;
    "opal/mca/shmem/sysv/Makefile") CONFIG_FILES="$CONFIG_FILES opal/mca/shmem/sysv/Makefile" ;;
    "opal/mca/timer/Makefile") CONFIG_FILES="$CONFIG_FILES opal/mca/timer/Makefile" ;;
    "opal/mca/timer/altix/Makefile") CONFIG_FILES="$CONFIG_FILES opal/mca/timer/altix/Makefile" ;;
    "opal/mca/timer/catamount/Makefile") CONFIG_FILES="$CONFIG_FILES opal/mca/timer/catamount/Makefile" ;;
    "opal/mca/timer/solaris/Makefile") CONFIG_FILES="$CONFIG_FILES opal/mca/timer/solaris/Makefile" ;;
    "opal/mca/timer/linux/Makefile") CONFIG_FILES="$CONFIG_FILES opal/mca/timer/linux/Makefile" ;;
    "opal/mca/timer/aix/Makefile") CONFIG_FILES="$CONFIG_FILES opal/mca/timer/aix/Makefile" ;;
    "opal/mca/timer/darwin/Makefile") CONFIG_FILES="$CONFIG_FILES opal/mca/timer/darwin/Makefile" ;;
    "orte/mca/dfs/Makefile") CONFIG_FILES="$CONFIG_FILES orte/mca/dfs/Makefile" ;;
    "orte/mca/dfs/test/Makefile") CONFIG_FILES="$CONFIG_FILES orte/mca/dfs/test/Makefile" ;;
    "orte/mca/dfs/app/Makefile") CONFIG_FILES="$CONFIG_FILES orte/mca/dfs/app/Makefile" ;;
    "orte/mca/dfs/orted/Makefile") CONFIG_FILES="$CONFIG_FILES orte/mca/dfs/orted/Makefile" ;;
    "orte/mca/errmgr/Makefile") CONFIG_FILES="$CONFIG_FILES orte/mca/errmgr/Makefile" ;;
    "orte/mca/errmgr/default_tool/Makefile") CONFIG_FILES="$CONFIG_FILES orte/mca/errmgr/default_tool/Makefile" ;;
    "orte/mca/errmgr/default_hnp/Makefile") CONFIG_FILES="$CONFIG_FILES orte/mca/errmgr/default_hnp/Makefile" ;;
    "orte/mca/errmgr/default_orted/Makefile") CONFIG_FILES="$CONFIG_FILES orte/mca/errmgr/default_orted/Makefile" ;;
    "orte/mca/errmgr/default_app/Makefile") CONFIG_FILES="$CONFIG_FILES orte/mca/errmgr/default_app/Makefile" ;;
    "orte/mca/ess/Makefile") CONFIG_FILES="$CONFIG_FILES orte/mca/ess/Makefile" ;;
    "orte/mca/ess/tool/Makefile") CONFIG_FILES="$CONFIG_FILES orte/mca/ess/tool/Makefile" ;;
    "orte/mca/ess/hnp/Makefile") CONFIG_FILES="$CONFIG_FILES orte/mca/ess/hnp/Makefile" ;;
    "orte/mca/ess/singleton/Makefile") CONFIG_FILES="$CONFIG_FILES orte/mca/ess/singleton/Makefile" ;;
    "orte/mca/ess/env/Makefile") CONFIG_FILES="$CONFIG_FILES orte/mca/ess/env/Makefile" ;;
    "orte/mca/ess/pmi/Makefile") CONFIG_FILES="$CONFIG_FILES orte/mca/ess/pmi/Makefile" ;;
    "orte/mca/ess/slurm/Makefile") CONFIG_FILES="$CONFIG_FILES orte/mca/ess/slurm/Makefile" ;;
    "orte/mca/ess/alps/Makefile") CONFIG_FILES="$CONFIG_FILES orte/mca/ess/alps/Makefile" ;;
    "orte/mca/ess/lsf/Makefile") CONFIG_FILES="$CONFIG_FILES orte/mca/ess/lsf/Makefile" ;;
    "orte/mca/ess/tm/Makefile") CONFIG_FILES="$CONFIG_FILES orte/mca/ess/tm/Makefile" ;;
    "orte/mca/filem/Makefile") CONFIG_FILES="$CONFIG_FILES orte/mca/filem/Makefile" ;;
    "orte/mca/filem/raw/Makefile") CONFIG_FILES="$CONFIG_FILES orte/mca/filem/raw/Makefile" ;;
    "orte/mca/grpcomm/Makefile") CONFIG_FILES="$CONFIG_FILES orte/mca/grpcomm/Makefile" ;;
    "orte/mca/grpcomm/bad/Makefile") CONFIG_FILES="$CONFIG_FILES orte/mca/grpcomm/bad/Makefile" ;;
    "orte/mca/grpcomm/pmi/Makefile") CONFIG_FILES="$CONFIG_FILES orte/mca/grpcomm/pmi/Makefile" ;;
    "orte/mca/iof/Makefile") CONFIG_FILES="$CONFIG_FILES orte/mca/iof/Makefile" ;;
    "orte/mca/iof/mr_orted/Makefile") CONFIG_FILES="$CONFIG_FILES orte/mca/iof/mr_orted/Makefile" ;;
    "orte/mca/iof/tool/Makefile") CONFIG_FILES="$CONFIG_FILES orte/mca/iof/tool/Makefile" ;;
    "orte/mca/iof/hnp/Makefile") CONFIG_FILES="$CONFIG_FILES orte/mca/iof/hnp/Makefile" ;;
    "orte/mca/iof/orted/Makefile") CONFIG_FILES="$CONFIG_FILES orte/mca/iof/orted/Makefile" ;;
    "orte/mca/iof/mr_hnp/Makefile") CONFIG_FILES="$CONFIG_FILES orte/mca/iof/mr_hnp/Makefile" ;;
    "orte/mca/odls/Makefile") CONFIG_FILES="$CONFIG_FILES orte/mca/odls/Makefile" ;;
    "orte/mca/odls/default/Makefile") CONFIG_FILES="$CONFIG_FILES orte/mca/odls/default/Makefile" ;;
    "orte/mca/oob/Makefile") CONFIG_FILES="$CONFIG_FILES orte/mca/oob/Makefile" ;;
    "orte/mca/oob/tcp/Makefile") CONFIG_FILES="$CONFIG_FILES orte/mca/oob/tcp/Makefile" ;;
    "orte/mca/plm/Makefile") CONFIG_FILES="$CONFIG_FILES orte/mca/plm/Makefile" ;;
    "orte/mca/plm/isolated/Makefile") CONFIG_FILES="$CONFIG_FILES orte/mca/plm/isolated/Makefile" ;;
    "orte/mca/plm/slurm/Makefile") CONFIG_FILES="$CONFIG_FILES orte/mca/plm/slurm/Makefile" ;;
    "orte/mca/plm/alps/Makefile") CONFIG_FILES="$CONFIG_FILES orte/mca/plm/alps/Makefile" ;;
    "orte/mca/plm/rsh/Makefile") CONFIG_FILES="$CONFIG_FILES orte/mca/plm/rsh/Makefile" ;;
    "orte/mca/plm/lsf/Makefile") CONFIG_FILES="$CONFIG_FILES orte/mca/plm/lsf/Makefile" ;;
    "orte/mca/plm/tm/Makefile") CONFIG_FILES="$CONFIG_FILES orte/mca/plm/tm/Makefile" ;;
    "orte/mca/ras/Makefile") CONFIG_FILES="$CONFIG_FILES orte/mca/ras/Makefile" ;;
    "orte/mca/ras/simulator/Makefile") CONFIG_FILES="$CONFIG_FILES orte/mca/ras/simulator/Makefile" ;;
    "orte/mca/ras/loadleveler/Makefile") CONFIG_FILES="$CONFIG_FILES orte/mca/ras/loadleveler/Makefile" ;;
    "orte/mca/ras/slurm/Makefile") CONFIG_FILES="$CONFIG_FILES orte/mca/ras/slurm/Makefile" ;;
    "orte/mca/ras/alps/Makefile") CONFIG_FILES="$CONFIG_FILES orte/mca/ras/alps/Makefile" ;;
    "orte/mca/ras/gridengine/Makefile") CONFIG_FILES="$CONFIG_FILES orte/mca/ras/gridengine/Makefile" ;;
    "orte/mca/ras/lsf/Makefile") CONFIG_FILES="$CONFIG_FILES orte/mca/ras/lsf/Makefile" ;;
    "orte/mca/ras/tm/Makefile") CONFIG_FILES="$CONFIG_FILES orte/mca/ras/tm/Makefile" ;;
    "orte/mca/rmaps/Makefile") CONFIG_FILES="$CONFIG_FILES orte/mca/rmaps/Makefile" ;;
    "orte/mca/rmaps/resilient/Makefile") CONFIG_FILES="$CONFIG_FILES orte/mca/rmaps/resilient/Makefile" ;;
    "orte/mca/rmaps/seq/Makefile") CONFIG_FILES="$CONFIG_FILES orte/mca/rmaps/seq/Makefile" ;;
    "orte/mca/rmaps/round_robin/Makefile") CONFIG_FILES="$CONFIG_FILES orte/mca/rmaps/round_robin/Makefile" ;;
    "orte/mca/rmaps/ppr/Makefile") CONFIG_FILES="$CONFIG_FILES orte/mca/rmaps/ppr/Makefile" ;;
    "orte/mca/rmaps/staged/Makefile") CONFIG_FILES="$CONFIG_FILES orte/mca/rmaps/staged/Makefile" ;;
    "orte/mca/rmaps/mindist/Makefile") CONFIG_FILES="$CONFIG_FILES orte/mca/rmaps/mindist/Makefile" ;;
    "orte/mca/rmaps/lama/Makefile") CONFIG_FILES="$CONFIG_FILES orte/mca/rmaps/lama/Makefile" ;;
    "orte/mca/rmaps/rank_file/Makefile") CONFIG_FILES="$CONFIG_FILES orte/mca/rmaps/rank_file/Makefile" ;;
    "orte/mca/rml/Makefile") CONFIG_FILES="$CONFIG_FILES orte/mca/rml/Makefile" ;;
    "orte/mca/rml/oob/Makefile") CONFIG_FILES="$CONFIG_FILES orte/mca/rml/oob/Makefile" ;;
    "orte/mca/rml/ftrm/Makefile") CONFIG_FILES="$CONFIG_FILES orte/mca/rml/ftrm/Makefile" ;;
    "orte/mca/routed/Makefile") CONFIG_FILES="$CONFIG_FILES orte/mca/routed/Makefile" ;;
    "orte/mca/routed/direct/Makefile") CONFIG_FILES="$CONFIG_FILES orte/mca/routed/direct/Makefile" ;;
    "orte/mca/routed/radix/Makefile") CONFIG_FILES="$CONFIG_FILES orte/mca/routed/radix/Makefile" ;;
    "orte/mca/routed/debruijn/Makefile") CONFIG_FILES="$CONFIG_FILES orte/mca/routed/debruijn/Makefile" ;;
    "orte/mca/routed/binomial/Makefile") CONFIG_FILES="$CONFIG_FILES orte/mca/routed/binomial/Makefile" ;;
    "orte/mca/sensor/Makefile") CONFIG_FILES="$CONFIG_FILES orte/mca/sensor/Makefile" ;;
    "orte/mca/sensor/resusage/Makefile") CONFIG_FILES="$CONFIG_FILES orte/mca/sensor/resusage/Makefile" ;;
    "orte/mca/sensor/file/Makefile") CONFIG_FILES="$CONFIG_FILES orte/mca/sensor/file/Makefile" ;;
    "orte/mca/sensor/heartbeat/Makefile") CONFIG_FILES="$CONFIG_FILES orte/mca/sensor/heartbeat/Makefile" ;;
    "orte/mca/sensor/ft_tester/Makefile") CONFIG_FILES="$CONFIG_FILES orte/mca/sensor/ft_tester/Makefile" ;;
    "orte/mca/snapc/Makefile") CONFIG_FILES="$CONFIG_FILES orte/mca/snapc/Makefile" ;;
    "orte/mca/snapc/full/Makefile") CONFIG_FILES="$CONFIG_FILES orte/mca/snapc/full/Makefile" ;;
    "orte/mca/sstore/Makefile") CONFIG_FILES="$CONFIG_FILES orte/mca/sstore/Makefile" ;;
    "orte/mca/sstore/stage/Makefile") CONFIG_FILES="$CONFIG_FILES orte/mca/sstore/stage/Makefile" ;;
    "orte/mca/sstore/central/Makefile") CONFIG_FILES="$CONFIG_FILES orte/mca/sstore/central/Makefile" ;;
    "orte/mca/state/Makefile") CONFIG_FILES="$CONFIG_FILES orte/mca/state/Makefile" ;;
    "orte/mca/state/app/Makefile") CONFIG_FILES="$CONFIG_FILES orte/mca/state/app/Makefile" ;;
    "orte/mca/state/staged_orted/Makefile") CONFIG_FILES="$CONFIG_FILES orte/mca/state/staged_orted/Makefile" ;;
    "orte/mca/state/staged_hnp/Makefile") CONFIG_FILES="$CONFIG_FILES orte/mca/state/staged_hnp/Makefile" ;;
    "orte/mca/state/tool/Makefile") CONFIG_FILES="$CONFIG_FILES orte/mca/state/tool/Makefile" ;;
    "orte/mca/state/hnp/Makefile") CONFIG_FILES="$CONFIG_FILES orte/mca/state/hnp/Makefile" ;;
    "orte/mca/state/orted/Makefile") CONFIG_FILES="$CONFIG_FILES orte/mca/state/orted/Makefile" ;;
    "orte/mca/state/novm/Makefile") CONFIG_FILES="$CONFIG_FILES orte/mca/state/novm/Makefile" ;;
    "ompi/mca/common/Makefile") CONFIG_FILES="$CONFIG_FILES ompi/mca/common/Makefile" ;;
    "ompi/mca/common/ugni/Makefile") CONFIG_FILES="$CONFIG_FILES ompi/mca/common/ugni/Makefile" ;;
    "ompi/mca/common/sm/Makefile") CONFIG_FILES="$CONFIG_FILES ompi/mca/common/sm/Makefile" ;;
    "ompi/mca/common/mx/Makefile") CONFIG_FILES="$CONFIG_FILES ompi/mca/common/mx/Makefile" ;;
    "ompi/mca/common/verbs/Makefile") CONFIG_FILES="$CONFIG_FILES ompi/mca/common/verbs/Makefile" ;;
    "ompi/mca/common/cuda/Makefile") CONFIG_FILES="$CONFIG_FILES ompi/mca/common/cuda/Makefile" ;;
    "ompi/mca/allocator/Makefile") CONFIG_FILES="$CONFIG_FILES ompi/mca/allocator/Makefile" ;;
    "ompi/mca/allocator/bucket/Makefile") CONFIG_FILES="$CONFIG_FILES ompi/mca/allocator/bucket/Makefile" ;;
    "ompi/mca/allocator/basic/Makefile") CONFIG_FILES="$CONFIG_FILES ompi/mca/allocator/basic/Makefile" ;;
    "ompi/mca/bcol/Makefile") CONFIG_FILES="$CONFIG_FILES ompi/mca/bcol/Makefile" ;;
    "ompi/mca/bcol/ptpcoll/Makefile") CONFIG_FILES="$CONFIG_FILES ompi/mca/bcol/ptpcoll/Makefile" ;;
    "ompi/mca/bcol/basesmuma/Makefile") CONFIG_FILES="$CONFIG_FILES ompi/mca/bcol/basesmuma/Makefile" ;;
    "ompi/mca/bml/Makefile") CONFIG_FILES="$CONFIG_FILES ompi/mca/bml/Makefile" ;;
    "ompi/mca/bml/r2/Makefile") CONFIG_FILES="$CONFIG_FILES ompi/mca/bml/r2/Makefile" ;;
    "ompi/mca/btl/Makefile") CONFIG_FILES="$CONFIG_FILES ompi/mca/btl/Makefile" ;;
    "ompi/mca/btl/self/Makefile") CONFIG_FILES="$CONFIG_FILES ompi/mca/btl/self/Makefile" ;;
    "ompi/mca/btl/smcuda/Makefile") CONFIG_FILES="$CONFIG_FILES ompi/mca/btl/smcuda/Makefile" ;;
    "ompi/mca/btl/ugni/Makefile") CONFIG_FILES="$CONFIG_FILES ompi/mca/btl/ugni/Makefile" ;;
    "ompi/mca/btl/sm/Makefile") CONFIG_FILES="$CONFIG_FILES ompi/mca/btl/sm/Makefile" ;;
    "ompi/mca/btl/scif/Makefile") CONFIG_FILES="$CONFIG_FILES ompi/mca/btl/scif/Makefile" ;;
    "ompi/mca/btl/portals4/Makefile") CONFIG_FILES="$CONFIG_FILES ompi/mca/btl/portals4/Makefile" ;;
    "ompi/mca/btl/tcp/Makefile") CONFIG_FILES="$CONFIG_FILES ompi/mca/btl/tcp/Makefile" ;;
    "ompi/mca/btl/openib/Makefile") CONFIG_FILES="$CONFIG_FILES ompi/mca/btl/openib/Makefile" ;;
    "ompi/mca/btl/vader/Makefile") CONFIG_FILES="$CONFIG_FILES ompi/mca/btl/vader/Makefile" ;;
    "ompi/mca/btl/usnic/Makefile") CONFIG_FILES="$CONFIG_FILES ompi/mca/btl/usnic/Makefile" ;;
    "ompi/mca/coll/Makefile") CONFIG_FILES="$CONFIG_FILES ompi/mca/coll/Makefile" ;;
    "ompi/mca/coll/tuned/Makefile") CONFIG_FILES="$CONFIG_FILES ompi/mca/coll/tuned/Makefile" ;;
    "ompi/mca/coll/libnbc/Makefile") CONFIG_FILES="$CONFIG_FILES ompi/mca/coll/libnbc/Makefile" ;;
    "ompi/mca/coll/self/Makefile") CONFIG_FILES="$CONFIG_FILES ompi/mca/coll/self/Makefile" ;;
    "ompi/mca/coll/sm/Makefile") CONFIG_FILES="$CONFIG_FILES ompi/mca/coll/sm/Makefile" ;;
    "ompi/mca/coll/basic/Makefile") CONFIG_FILES="$CONFIG_FILES ompi/mca/coll/basic/Makefile" ;;
    "ompi/mca/coll/inter/Makefile") CONFIG_FILES="$CONFIG_FILES ompi/mca/coll/inter/Makefile" ;;
    "ompi/mca/coll/hierarch/Makefile") CONFIG_FILES="$CONFIG_FILES ompi/mca/coll/hierarch/Makefile" ;;
    "ompi/mca/coll/hcoll/Makefile") CONFIG_FILES="$CONFIG_FILES ompi/mca/coll/hcoll/Makefile" ;;
    "ompi/mca/coll/ml/Makefile") CONFIG_FILES="$CONFIG_FILES ompi/mca/coll/ml/Makefile" ;;
    "ompi/mca/coll/fca/Makefile") CONFIG_FILES="$CONFIG_FILES ompi/mca/coll/fca/Makefile" ;;
    "ompi/mca/coll/portals4/Makefile") CONFIG_FILES="$CONFIG_FILES ompi/mca/coll/portals4/Makefile" ;;
    "ompi/mca/coll/cuda/Makefile") CONFIG_FILES="$CONFIG_FILES ompi/mca/coll/cuda/Makefile" ;;
    "ompi/mca/crcp/Makefile") CONFIG_FILES="$CONFIG_FILES ompi/mca/crcp/Makefile" ;;
    "ompi/mca/crcp/bkmrk/Makefile") CONFIG_FILES="$CONFIG_FILES ompi/mca/crcp/bkmrk/Makefile" ;;
    "ompi/mca/dpm/Makefile") CONFIG_FILES="$CONFIG_FILES ompi/mca/dpm/Makefile" ;;
    "ompi/mca/dpm/orte/Makefile") CONFIG_FILES="$CONFIG_FILES ompi/mca/dpm/orte/Makefile" ;;
    "ompi/mca/fbtl/Makefile") CONFIG_FILES="$CONFIG_FILES ompi/mca/fbtl/Makefile" ;;
    "ompi/mca/fbtl/pvfs2/Makefile") CONFIG_FILES="$CONFIG_FILES ompi/mca/fbtl/pvfs2/Makefile" ;;
    "ompi/mca/fbtl/posix/Makefile") CONFIG_FILES="$CONFIG_FILES ompi/mca/fbtl/posix/Makefile" ;;
    "ompi/mca/fcoll/Makefile") CONFIG_FILES="$CONFIG_FILES ompi/mca/fcoll/Makefile" ;;
    "ompi/mca/fcoll/individual/Makefile") CONFIG_FILES="$CONFIG_FILES ompi/mca/fcoll/individual/Makefile" ;;
    "ompi/mca/fcoll/dynamic/Makefile") CONFIG_FILES="$CONFIG_FILES ompi/mca/fcoll/dynamic/Makefile" ;;
    "ompi/mca/fcoll/ylib/Makefile") CONFIG_FILES="$CONFIG_FILES ompi/mca/fcoll/ylib/Makefile" ;;
    "ompi/mca/fcoll/static/Makefile") CONFIG_FILES="$CONFIG_FILES ompi/mca/fcoll/static/Makefile" ;;
    "ompi/mca/fcoll/two_phase/Makefile") CONFIG_FILES="$CONFIG_FILES ompi/mca/fcoll/two_phase/Makefile" ;;
    "ompi/mca/fs/Makefile") CONFIG_FILES="$CONFIG_FILES ompi/mca/fs/Makefile" ;;
    "ompi/mca/fs/ufs/Makefile") CONFIG_FILES="$CONFIG_FILES ompi/mca/fs/ufs/Makefile" ;;
    "ompi/mca/fs/pvfs2/Makefile") CONFIG_FILES="$CONFIG_FILES ompi/mca/fs/pvfs2/Makefile" ;;
    "ompi/mca/io/Makefile") CONFIG_FILES="$CONFIG_FILES ompi/mca/io/Makefile" ;;
    "ompi/mca/io/ompio/Makefile") CONFIG_FILES="$CONFIG_FILES ompi/mca/io/ompio/Makefile" ;;
    "ompi/mca/io/romio/Makefile") CONFIG_FILES="$CONFIG_FILES ompi/mca/io/romio/Makefile" ;;
    "ompi/mca/mpool/Makefile") CONFIG_FILES="$CONFIG_FILES ompi/mca/mpool/Makefile" ;;
    "ompi/mca/mpool/grdma/Makefile") CONFIG_FILES="$CONFIG_FILES ompi/mca/mpool/grdma/Makefile" ;;
    "ompi/mca/mpool/sm/Makefile") CONFIG_FILES="$CONFIG_FILES ompi/mca/mpool/sm/Makefile" ;;
    "ompi/mca/mpool/udreg/Makefile") CONFIG_FILES="$CONFIG_FILES ompi/mca/mpool/udreg/Makefile" ;;
    "ompi/mca/mpool/rgpusm/Makefile") CONFIG_FILES="$CONFIG_FILES ompi/mca/mpool/rgpusm/Makefile" ;;
    "ompi/mca/mpool/gpusm/Makefile") CONFIG_FILES="$CONFIG_FILES ompi/mca/mpool/gpusm/Makefile" ;;
    "ompi/mca/mtl/Makefile") CONFIG_FILES="$CONFIG_FILES ompi/mca/mtl/Makefile" ;;
    "ompi/mca/mtl/psm/Makefile") CONFIG_FILES="$CONFIG_FILES ompi/mca/mtl/psm/Makefile" ;;
    "ompi/mca/mtl/mxm/Makefile") CONFIG_FILES="$CONFIG_FILES ompi/mca/mtl/mxm/Makefile" ;;
    "ompi/mca/mtl/portals4/Makefile") CONFIG_FILES="$CONFIG_FILES ompi/mca/mtl/portals4/Makefile" ;;
    "ompi/mca/mtl/mx/Makefile") CONFIG_FILES="$CONFIG_FILES ompi/mca/mtl/mx/Makefile" ;;
    "ompi/mca/op/Makefile") CONFIG_FILES="$CONFIG_FILES ompi/mca/op/Makefile" ;;
    "ompi/mca/osc/Makefile") CONFIG_FILES="$CONFIG_FILES ompi/mca/osc/Makefile" ;;
    "ompi/mca/osc/sm/Makefile") CONFIG_FILES="$CONFIG_FILES ompi/mca/osc/sm/Makefile" ;;
    "ompi/mca/osc/rdma/Makefile") CONFIG_FILES="$CONFIG_FILES ompi/mca/osc/rdma/Makefile" ;;
    "ompi/mca/osc/portals4/Makefile") CONFIG_FILES="$CONFIG_FILES ompi/mca/osc/portals4/Makefile" ;;
    "ompi/mca/pml/Makefile") CONFIG_FILES="$CONFIG_FILES ompi/mca/pml/Makefile" ;;
    "ompi/mca/pml/cm/Makefile") CONFIG_FILES="$CONFIG_FILES ompi/mca/pml/cm/Makefile" ;;
    "ompi/mca/pml/bfo/Makefile") CONFIG_FILES="$CONFIG_FILES ompi/mca/pml/bfo/Makefile" ;;
    "ompi/mca/pml/crcpw/Makefile") CONFIG_FILES="$CONFIG_FILES ompi/mca/pml/crcpw/Makefile" ;;
    "ompi/mca/pml/v/Makefile") CONFIG_FILES="$CONFIG_FILES ompi/mca/pml/v/Makefile" ;;
    "ompi/mca/pml/ob1/Makefile") CONFIG_FILES="$CONFIG_FILES ompi/mca/pml/ob1/Makefile" ;;
    "ompi/mca/pubsub/Makefile") CONFIG_FILES="$CONFIG_FILES ompi/mca/pubsub/Makefile" ;;
    "ompi/mca/pubsub/pmi/Makefile") CONFIG_FILES="$CONFIG_FILES ompi/mca/pubsub/pmi/Makefile" ;;
    "ompi/mca/pubsub/orte/Makefile") CONFIG_FILES="$CONFIG_FILES ompi/mca/pubsub/orte/Makefile" ;;
    "ompi/mca/rcache/Makefile") CONFIG_FILES="$CONFIG_FILES ompi/mca/rcache/Makefile" ;;
    "ompi/mca/rcache/vma/Makefile") CONFIG_FILES="$CONFIG_FILES ompi/mca/rcache/vma/Makefile" ;;
    "ompi/mca/rte/Makefile") CONFIG_FILES="$CONFIG_FILES ompi/mca/rte/Makefile" ;;
    "ompi/mca/rte/orte/Makefile") CONFIG_FILES="$CONFIG_FILES ompi/mca/rte/orte/Makefile" ;;
    "ompi/mca/sbgp/Makefile") CONFIG_FILES="$CONFIG_FILES ompi/mca/sbgp/Makefile" ;;
    "ompi/mca/sbgp/basesmuma/Makefile") CONFIG_FILES="$CONFIG_FILES ompi/mca/sbgp/basesmuma/Makefile" ;;
    "ompi/mca/sbgp/basesmsocket/Makefile") CONFIG_FILES="$CONFIG_FILES ompi/mca/sbgp/basesmsocket/Makefile" ;;
    "ompi/mca/sbgp/p2p/Makefile") CONFIG_FILES="$CONFIG_FILES ompi/mca/sbgp/p2p/Makefile" ;;
    "ompi/mca/sharedfp/Makefile") CONFIG_FILES="$CONFIG_FILES ompi/mca/sharedfp/Makefile" ;;
    "ompi/mca/sharedfp/individual/Makefile") CONFIG_FILES="$CONFIG_FILES ompi/mca/sharedfp/individual/Makefile" ;;
    "ompi/mca/sharedfp/sm/Makefile") CONFIG_FILES="$CONFIG_FILES ompi/mca/sharedfp/sm/Makefile" ;;
    "ompi/mca/sharedfp/lockedfile/Makefile") CONFIG_FILES="$CONFIG_FILES ompi/mca/sharedfp/lockedfile/Makefile" ;;
    "ompi/mca/topo/Makefile") CONFIG_FILES="$CONFIG_FILES ompi/mca/topo/Makefile" ;;
    "ompi/mca/topo/basic/Makefile") CONFIG_FILES="$CONFIG_FILES ompi/mca/topo/basic/Makefile" ;;
    "ompi/mca/vprotocol/Makefile") CONFIG_FILES="$CONFIG_FILES ompi/mca/vprotocol/Makefile" ;;
    "ompi/mca/vprotocol/pessimist/Makefile") CONFIG_FILES="$CONFIG_FILES ompi/mca/vprotocol/pessimist/Makefile" ;;
    "oshmem/mca/atomic/Makefile") CONFIG_FILES="$CONFIG_FILES oshmem/mca/atomic/Makefile" ;;
    "oshmem/mca/atomic/basic/Makefile") CONFIG_FILES="$CONFIG_FILES oshmem/mca/atomic/basic/Makefile" ;;
    "oshmem/mca/atomic/mxm/Makefile") CONFIG_FILES="$CONFIG_FILES oshmem/mca/atomic/mxm/Makefile" ;;
    "oshmem/mca/memheap/Makefile") CONFIG_FILES="$CONFIG_FILES oshmem/mca/memheap/Makefile" ;;
    "oshmem/mca/memheap/ptmalloc/Makefile") CONFIG_FILES="$CONFIG_FILES oshmem/mca/memheap/ptmalloc/Makefile" ;;
    "oshmem/mca/memheap/buddy/Makefile") CONFIG_FILES="$CONFIG_FILES oshmem/mca/memheap/buddy/Makefile" ;;
    "oshmem/mca/scoll/Makefile") CONFIG_FILES="$CONFIG_FILES oshmem/mca/scoll/Makefile" ;;
    "oshmem/mca/scoll/basic/Makefile") CONFIG_FILES="$CONFIG_FILES oshmem/mca/scoll/basic/Makefile" ;;
    "oshmem/mca/scoll/mpi/Makefile") CONFIG_FILES="$CONFIG_FILES oshmem/mca/scoll/mpi/Makefile" ;;
    "oshmem/mca/scoll/fca/Makefile") CONFIG_FILES="$CONFIG_FILES oshmem/mca/scoll/fca/Makefile" ;;
    "oshmem/mca/spml/Makefile") CONFIG_FILES="$CONFIG_FILES oshmem/mca/spml/Makefile" ;;
    "oshmem/mca/spml/yoda/Makefile") CONFIG_FILES="$CONFIG_FILES oshmem/mca/spml/yoda/Makefile" ;;
    "oshmem/mca/spml/ikrit/Makefile") CONFIG_FILES="$CONFIG_FILES oshmem/mca/spml/ikrit/Makefile" ;;
    "oshmem/mca/sshmem/Makefile") CONFIG_FILES="$CONFIG_FILES oshmem/mca/sshmem/Makefile" ;;
    "oshmem/mca/sshmem/mmap/Makefile") CONFIG_FILES="$CONFIG_FILES oshmem/mca/sshmem/mmap/Makefile" ;;
    "oshmem/mca/sshmem/verbs/Makefile") CONFIG_FILES="$CONFIG_FILES oshmem/mca/sshmem/verbs/Makefile" ;;
    "oshmem/mca/sshmem/sysv/Makefile") CONFIG_FILES="$CONFIG_FILES oshmem/mca/sshmem/sysv/Makefile" ;;
    "ompi/mpiext/affinity/Makefile") CONFIG_FILES="$CONFIG_FILES ompi/mpiext/affinity/Makefile" ;;
    "ompi/mpiext/affinity/c/Makefile") CONFIG_FILES="$CONFIG_FILES ompi/mpiext/affinity/c/Makefile" ;;
    "ompi/mpiext/cr/Makefile") CONFIG_FILES="$CONFIG_FILES ompi/mpiext/cr/Makefile" ;;
    "ompi/mpiext/cr/c/Makefile") CONFIG_FILES="$CONFIG_FILES ompi/mpiext/cr/c/Makefile" ;;
    "ompi/contrib/vt/Makefile") CONFIG_FILES="$CONFIG_FILES ompi/contrib/vt/Makefile" ;;
    "ompi/contrib/vt/wrappers/Makefile") CONFIG_FILES="$CONFIG_FILES ompi/contrib/vt/wrappers/Makefile" ;;
    "ompi/contrib/vt/wrappers/mpicc-vt-wrapper-data.txt") CONFIG_FILES="$CONFIG_FILES ompi/contrib/vt/wrappers/mpicc-vt-wrapper-data.txt" ;;
    "ompi/contrib/vt/wrappers/mpic++-vt-wrapper-data.txt") CONFIG_FILES="$CONFIG_FILES ompi/contrib/vt/wrappers/mpic++-vt-wrapper-data.txt" ;;
    "ompi/contrib/vt/wrappers/mpifort-vt-wrapper-data.txt") CONFIG_FILES="$CONFIG_FILES ompi/contrib/vt/wrappers/mpifort-vt-wrapper-data.txt" ;;
    "ompi/contrib/libompitrace/Makefile") CONFIG_FILES="$CONFIG_FILES ompi/contrib/libompitrace/Makefile" ;;
    "libtool") CONFIG_COMMANDS="$CONFIG_COMMANDS libtool" ;;
    "orte/tools/wrappers/orte_wrapper_script") CONFIG_FILES="$CONFIG_FILES orte/tools/wrappers/orte_wrapper_script" ;;
    "ompi/tools/wrappers/ompi_wrapper_script") CONFIG_FILES="$CONFIG_FILES ompi/tools/wrappers/ompi_wrapper_script" ;;
    "Makefile") CONFIG_FILES="$CONFIG_FILES Makefile" ;;
    "config/Makefile") CONFIG_FILES="$CONFIG_FILES config/Makefile" ;;
    "contrib/Makefile") CONFIG_FILES="$CONFIG_FILES contrib/Makefile" ;;
    "contrib/dist/mofed/debian/changelog") CONFIG_FILES="$CONFIG_FILES contrib/dist/mofed/debian/changelog" ;;
    "contrib/dist/mofed/debian/control") CONFIG_FILES="$CONFIG_FILES contrib/dist/mofed/debian/control" ;;
    "contrib/dist/mofed/debian/copyright") CONFIG_FILES="$CONFIG_FILES contrib/dist/mofed/debian/copyright:LICENSE" ;;
    "test/Makefile") CONFIG_FILES="$CONFIG_FILES test/Makefile" ;;
    "test/event/Makefile") CONFIG_FILES="$CONFIG_FILES test/event/Makefile" ;;
    "test/asm/Makefile") CONFIG_FILES="$CONFIG_FILES test/asm/Makefile" ;;
    "test/datatype/Makefile") CONFIG_FILES="$CONFIG_FILES test/datatype/Makefile" ;;
    "test/class/Makefile") CONFIG_FILES="$CONFIG_FILES test/class/Makefile" ;;
    "test/support/Makefile") CONFIG_FILES="$CONFIG_FILES test/support/Makefile" ;;
    "test/threads/Makefile") CONFIG_FILES="$CONFIG_FILES test/threads/Makefile" ;;
    "test/util/Makefile") CONFIG_FILES="$CONFIG_FILES test/util/Makefile" ;;
    "contrib/dist/mofed/debian/rules") CONFIG_FILES="$CONFIG_FILES contrib/dist/mofed/debian/rules" ;;
    "contrib/dist/mofed/compile_debian_mlnx_example") CONFIG_FILES="$CONFIG_FILES contrib/dist/mofed/compile_debian_mlnx_example" ;;
    "opal/Makefile") CONFIG_FILES="$CONFIG_FILES opal/Makefile" ;;
    "opal/etc/Makefile") CONFIG_FILES="$CONFIG_FILES opal/etc/Makefile" ;;
    "opal/include/Makefile") CONFIG_FILES="$CONFIG_FILES opal/include/Makefile" ;;
    "opal/asm/Makefile") CONFIG_FILES="$CONFIG_FILES opal/asm/Makefile" ;;
    "opal/datatype/Makefile") CONFIG_FILES="$CONFIG_FILES opal/datatype/Makefile" ;;
    "opal/util/Makefile") CONFIG_FILES="$CONFIG_FILES opal/util/Makefile" ;;
    "opal/util/keyval/Makefile") CONFIG_FILES="$CONFIG_FILES opal/util/keyval/Makefile" ;;
    "opal/mca/base/Makefile") CONFIG_FILES="$CONFIG_FILES opal/mca/base/Makefile" ;;
    "opal/tools/wrappers/Makefile") CONFIG_FILES="$CONFIG_FILES opal/tools/wrappers/Makefile" ;;
    "opal/tools/wrappers/opalcc-wrapper-data.txt") CONFIG_FILES="$CONFIG_FILES opal/tools/wrappers/opalcc-wrapper-data.txt" ;;
    "opal/tools/wrappers/opalc++-wrapper-data.txt") CONFIG_FILES="$CONFIG_FILES opal/tools/wrappers/opalc++-wrapper-data.txt" ;;
    "opal/tools/wrappers/opal.pc") CONFIG_FILES="$CONFIG_FILES opal/tools/wrappers/opal.pc" ;;
    "opal/tools/opal-checkpoint/Makefile") CONFIG_FILES="$CONFIG_FILES opal/tools/opal-checkpoint/Makefile" ;;
    "opal/tools/opal-restart/Makefile") CONFIG_FILES="$CONFIG_FILES opal/tools/opal-restart/Makefile" ;;
    "orte/Makefile") CONFIG_FILES="$CONFIG_FILES orte/Makefile" ;;
    "orte/include/Makefile") CONFIG_FILES="$CONFIG_FILES orte/include/Makefile" ;;
    "orte/etc/Makefile") CONFIG_FILES="$CONFIG_FILES orte/etc/Makefile" ;;
    "orte/tools/orted/Makefile") CONFIG_FILES="$CONFIG_FILES orte/tools/orted/Makefile" ;;
    "orte/tools/orterun/Makefile") CONFIG_FILES="$CONFIG_FILES orte/tools/orterun/Makefile" ;;
    "orte/tools/wrappers/Makefile") CONFIG_FILES="$CONFIG_FILES orte/tools/wrappers/Makefile" ;;
    "orte/tools/wrappers/ortecc-wrapper-data.txt") CONFIG_FILES="$CONFIG_FILES orte/tools/wrappers/ortecc-wrapper-data.txt" ;;
    "orte/tools/wrappers/orte.pc") CONFIG_FILES="$CONFIG_FILES orte/tools/wrappers/orte.pc" ;;
    "orte/tools/orte-checkpoint/Makefile") CONFIG_FILES="$CONFIG_FILES orte/tools/orte-checkpoint/Makefile" ;;
    "orte/tools/orte-restart/Makefile") CONFIG_FILES="$CONFIG_FILES orte/tools/orte-restart/Makefile" ;;
    "orte/tools/orte-ps/Makefile") CONFIG_FILES="$CONFIG_FILES orte/tools/orte-ps/Makefile" ;;
    "orte/tools/orte-clean/Makefile") CONFIG_FILES="$CONFIG_FILES orte/tools/orte-clean/Makefile" ;;
    "orte/tools/orte-top/Makefile") CONFIG_FILES="$CONFIG_FILES orte/tools/orte-top/Makefile" ;;
    "orte/tools/orte-migrate/Makefile") CONFIG_FILES="$CONFIG_FILES orte/tools/orte-migrate/Makefile" ;;
    "orte/tools/orte-info/Makefile") CONFIG_FILES="$CONFIG_FILES orte/tools/orte-info/Makefile" ;;
    "orte/tools/orte-server/Makefile") CONFIG_FILES="$CONFIG_FILES orte/tools/orte-server/Makefile" ;;
    "ompi/Makefile") CONFIG_FILES="$CONFIG_FILES ompi/Makefile" ;;
    "ompi/etc/Makefile") CONFIG_FILES="$CONFIG_FILES ompi/etc/Makefile" ;;
    "ompi/include/Makefile") CONFIG_FILES="$CONFIG_FILES ompi/include/Makefile" ;;
    "ompi/include/mpif.h") CONFIG_FILES="$CONFIG_FILES ompi/include/mpif.h" ;;
    "ompi/include/mpif-config.h") CONFIG_FILES="$CONFIG_FILES ompi/include/mpif-config.h" ;;
    "ompi/datatype/Makefile") CONFIG_FILES="$CONFIG_FILES ompi/datatype/Makefile" ;;
    "ompi/debuggers/Makefile") CONFIG_FILES="$CONFIG_FILES ompi/debuggers/Makefile" ;;
    "ompi/mpi/c/Makefile") CONFIG_FILES="$CONFIG_FILES ompi/mpi/c/Makefile" ;;
    "ompi/mpi/c/profile/Makefile") CONFIG_FILES="$CONFIG_FILES ompi/mpi/c/profile/Makefile" ;;
    "ompi/mpi/cxx/Makefile") CONFIG_FILES="$CONFIG_FILES ompi/mpi/cxx/Makefile" ;;
    "ompi/mpi/fortran/base/Makefile") CONFIG_FILES="$CONFIG_FILES ompi/mpi/fortran/base/Makefile" ;;
    "ompi/mpi/fortran/mpif-h/Makefile") CONFIG_FILES="$CONFIG_FILES ompi/mpi/fortran/mpif-h/Makefile" ;;
    "ompi/mpi/fortran/mpif-h/profile/Makefile") CONFIG_FILES="$CONFIG_FILES ompi/mpi/fortran/mpif-h/profile/Makefile" ;;
    "ompi/mpi/fortran/use-mpi-tkr/Makefile") CONFIG_FILES="$CONFIG_FILES ompi/mpi/fortran/use-mpi-tkr/Makefile" ;;
    "ompi/mpi/fortran/use-mpi-tkr/fortran_sizes.h") CONFIG_FILES="$CONFIG_FILES ompi/mpi/fortran/use-mpi-tkr/fortran_sizes.h" ;;
    "ompi/mpi/fortran/use-mpi-tkr/fortran_kinds.sh") CONFIG_FILES="$CONFIG_FILES ompi/mpi/fortran/use-mpi-tkr/fortran_kinds.sh" ;;
    "ompi/mpi/fortran/use-mpi-ignore-tkr/Makefile") CONFIG_FILES="$CONFIG_FILES ompi/mpi/fortran/use-mpi-ignore-tkr/Makefile" ;;
    "ompi/mpi/fortran/use-mpi-ignore-tkr/mpi-ignore-tkr-interfaces.h") CONFIG_FILES="$CONFIG_FILES ompi/mpi/fortran/use-mpi-ignore-tkr/mpi-ignore-tkr-interfaces.h" ;;
    "ompi/mpi/fortran/use-mpi-ignore-tkr/mpi-ignore-tkr-file-interfaces.h") CONFIG_FILES="$CONFIG_FILES ompi/mpi/fortran/use-mpi-ignore-tkr/mpi-ignore-tkr-file-interfaces.h" ;;
    "ompi/mpi/fortran/use-mpi-f08/Makefile") CONFIG_FILES="$CONFIG_FILES ompi/mpi/fortran/use-mpi-f08/Makefile" ;;
    "ompi/mpi/fortran/use-mpi-f08-desc/Makefile") CONFIG_FILES="$CONFIG_FILES ompi/mpi/fortran/use-mpi-f08-desc/Makefile" ;;
    "ompi/mpi/fortran/mpiext/Makefile") CONFIG_FILES="$CONFIG_FILES ompi/mpi/fortran/mpiext/Makefile" ;;
    "ompi/mpi/tool/Makefile") CONFIG_FILES="$CONFIG_FILES ompi/mpi/tool/Makefile" ;;
    "ompi/mpi/tool/profile/Makefile") CONFIG_FILES="$CONFIG_FILES ompi/mpi/tool/profile/Makefile" ;;
    "ompi/tools/ompi_info/Makefile") CONFIG_FILES="$CONFIG_FILES ompi/tools/ompi_info/Makefile" ;;
    "ompi/tools/wrappers/Makefile") CONFIG_FILES="$CONFIG_FILES ompi/tools/wrappers/Makefile" ;;
    "ompi/tools/wrappers/mpicc-wrapper-data.txt") CONFIG_FILES="$CONFIG_FILES ompi/tools/wrappers/mpicc-wrapper-data.txt" ;;
    "ompi/tools/wrappers/mpic++-wrapper-data.txt") CONFIG_FILES="$CONFIG_FILES ompi/tools/wrappers/mpic++-wrapper-data.txt" ;;
    "ompi/tools/wrappers/mpifort-wrapper-data.txt") CONFIG_FILES="$CONFIG_FILES ompi/tools/wrappers/mpifort-wrapper-data.txt" ;;
    "ompi/tools/wrappers/ompi.pc") CONFIG_FILES="$CONFIG_FILES ompi/tools/wrappers/ompi.pc" ;;
    "ompi/tools/wrappers/ompi-c.pc") CONFIG_FILES="$CONFIG_FILES ompi/tools/wrappers/ompi-c.pc" ;;
    "ompi/tools/wrappers/ompi-cxx.pc") CONFIG_FILES="$CONFIG_FILES ompi/tools/wrappers/ompi-cxx.pc" ;;
    "ompi/tools/wrappers/ompi-fort.pc") CONFIG_FILES="$CONFIG_FILES ompi/tools/wrappers/ompi-fort.pc" ;;
    "ompi/tools/wrappers/mpijavac.pl") CONFIG_FILES="$CONFIG_FILES ompi/tools/wrappers/mpijavac.pl" ;;
    "oshmem/Makefile") CONFIG_FILES="$CONFIG_FILES oshmem/Makefile" ;;
    "oshmem/include/Makefile") CONFIG_FILES="$CONFIG_FILES oshmem/include/Makefile" ;;
    "oshmem/shmem/c/Makefile") CONFIG_FILES="$CONFIG_FILES oshmem/shmem/c/Makefile" ;;
    "oshmem/shmem/c/profile/Makefile") CONFIG_FILES="$CONFIG_FILES oshmem/shmem/c/profile/Makefile" ;;
    "oshmem/shmem/fortran/Makefile") CONFIG_FILES="$CONFIG_FILES oshmem/shmem/fortran/Makefile" ;;
    "oshmem/shmem/fortran/profile/Makefile") CONFIG_FILES="$CONFIG_FILES oshmem/shmem/fortran/profile/Makefile" ;;
    "oshmem/tools/oshmem_info/Makefile") CONFIG_FILES="$CONFIG_FILES oshmem/tools/oshmem_info/Makefile" ;;
    "oshmem/tools/wrappers/Makefile") CONFIG_FILES="$CONFIG_FILES oshmem/tools/wrappers/Makefile" ;;
    "oshmem/tools/wrappers/shmemcc-wrapper-data.txt") CONFIG_FILES="$CONFIG_FILES oshmem/tools/wrappers/shmemcc-wrapper-data.txt" ;;
    "oshmem/tools/wrappers/shmemfort-wrapper-data.txt") CONFIG_FILES="$CONFIG_FILES oshmem/tools/wrappers/shmemfort-wrapper-data.txt" ;;

  *) as_fn_error $? "invalid argument: \`$ac_config_target'" "$LINENO" 5;;
  esac
done


# If the user did not use the arguments to specify the items to instantiate,
# then the envvar interface is used.  Set only those that are not.
# We use the long form for the default assignment because of an extremely
# bizarre bug on SunOS 4.1.3.
if $ac_need_defaults; then
  test "${CONFIG_FILES+set}" = set || CONFIG_FILES=$config_files
  test "${CONFIG_HEADERS+set}" = set || CONFIG_HEADERS=$config_headers
  test "${CONFIG_COMMANDS+set}" = set || CONFIG_COMMANDS=$config_commands
fi

# Have a temporary directory for convenience.  Make it in the build tree
# simply because there is no reason against having it here, and in addition,
# creating and moving files from /tmp can sometimes cause problems.
# Hook for its removal unless debugging.
# Note that there is a small window in which the directory will not be cleaned:
# after its creation but before its name has been assigned to `$tmp'.
$debug ||
{
  tmp= ac_tmp=
  trap 'exit_status=$?
  : "${ac_tmp:=$tmp}"
  { test ! -d "$ac_tmp" || rm -fr "$ac_tmp"; } && exit $exit_status
' 0
  trap 'as_fn_exit 1' 1 2 13 15
}
# Create a (secure) tmp directory for tmp files.

{
  tmp=`(umask 077 && mktemp -d "./confXXXXXX") 2>/dev/null` &&
  test -d "$tmp"
}  ||
{
  tmp=./conf$$-$RANDOM
  (umask 077 && mkdir "$tmp")
} || as_fn_error $? "cannot create a temporary directory in ." "$LINENO" 5
ac_tmp=$tmp

# Set up the scripts for CONFIG_FILES section.
# No need to generate them if there are no CONFIG_FILES.
# This happens for instance with `./config.status config.h'.
if test -n "$CONFIG_FILES"; then


ac_cr=`echo X | tr X '\015'`
# On cygwin, bash can eat \r inside `` if the user requested igncr.
# But we know of no other shell where ac_cr would be empty at this
# point, so we can use a bashism as a fallback.
if test "x$ac_cr" = x; then
  eval ac_cr=\$\'\\r\'
fi
ac_cs_awk_cr=`$AWK 'BEGIN { print "a\rb" }' </dev/null 2>/dev/null`
if test "$ac_cs_awk_cr" = "a${ac_cr}b"; then
  ac_cs_awk_cr='\\r'
else
  ac_cs_awk_cr=$ac_cr
fi

echo 'BEGIN {' >"$ac_tmp/subs1.awk" &&
cat >>"$ac_tmp/subs1.awk" <<\_ACAWK &&
S["am__EXEEXT_FALSE"]=""
S["am__EXEEXT_TRUE"]="#"
S["LTLIBOBJS"]=""
S["LIBOBJS"]=""
S["ompiincludedir"]="${includedir}/openmpi"
S["ompilibdir"]="${libdir}/openmpi"
S["ompidatadir"]="${datadir}/openmpi"
S["OMPI_WRAPPER_LIBDIR"]="/home/elwardi/foam/foam-extend-4.0/ThirdParty/packages/openmpi-1.8.8/platforms/linux64GccDPDebug/lib"
S["OMPI_WRAPPER_INCLUDEDIR"]="/home/elwardi/foam/foam-extend-4.0/ThirdParty/packages/openmpi-1.8.8/platforms/linux64GccDPDebug/include"
S["OMPI_WRAPPER_FORTRAN_REQUIRED_FILE"]=""
S["OMPI_WRAPPER_CXX_REQUIRED_FILE"]=""
S["OMPI_WRAPPER_CXX_LIB"]="-lmpi_cxx"
S["OMPI_WRAPPER_EXTRA_INCLUDES"]=""
S["OMPI_WRAPPER_EXTRA_LIBS"]="-lm -lutil "
S["OMPI_PKG_CONFIG_LDFLAGS"]="    -Wl,-rpath -Wl,${libdir} -Wl,--enable-new-dtags"
S["OMPI_WRAPPER_EXTRA_LDFLAGS"]="    -Wl,-rpath -Wl,@{libdir} -Wl,--enable-new-dtags"
S["OMPI_WRAPPER_EXTRA_FCFLAGS_PREFIX"]=""
S["OMPI_WRAPPER_EXTRA_FCFLAGS"]=" "
S["OMPI_WRAPPER_EXTRA_CXXFLAGS_PREFIX"]=""
S["OMPI_WRAPPER_EXTRA_CXXFLAGS"]="-pthread "
S["OMPI_WRAPPER_EXTRA_CFLAGS_PREFIX"]=""
S["OMPI_WRAPPER_EXTRA_CFLAGS"]="-pthread "
S["OMPI_WRAPPER_EXTRA_CPPFLAGS"]="  "
S["ORTE_WRAPPER_LIBDIR"]="/home/elwardi/foam/foam-extend-4.0/ThirdParty/packages/openmpi-1.8.8/platforms/linux64GccDPDebug/lib"
S["ORTE_WRAPPER_INCLUDEDIR"]="/home/elwardi/foam/foam-extend-4.0/ThirdParty/packages/openmpi-1.8.8/platforms/linux64GccDPDebug/include"
S["ORTE_WRAPPER_EXTRA_INCLUDES"]=""
S["ORTE_WRAPPER_EXTRA_LIBS"]="-lm -lutil "
S["ORTE_PKG_CONFIG_LDFLAGS"]="    -Wl,-rpath -Wl,${libdir} -Wl,--enable-new-dtags"
S["ORTE_WRAPPER_EXTRA_LDFLAGS"]="    -Wl,-rpath -Wl,@{libdir} -Wl,--enable-new-dtags"
S["ORTE_WRAPPER_EXTRA_CFLAGS_PREFIX"]=""
S["ORTE_WRAPPER_EXTRA_CFLAGS"]="-pthread "
S["ORTE_WRAPPER_EXTRA_CPPFLAGS"]="  "
S["OPAL_WRAPPER_EXTRA_INCLUDES"]=""
S["OPAL_WRAPPER_EXTRA_LIBS"]="-lm -lutil "
S["OPAL_PKG_CONFIG_LDFLAGS"]="    -Wl,-rpath -Wl,${libdir} -Wl,--enable-new-dtags"
S["OPAL_WRAPPER_EXTRA_LDFLAGS"]="    -Wl,-rpath -Wl,@{libdir} -Wl,--enable-new-dtags"
S["OPAL_WRAPPER_EXTRA_CXXFLAGS_PREFIX"]=""
S["OPAL_WRAPPER_EXTRA_CXXFLAGS"]="-pthread "
S["OPAL_WRAPPER_EXTRA_CFLAGS_PREFIX"]=""
S["OPAL_WRAPPER_EXTRA_CFLAGS"]="-pthread "
S["OPAL_WRAPPER_EXTRA_CPPFLAGS"]="  "
S["AMCA_PARAM_SETS_DIR"]="$(ompidatadir)/amca-param-sets"
S["OMPI_LIBMPI_EXTRA_LDFLAGS"]=""
S["OMPI_LIBMPI_EXTRA_LIBS"]=""
S["FFLAGS"]=""
S["CXXCPPFLAGS"]="-I$(top_srcdir)  "
S["DEBUGGER_CFLAGS"]="-g"
S["CFLAGS_WITHOUT_OPTFLAGS"]=" -DNDEBUG -m64 -fPIC -fno-strict-aliasing -pthread"
S["OPAL_DYN_LIB_SUFFIX"]="so"
S["OPAL_DYN_LIB_PREFIX"]="lib"
S["OTOOL64"]=""
S["OTOOL"]=""
S["LIPO"]=""
S["NMEDIT"]=""
S["DSYMUTIL"]=""
S["MANIFEST_TOOL"]=":"
S["RANLIB"]="ranlib"
S["ac_ct_AR"]="ar"
S["AR"]="ar"
S["LD"]="/usr/bin/ld -m elf_x86_64"
S["SED"]="/bin/sed"
S["LIBTOOL"]="$(SHELL) $(top_builddir)/libtool"
S["DLLTOOL"]="false"
S["AS"]="as"
S["OMPI_CONTRIB_DIST_SUBDIRS"]=" contrib/libompitrace"
S["OMPI_CONTRIB_SUBDIRS"]=" contrib/libompitrace"
S["OMPI_MPIEXT_USEMPIF08_LIBS"]=""
S["OMPI_MPIEXT_USEMPIF08_DIRS"]=""
S["OMPI_MPIEXT_USEMPI_LIBS"]=""
S["OMPI_MPIEXT_USEMPI_DIRS"]=""
S["OMPI_MPIEXT_MPIFH_LIBS"]=""
S["OMPI_MPIEXT_MPIFH_DIRS"]=""
S["OMPI_MPIEXT_C_LIBS"]=""
S["OMPI_MPIEXT_C_DIRS"]=""
S["OMPI_MPIEXT_ALL_SUBDIRS"]=" mpiext/affinity mpiext/cr"
S["OMPI_BUILD_FORTRAN_USEMPI_OR_USEMPIF08_EXT_FALSE"]=""
S["OMPI_BUILD_FORTRAN_USEMPI_OR_USEMPIF08_EXT_TRUE"]="#"
S["OMPI_BUILD_FORTRAN_USEMPIF08_EXT_FALSE"]=""
S["OMPI_BUILD_FORTRAN_USEMPIF08_EXT_TRUE"]="#"
S["OMPI_BUILD_FORTRAN_USEMPI_EXT_FALSE"]=""
S["OMPI_BUILD_FORTRAN_USEMPI_EXT_TRUE"]="#"
S["MCA_PROJECT_SUBDIRS"]=" opal orte ompi oshmem"
S["MCA_ompi_mtl_DIRECT_CALL_HEADER"]=""
S["MCA_ompi_pml_DIRECT_CALL_HEADER"]=""
S["MCA_oshmem_FRAMEWORK_LIBS"]=" mca/atomic/libmca_atomic.la $(MCA_oshmem_atomic_STATIC_LTLIBS) mca/memheap/libmca_memheap.la $(MCA_oshmem_memheap_STATIC_LTLIBS) mca/scoll/libmca_s"\
"coll.la $(MCA_oshmem_scoll_STATIC_LTLIBS) mca/spml/libmca_spml.la $(MCA_oshmem_spml_STATIC_LTLIBS) mca/sshmem/libmca_sshmem.la $(MCA_oshmem_sshmem_S"\
"TATIC_LTLIBS)"
S["MCA_oshmem_FRAMEWORK_COMPONENT_STATIC_SUBDIRS"]=" $(MCA_oshmem_atomic_STATIC_SUBDIRS) $(MCA_oshmem_memheap_STATIC_SUBDIRS) $(MCA_oshmem_scoll_STATIC_SUBDIRS) $(MCA_oshmem_spml_STATIC_SUBDIRS) $(MCA"\
"_oshmem_sshmem_STATIC_SUBDIRS)"
S["MCA_oshmem_FRAMEWORK_COMPONENT_DSO_SUBDIRS"]=" $(MCA_oshmem_atomic_DSO_SUBDIRS) $(MCA_oshmem_memheap_DSO_SUBDIRS) $(MCA_oshmem_scoll_DSO_SUBDIRS) $(MCA_oshmem_spml_DSO_SUBDIRS) $(MCA_oshmem_sshm"\
"em_DSO_SUBDIRS)"
S["MCA_oshmem_FRAMEWORK_COMPONENT_ALL_SUBDIRS"]=" $(MCA_oshmem_atomic_ALL_SUBDIRS) $(MCA_oshmem_memheap_ALL_SUBDIRS) $(MCA_oshmem_scoll_ALL_SUBDIRS) $(MCA_oshmem_spml_ALL_SUBDIRS) $(MCA_oshmem_sshm"\
"em_ALL_SUBDIRS)"
S["MCA_oshmem_FRAMEWORKS_SUBDIRS"]=" mca/atomic mca/memheap mca/scoll mca/spml mca/sshmem"
S["MCA_oshmem_FRAMEWORKS"]=" atomic memheap scoll spml sshmem"
S["MCA_oshmem_sshmem_DSO_SUBDIRS"]=" mca/sshmem/mmap mca/sshmem/sysv"
S["MCA_oshmem_sshmem_STATIC_SUBDIRS"]=""
S["MCA_oshmem_sshmem_ALL_SUBDIRS"]=" mca/sshmem/mmap mca/sshmem/verbs mca/sshmem/sysv"
S["MCA_oshmem_sshmem_STATIC_LTLIBS"]=""
S["MCA_oshmem_sshmem_DSO_COMPONENTS"]=" mmap sysv"
S["MCA_oshmem_sshmem_STATIC_COMPONENTS"]=""
S["MCA_oshmem_sshmem_ALL_COMPONENTS"]=" mmap verbs sysv"
S["MCA_BUILD_oshmem_sshmem_sysv_DSO_FALSE"]="#"
S["MCA_BUILD_oshmem_sshmem_sysv_DSO_TRUE"]=""
S["MCA_BUILD_oshmem_sshmem_verbs_DSO_FALSE"]="#"
S["MCA_BUILD_oshmem_sshmem_verbs_DSO_TRUE"]=""
S["oshmem_verbs_LIBS"]=""
S["oshmem_verbs_LDFLAGS"]=""
S["oshmem_verbs_CPPFLAGS"]=" -I/usr/include/infiniband"
S["oshmem_verbs_CFLAGS"]=""
S["MCA_BUILD_oshmem_sshmem_mmap_DSO_FALSE"]="#"
S["MCA_BUILD_oshmem_sshmem_mmap_DSO_TRUE"]=""
S["MCA_oshmem_spml_DIRECT_CALL_HEADER"]=""
S["MCA_oshmem_spml_DSO_SUBDIRS"]=" mca/spml/yoda"
S["MCA_oshmem_spml_STATIC_SUBDIRS"]=""
S["MCA_oshmem_spml_ALL_SUBDIRS"]=" mca/spml/yoda mca/spml/ikrit"
S["MCA_oshmem_spml_STATIC_LTLIBS"]=""
S["MCA_oshmem_spml_DSO_COMPONENTS"]=" yoda"
S["MCA_oshmem_spml_STATIC_COMPONENTS"]=""
S["MCA_oshmem_spml_ALL_COMPONENTS"]=" yoda ikrit"
S["MCA_BUILD_oshmem_spml_ikrit_DSO_FALSE"]="#"
S["MCA_BUILD_oshmem_spml_ikrit_DSO_TRUE"]=""
S["spml_ikrit_LIBS"]=""
S["spml_ikrit_LDFLAGS"]=""
S["spml_ikrit_CPPFLAGS"]=""
S["spml_ikrit_CFLAGS"]=""
S["MCA_BUILD_oshmem_spml_yoda_DSO_FALSE"]="#"
S["MCA_BUILD_oshmem_spml_yoda_DSO_TRUE"]=""
S["MCA_oshmem_scoll_DSO_SUBDIRS"]=" mca/scoll/basic mca/scoll/mpi"
S["MCA_oshmem_scoll_STATIC_SUBDIRS"]=""
S["MCA_oshmem_scoll_ALL_SUBDIRS"]=" mca/scoll/basic mca/scoll/mpi mca/scoll/fca"
S["MCA_oshmem_scoll_STATIC_LTLIBS"]=""
S["MCA_oshmem_scoll_DSO_COMPONENTS"]=" basic mpi"
S["MCA_oshmem_scoll_STATIC_COMPONENTS"]=""
S["MCA_oshmem_scoll_ALL_COMPONENTS"]=" basic mpi fca"
S["MCA_BUILD_oshmem_scoll_fca_DSO_FALSE"]="#"
S["MCA_BUILD_oshmem_scoll_fca_DSO_TRUE"]=""
S["scoll_fca_HOME"]=""
S["scoll_fca_LIBS"]=""
S["scoll_fca_LDFLAGS"]=""
S["scoll_fca_CPPFLAGS"]=""
S["scoll_fca_CFLAGS"]=""
S["MCA_BUILD_oshmem_scoll_mpi_DSO_FALSE"]="#"
S["MCA_BUILD_oshmem_scoll_mpi_DSO_TRUE"]=""
S["MCA_BUILD_oshmem_scoll_basic_DSO_FALSE"]="#"
S["MCA_BUILD_oshmem_scoll_basic_DSO_TRUE"]=""
S["MCA_oshmem_memheap_DIRECT_CALL_HEADER"]=""
S["MCA_oshmem_memheap_DSO_SUBDIRS"]=" mca/memheap/ptmalloc mca/memheap/buddy"
S["MCA_oshmem_memheap_STATIC_SUBDIRS"]=""
S["MCA_oshmem_memheap_ALL_SUBDIRS"]=" mca/memheap/ptmalloc mca/memheap/buddy"
S["MCA_oshmem_memheap_STATIC_LTLIBS"]=""
S["MCA_oshmem_memheap_DSO_COMPONENTS"]=" ptmalloc buddy"
S["MCA_oshmem_memheap_STATIC_COMPONENTS"]=""
S["MCA_oshmem_memheap_ALL_COMPONENTS"]=" ptmalloc buddy"
S["MCA_BUILD_oshmem_memheap_buddy_DSO_FALSE"]="#"
S["MCA_BUILD_oshmem_memheap_buddy_DSO_TRUE"]=""
S["MCA_BUILD_oshmem_memheap_ptmalloc_DSO_FALSE"]="#"
S["MCA_BUILD_oshmem_memheap_ptmalloc_DSO_TRUE"]=""
S["MCA_oshmem_atomic_DSO_SUBDIRS"]=" mca/atomic/basic"
S["MCA_oshmem_atomic_STATIC_SUBDIRS"]=""
S["MCA_oshmem_atomic_ALL_SUBDIRS"]=" mca/atomic/basic mca/atomic/mxm"
S["MCA_oshmem_atomic_STATIC_LTLIBS"]=""
S["MCA_oshmem_atomic_DSO_COMPONENTS"]=" basic"
S["MCA_oshmem_atomic_STATIC_COMPONENTS"]=""
S["MCA_oshmem_atomic_ALL_COMPONENTS"]=" basic mxm"
S["MCA_BUILD_oshmem_atomic_mxm_DSO_FALSE"]="#"
S["MCA_BUILD_oshmem_atomic_mxm_DSO_TRUE"]=""
S["atomic_mxm_LIBS"]=""
S["atomic_mxm_LDFLAGS"]=""
S["atomic_mxm_CPPFLAGS"]=""
S["atomic_mxm_CFLAGS"]=""
S["MCA_BUILD_oshmem_atomic_basic_DSO_FALSE"]="#"
S["MCA_BUILD_oshmem_atomic_basic_DSO_TRUE"]=""
S["MCA_ompi_FRAMEWORK_LIBS"]=" $(MCA_ompi_common_STATIC_LTLIBS) mca/allocator/libmca_allocator.la $(MCA_ompi_allocator_STATIC_LTLIBS) mca/bcol/libmca_bcol.la $(MCA_ompi_bcol_STAT"\
"IC_LTLIBS) mca/bml/libmca_bml.la $(MCA_ompi_bml_STATIC_LTLIBS) mca/btl/libmca_btl.la $(MCA_ompi_btl_STATIC_LTLIBS) mca/coll/libmca_coll.la $(MCA_omp"\
"i_coll_STATIC_LTLIBS) mca/crcp/libmca_crcp.la $(MCA_ompi_crcp_STATIC_LTLIBS) mca/dpm/libmca_dpm.la $(MCA_ompi_dpm_STATIC_LTLIBS) mca/fbtl/libmca_fbt"\
"l.la $(MCA_ompi_fbtl_STATIC_LTLIBS) mca/fcoll/libmca_fcoll.la $(MCA_ompi_fcoll_STATIC_LTLIBS) mca/fs/libmca_fs.la $(MCA_ompi_fs_STATIC_LTLIBS) mca/i"\
"o/libmca_io.la $(MCA_ompi_io_STATIC_LTLIBS) mca/mpool/libmca_mpool.la $(MCA_ompi_mpool_STATIC_LTLIBS) mca/mtl/libmca_mtl.la $(MCA_ompi_mtl_STATIC_LT"\
"LIBS) mca/op/libmca_op.la $(MCA_ompi_op_STATIC_LTLIBS) mca/osc/libmca_osc.la $(MCA_ompi_osc_STATIC_LTLIBS) mca/pml/libmca_pml.la $(MCA_ompi_pml_STAT"\
"IC_LTLIBS) mca/pubsub/libmca_pubsub.la $(MCA_ompi_pubsub_STATIC_LTLIBS) mca/rcache/libmca_rcache.la $(MCA_ompi_rcache_STATIC_LTLIBS) mca/rte/libmca_"\
"rte.la $(MCA_ompi_rte_STATIC_LTLIBS) mca/sbgp/libmca_sbgp.la $(MCA_ompi_sbgp_STATIC_LTLIBS) mca/sharedfp/libmca_sharedfp.la $(MCA_ompi_sharedfp_STAT"\
"IC_LTLIBS) mca/topo/libmca_topo.la $(MCA_ompi_topo_STATIC_LTLIBS) mca/vprotocol/libmca_vprotocol.la $(MCA_ompi_vprotocol_STATIC_LTLIBS)"
S["MCA_ompi_FRAMEWORK_COMPONENT_STATIC_SUBDIRS"]="$(MCA_ompi_common_STATIC_SUBDIRS)  $(MCA_ompi_allocator_STATIC_SUBDIRS) $(MCA_ompi_bcol_STATIC_SUBDIRS) $(MCA_ompi_bml_STATIC_SUBDIRS) $(MCA_ompi_bt"\
"l_STATIC_SUBDIRS) $(MCA_ompi_coll_STATIC_SUBDIRS) $(MCA_ompi_crcp_STATIC_SUBDIRS) $(MCA_ompi_dpm_STATIC_SUBDIRS) $(MCA_ompi_fbtl_STATIC_SUBDIRS) $(M"\
"CA_ompi_fcoll_STATIC_SUBDIRS) $(MCA_ompi_fs_STATIC_SUBDIRS) $(MCA_ompi_io_STATIC_SUBDIRS) $(MCA_ompi_mpool_STATIC_SUBDIRS) $(MCA_ompi_mtl_STATIC_SUB"\
"DIRS) $(MCA_ompi_op_STATIC_SUBDIRS) $(MCA_ompi_osc_STATIC_SUBDIRS) $(MCA_ompi_pml_STATIC_SUBDIRS) $(MCA_ompi_pubsub_STATIC_SUBDIRS) $(MCA_ompi_rcach"\
"e_STATIC_SUBDIRS) $(MCA_ompi_rte_STATIC_SUBDIRS) $(MCA_ompi_sbgp_STATIC_SUBDIRS) $(MCA_ompi_sharedfp_STATIC_SUBDIRS) $(MCA_ompi_topo_STATIC_SUBDIRS)"\
" $(MCA_ompi_vprotocol_STATIC_SUBDIRS)"
S["MCA_ompi_FRAMEWORK_COMPONENT_DSO_SUBDIRS"]="$(MCA_ompi_common_DSO_SUBDIRS)  $(MCA_ompi_allocator_DSO_SUBDIRS) $(MCA_ompi_bcol_DSO_SUBDIRS) $(MCA_ompi_bml_DSO_SUBDIRS) $(MCA_ompi_btl_DSO_SUBDIR"\
"S) $(MCA_ompi_coll_DSO_SUBDIRS) $(MCA_ompi_crcp_DSO_SUBDIRS) $(MCA_ompi_dpm_DSO_SUBDIRS) $(MCA_ompi_fbtl_DSO_SUBDIRS) $(MCA_ompi_fcoll_DSO_SUBDIRS) "\
"$(MCA_ompi_fs_DSO_SUBDIRS) $(MCA_ompi_io_DSO_SUBDIRS) $(MCA_ompi_mpool_DSO_SUBDIRS) $(MCA_ompi_mtl_DSO_SUBDIRS) $(MCA_ompi_op_DSO_SUBDIRS) $(MCA_omp"\
"i_osc_DSO_SUBDIRS) $(MCA_ompi_pml_DSO_SUBDIRS) $(MCA_ompi_pubsub_DSO_SUBDIRS) $(MCA_ompi_rcache_DSO_SUBDIRS) $(MCA_ompi_rte_DSO_SUBDIRS) $(MCA_ompi_"\
"sbgp_DSO_SUBDIRS) $(MCA_ompi_sharedfp_DSO_SUBDIRS) $(MCA_ompi_topo_DSO_SUBDIRS) $(MCA_ompi_vprotocol_DSO_SUBDIRS)"
S["MCA_ompi_FRAMEWORK_COMPONENT_ALL_SUBDIRS"]="$(MCA_ompi_common_ALL_SUBDIRS)  $(MCA_ompi_allocator_ALL_SUBDIRS) $(MCA_ompi_bcol_ALL_SUBDIRS) $(MCA_ompi_bml_ALL_SUBDIRS) $(MCA_ompi_btl_ALL_SUBDIR"\
"S) $(MCA_ompi_coll_ALL_SUBDIRS) $(MCA_ompi_crcp_ALL_SUBDIRS) $(MCA_ompi_dpm_ALL_SUBDIRS) $(MCA_ompi_fbtl_ALL_SUBDIRS) $(MCA_ompi_fcoll_ALL_SUBDIRS) "\
"$(MCA_ompi_fs_ALL_SUBDIRS) $(MCA_ompi_io_ALL_SUBDIRS) $(MCA_ompi_mpool_ALL_SUBDIRS) $(MCA_ompi_mtl_ALL_SUBDIRS) $(MCA_ompi_op_ALL_SUBDIRS) $(MCA_omp"\
"i_osc_ALL_SUBDIRS) $(MCA_ompi_pml_ALL_SUBDIRS) $(MCA_ompi_pubsub_ALL_SUBDIRS) $(MCA_ompi_rcache_ALL_SUBDIRS) $(MCA_ompi_rte_ALL_SUBDIRS) $(MCA_ompi_"\
"sbgp_ALL_SUBDIRS) $(MCA_ompi_sharedfp_ALL_SUBDIRS) $(MCA_ompi_topo_ALL_SUBDIRS) $(MCA_ompi_vprotocol_ALL_SUBDIRS)"
S["MCA_ompi_FRAMEWORKS_SUBDIRS"]="mca/common  mca/allocator mca/bcol mca/bml mca/btl mca/coll mca/crcp mca/dpm mca/fbtl mca/fcoll mca/fs mca/io mca/mpool mca/mtl mca/op mca/osc mca/p"\
"ml mca/pubsub mca/rcache mca/rte mca/sbgp mca/sharedfp mca/topo mca/vprotocol"
S["MCA_ompi_FRAMEWORKS"]="common  allocator bcol bml btl coll crcp dpm fbtl fcoll fs io mpool mtl op osc pml pubsub rcache rte sbgp sharedfp topo vprotocol"
S["MCA_ompi_vprotocol_DSO_SUBDIRS"]=" mca/vprotocol/pessimist"
S["MCA_ompi_vprotocol_STATIC_SUBDIRS"]=""
S["MCA_ompi_vprotocol_ALL_SUBDIRS"]=" mca/vprotocol/pessimist"
S["MCA_ompi_vprotocol_STATIC_LTLIBS"]=""
S["MCA_ompi_vprotocol_DSO_COMPONENTS"]=" pessimist"
S["MCA_ompi_vprotocol_STATIC_COMPONENTS"]=""
S["MCA_ompi_vprotocol_ALL_COMPONENTS"]=" pessimist"
S["MCA_BUILD_ompi_vprotocol_pessimist_DSO_FALSE"]="#"
S["MCA_BUILD_ompi_vprotocol_pessimist_DSO_TRUE"]=""
S["MCA_ompi_topo_DSO_SUBDIRS"]=" mca/topo/basic"
S["MCA_ompi_topo_STATIC_SUBDIRS"]=""
S["MCA_ompi_topo_ALL_SUBDIRS"]=" mca/topo/basic"
S["MCA_ompi_topo_STATIC_LTLIBS"]=""
S["MCA_ompi_topo_DSO_COMPONENTS"]=" basic"
S["MCA_ompi_topo_STATIC_COMPONENTS"]=""
S["MCA_ompi_topo_ALL_COMPONENTS"]=" basic"
S["MCA_BUILD_ompi_topo_basic_DSO_FALSE"]="#"
S["MCA_BUILD_ompi_topo_basic_DSO_TRUE"]=""
S["MCA_ompi_sharedfp_DSO_SUBDIRS"]=" mca/sharedfp/individual mca/sharedfp/sm mca/sharedfp/lockedfile"
S["MCA_ompi_sharedfp_STATIC_SUBDIRS"]=""
S["MCA_ompi_sharedfp_ALL_SUBDIRS"]=" mca/sharedfp/individual mca/sharedfp/sm mca/sharedfp/lockedfile"
S["MCA_ompi_sharedfp_STATIC_LTLIBS"]=""
S["MCA_ompi_sharedfp_DSO_COMPONENTS"]=" individual sm lockedfile"
S["MCA_ompi_sharedfp_STATIC_COMPONENTS"]=""
S["MCA_ompi_sharedfp_ALL_COMPONENTS"]=" individual sm lockedfile"
S["MCA_BUILD_ompi_sharedfp_lockedfile_DSO_FALSE"]="#"
S["MCA_BUILD_ompi_sharedfp_lockedfile_DSO_TRUE"]=""
S["MCA_BUILD_ompi_sharedfp_sm_DSO_FALSE"]="#"
S["MCA_BUILD_ompi_sharedfp_sm_DSO_TRUE"]=""
S["MCA_BUILD_ompi_sharedfp_individual_DSO_FALSE"]="#"
S["MCA_BUILD_ompi_sharedfp_individual_DSO_TRUE"]=""
S["MCA_ompi_sbgp_DSO_SUBDIRS"]=" mca/sbgp/basesmuma mca/sbgp/basesmsocket mca/sbgp/p2p"
S["MCA_ompi_sbgp_STATIC_SUBDIRS"]=""
S["MCA_ompi_sbgp_ALL_SUBDIRS"]=" mca/sbgp/basesmuma mca/sbgp/basesmsocket mca/sbgp/p2p"
S["MCA_ompi_sbgp_STATIC_LTLIBS"]=""
S["MCA_ompi_sbgp_DSO_COMPONENTS"]=" basesmuma basesmsocket p2p"
S["MCA_ompi_sbgp_STATIC_COMPONENTS"]=""
S["MCA_ompi_sbgp_ALL_COMPONENTS"]=" basesmuma basesmsocket p2p"
S["MCA_BUILD_ompi_sbgp_p2p_DSO_FALSE"]="#"
S["MCA_BUILD_ompi_sbgp_p2p_DSO_TRUE"]=""
S["MCA_BUILD_ompi_sbgp_basesmsocket_DSO_FALSE"]="#"
S["MCA_BUILD_ompi_sbgp_basesmsocket_DSO_TRUE"]=""
S["MCA_BUILD_ompi_sbgp_basesmuma_DSO_FALSE"]="#"
S["MCA_BUILD_ompi_sbgp_basesmuma_DSO_TRUE"]=""
S["MCA_ompi_rte_DSO_SUBDIRS"]=""
S["MCA_ompi_rte_STATIC_SUBDIRS"]=" mca/rte/orte"
S["MCA_ompi_rte_ALL_SUBDIRS"]=" mca/rte/orte"
S["MCA_ompi_rte_STATIC_LTLIBS"]="mca/rte/orte/libmca_rte_orte.la "
S["MCA_ompi_rte_DSO_COMPONENTS"]=""
S["MCA_ompi_rte_STATIC_COMPONENTS"]=" orte"
S["MCA_ompi_rte_ALL_COMPONENTS"]=" orte"
S["MCA_BUILD_ompi_rte_orte_DSO_FALSE"]=""
S["MCA_BUILD_ompi_rte_orte_DSO_TRUE"]="#"
S["OMPI_RTE_ORTE_FALSE"]="#"
S["OMPI_RTE_ORTE_TRUE"]=""
S["MCA_ompi_rcache_DSO_SUBDIRS"]=" mca/rcache/vma"
S["MCA_ompi_rcache_STATIC_SUBDIRS"]=""
S["MCA_ompi_rcache_ALL_SUBDIRS"]=" mca/rcache/vma"
S["MCA_ompi_rcache_STATIC_LTLIBS"]=""
S["MCA_ompi_rcache_DSO_COMPONENTS"]=" vma"
S["MCA_ompi_rcache_STATIC_COMPONENTS"]=""
S["MCA_ompi_rcache_ALL_COMPONENTS"]=" vma"
S["MCA_BUILD_ompi_rcache_vma_DSO_FALSE"]="#"
S["MCA_BUILD_ompi_rcache_vma_DSO_TRUE"]=""
S["MCA_ompi_pubsub_DSO_SUBDIRS"]=" mca/pubsub/orte"
S["MCA_ompi_pubsub_STATIC_SUBDIRS"]=""
S["MCA_ompi_pubsub_ALL_SUBDIRS"]=" mca/pubsub/pmi mca/pubsub/orte"
S["MCA_ompi_pubsub_STATIC_LTLIBS"]=""
S["MCA_ompi_pubsub_DSO_COMPONENTS"]=" orte"
S["MCA_ompi_pubsub_STATIC_COMPONENTS"]=""
S["MCA_ompi_pubsub_ALL_COMPONENTS"]=" pmi orte"
S["MCA_BUILD_ompi_pubsub_orte_DSO_FALSE"]="#"
S["MCA_BUILD_ompi_pubsub_orte_DSO_TRUE"]=""
S["MCA_BUILD_ompi_pubsub_pmi_DSO_FALSE"]="#"
S["MCA_BUILD_ompi_pubsub_pmi_DSO_TRUE"]=""
S["pubsub_pmi_LIBS"]=""
S["pubsub_pmi_LDFLAGS"]=""
S["pubsub_pmi_CPPFLAGS"]=""
S["MCA_ompi_pml_DSO_SUBDIRS"]=" mca/pml/cm mca/pml/bfo mca/pml/ob1"
S["MCA_ompi_pml_STATIC_SUBDIRS"]=" mca/pml/v"
S["MCA_ompi_pml_ALL_SUBDIRS"]=" mca/pml/cm mca/pml/bfo mca/pml/crcpw mca/pml/v mca/pml/ob1"
S["MCA_ompi_pml_STATIC_LTLIBS"]="mca/pml/v/libmca_pml_v.la "
S["MCA_ompi_pml_DSO_COMPONENTS"]=" cm bfo ob1"
S["MCA_ompi_pml_STATIC_COMPONENTS"]=" v"
S["MCA_ompi_pml_ALL_COMPONENTS"]=" cm bfo crcpw v ob1"
S["MCA_BUILD_ompi_pml_ob1_DSO_FALSE"]="#"
S["MCA_BUILD_ompi_pml_ob1_DSO_TRUE"]=""
S["MCA_BUILD_ompi_pml_v_DSO_FALSE"]=""
S["MCA_BUILD_ompi_pml_v_DSO_TRUE"]="#"
S["MCA_BUILD_ompi_pml_crcpw_DSO_FALSE"]="#"
S["MCA_BUILD_ompi_pml_crcpw_DSO_TRUE"]=""
S["MCA_BUILD_ompi_pml_bfo_DSO_FALSE"]="#"
S["MCA_BUILD_ompi_pml_bfo_DSO_TRUE"]=""
S["MCA_BUILD_ompi_pml_cm_DSO_FALSE"]="#"
S["MCA_BUILD_ompi_pml_cm_DSO_TRUE"]=""
S["MCA_ompi_osc_DSO_SUBDIRS"]=" mca/osc/sm mca/osc/rdma"
S["MCA_ompi_osc_STATIC_SUBDIRS"]=""
S["MCA_ompi_osc_ALL_SUBDIRS"]=" mca/osc/sm mca/osc/rdma mca/osc/portals4"
S["MCA_ompi_osc_STATIC_LTLIBS"]=""
S["MCA_ompi_osc_DSO_COMPONENTS"]=" sm rdma"
S["MCA_ompi_osc_STATIC_COMPONENTS"]=""
S["MCA_ompi_osc_ALL_COMPONENTS"]=" sm rdma portals4"
S["MCA_BUILD_ompi_osc_portals4_DSO_FALSE"]="#"
S["MCA_BUILD_ompi_osc_portals4_DSO_TRUE"]=""
S["osc_portals4_LIBS"]=""
S["osc_portals4_LDFLAGS"]=""
S["osc_portals4_CPPFLAGS"]=""
S["MCA_BUILD_ompi_osc_rdma_DSO_FALSE"]="#"
S["MCA_BUILD_ompi_osc_rdma_DSO_TRUE"]=""
S["MCA_BUILD_ompi_osc_sm_DSO_FALSE"]="#"
S["MCA_BUILD_ompi_osc_sm_DSO_TRUE"]=""
S["MCA_ompi_op_DSO_SUBDIRS"]=""
S["MCA_ompi_op_STATIC_SUBDIRS"]=""
S["MCA_ompi_op_ALL_SUBDIRS"]=""
S["MCA_ompi_op_STATIC_LTLIBS"]=""
S["MCA_ompi_op_DSO_COMPONENTS"]=""
S["MCA_ompi_op_STATIC_COMPONENTS"]=""
S["MCA_ompi_op_ALL_COMPONENTS"]=""
S["MCA_ompi_mtl_DSO_SUBDIRS"]=""
S["MCA_ompi_mtl_STATIC_SUBDIRS"]=""
S["MCA_ompi_mtl_ALL_SUBDIRS"]=" mca/mtl/psm mca/mtl/mxm mca/mtl/portals4 mca/mtl/mx"
S["MCA_ompi_mtl_STATIC_LTLIBS"]=""
S["MCA_ompi_mtl_DSO_COMPONENTS"]=""
S["MCA_ompi_mtl_STATIC_COMPONENTS"]=""
S["MCA_ompi_mtl_ALL_COMPONENTS"]=" psm mxm portals4 mx"
S["MCA_BUILD_ompi_mtl_mx_DSO_FALSE"]="#"
S["MCA_BUILD_ompi_mtl_mx_DSO_TRUE"]=""
S["mtl_mx_LIBS"]=""
S["mtl_mx_LDFLAGS"]=""
S["mtl_mx_CPPFLAGS"]=""
S["mtl_mx_CFLAGS"]=""
S["MCA_BUILD_ompi_mtl_portals4_DSO_FALSE"]="#"
S["MCA_BUILD_ompi_mtl_portals4_DSO_TRUE"]=""
S["mtl_portals4_LIBS"]=""
S["mtl_portals4_LDFLAGS"]=""
S["mtl_portals4_CPPFLAGS"]=""
S["OMPI_MTL_PORTALS4_FLOW_CONTROL_FALSE"]="#"
S["OMPI_MTL_PORTALS4_FLOW_CONTROL_TRUE"]=""
S["MCA_BUILD_ompi_mtl_mxm_DSO_FALSE"]="#"
S["MCA_BUILD_ompi_mtl_mxm_DSO_TRUE"]=""
S["mtl_mxm_LIBS"]=""
S["mtl_mxm_LDFLAGS"]=""
S["mtl_mxm_CPPFLAGS"]=""
S["mtl_mxm_CFLAGS"]=""
S["MCA_BUILD_ompi_mtl_psm_DSO_FALSE"]="#"
S["MCA_BUILD_ompi_mtl_psm_DSO_TRUE"]=""
S["mtl_psm_LIBS"]=""
S["mtl_psm_LDFLAGS"]=""
S["mtl_psm_CPPFLAGS"]=""
S["mtl_psm_CFLAGS"]=""
S["MCA_ompi_mpool_DSO_SUBDIRS"]=" mca/mpool/grdma mca/mpool/sm"
S["MCA_ompi_mpool_STATIC_SUBDIRS"]=""
S["MCA_ompi_mpool_ALL_SUBDIRS"]=" mca/mpool/grdma mca/mpool/sm mca/mpool/udreg mca/mpool/rgpusm mca/mpool/gpusm"
S["MCA_ompi_mpool_STATIC_LTLIBS"]=""
S["MCA_ompi_mpool_DSO_COMPONENTS"]=" grdma sm"
S["MCA_ompi_mpool_STATIC_COMPONENTS"]=""
S["MCA_ompi_mpool_ALL_COMPONENTS"]=" grdma sm udreg rgpusm gpusm"
S["MCA_BUILD_ompi_mpool_gpusm_DSO_FALSE"]="#"
S["MCA_BUILD_ompi_mpool_gpusm_DSO_TRUE"]=""
S["MCA_BUILD_ompi_mpool_rgpusm_DSO_FALSE"]="#"
S["MCA_BUILD_ompi_mpool_rgpusm_DSO_TRUE"]=""
S["MCA_BUILD_ompi_mpool_udreg_DSO_FALSE"]="#"
S["MCA_BUILD_ompi_mpool_udreg_DSO_TRUE"]=""
S["mpool_udreg_LIBS"]=""
S["mpool_udreg_LDFLAGS"]=""
S["mpool_udreg_CPPFLAGS"]=""
S["MCA_BUILD_ompi_mpool_sm_DSO_FALSE"]="#"
S["MCA_BUILD_ompi_mpool_sm_DSO_TRUE"]=""
S["MCA_BUILD_ompi_mpool_grdma_DSO_FALSE"]="#"
S["MCA_BUILD_ompi_mpool_grdma_DSO_TRUE"]=""
S["OMPI_PROVIDE_MPI_FILE_INTERFACE_FALSE"]="#"
S["OMPI_PROVIDE_MPI_FILE_INTERFACE_TRUE"]=""
S["OMPI_PROVIDE_MPI_FILE_INTERFACE"]="1"
S["MCA_ompi_io_DSO_SUBDIRS"]=" mca/io/ompio mca/io/romio"
S["MCA_ompi_io_STATIC_SUBDIRS"]=""
S["MCA_ompi_io_ALL_SUBDIRS"]=" mca/io/ompio mca/io/romio"
S["MCA_ompi_io_STATIC_LTLIBS"]=""
S["MCA_ompi_io_DSO_COMPONENTS"]=" ompio romio"
S["MCA_ompi_io_STATIC_COMPONENTS"]=""
S["MCA_ompi_io_ALL_COMPONENTS"]=" ompio romio"
S["MCA_BUILD_ompi_io_romio_DSO_FALSE"]="#"
S["MCA_BUILD_ompi_io_romio_DSO_TRUE"]=""
S["MCA_io_romio_SHOULD_BUILD_FALSE"]="#"
S["MCA_io_romio_SHOULD_BUILD_TRUE"]=""
S["MCA_BUILD_ompi_io_ompio_DSO_FALSE"]="#"
S["MCA_BUILD_ompi_io_ompio_DSO_TRUE"]=""
S["OMPI_MPIF_IO_HANDLES_INCLUDE"]="include \"mpif-io-handles.h\""
S["OMPI_MPIF_IO_CONSTANTS_INCLUDE"]="include \"mpif-io-constants.h\""
S["MCA_ompi_fs_DSO_SUBDIRS"]=" mca/fs/ufs"
S["MCA_ompi_fs_STATIC_SUBDIRS"]=""
S["MCA_ompi_fs_ALL_SUBDIRS"]=" mca/fs/ufs mca/fs/pvfs2"
S["MCA_ompi_fs_STATIC_LTLIBS"]=""
S["MCA_ompi_fs_DSO_COMPONENTS"]=" ufs"
S["MCA_ompi_fs_STATIC_COMPONENTS"]=""
S["MCA_ompi_fs_ALL_COMPONENTS"]=" ufs pvfs2"
S["MCA_BUILD_ompi_fs_pvfs2_DSO_FALSE"]="#"
S["MCA_BUILD_ompi_fs_pvfs2_DSO_TRUE"]=""
S["fs_pvfs2_LIBS"]=" -lpvfs2 -lpthread"
S["fs_pvfs2_LDFLAGS"]="-L/usr/local/lib"
S["fs_pvfs2_CPPFLAGS"]="-I/usr/local/include"
S["MCA_BUILD_ompi_fs_ufs_DSO_FALSE"]="#"
S["MCA_BUILD_ompi_fs_ufs_DSO_TRUE"]=""
S["MCA_ompi_fcoll_DSO_SUBDIRS"]=" mca/fcoll/individual mca/fcoll/dynamic mca/fcoll/ylib mca/fcoll/static mca/fcoll/two_phase"
S["MCA_ompi_fcoll_STATIC_SUBDIRS"]=""
S["MCA_ompi_fcoll_ALL_SUBDIRS"]=" mca/fcoll/individual mca/fcoll/dynamic mca/fcoll/ylib mca/fcoll/static mca/fcoll/two_phase"
S["MCA_ompi_fcoll_STATIC_LTLIBS"]=""
S["MCA_ompi_fcoll_DSO_COMPONENTS"]=" individual dynamic ylib static two_phase"
S["MCA_ompi_fcoll_STATIC_COMPONENTS"]=""
S["MCA_ompi_fcoll_ALL_COMPONENTS"]=" individual dynamic ylib static two_phase"
S["MCA_BUILD_ompi_fcoll_two_phase_DSO_FALSE"]="#"
S["MCA_BUILD_ompi_fcoll_two_phase_DSO_TRUE"]=""
S["MCA_BUILD_ompi_fcoll_static_DSO_FALSE"]="#"
S["MCA_BUILD_ompi_fcoll_static_DSO_TRUE"]=""
S["MCA_BUILD_ompi_fcoll_ylib_DSO_FALSE"]="#"
S["MCA_BUILD_ompi_fcoll_ylib_DSO_TRUE"]=""
S["MCA_BUILD_ompi_fcoll_dynamic_DSO_FALSE"]="#"
S["MCA_BUILD_ompi_fcoll_dynamic_DSO_TRUE"]=""
S["MCA_BUILD_ompi_fcoll_individual_DSO_FALSE"]="#"
S["MCA_BUILD_ompi_fcoll_individual_DSO_TRUE"]=""
S["MCA_ompi_fbtl_DSO_SUBDIRS"]=" mca/fbtl/posix"
S["MCA_ompi_fbtl_STATIC_SUBDIRS"]=""
S["MCA_ompi_fbtl_ALL_SUBDIRS"]=" mca/fbtl/pvfs2 mca/fbtl/posix"
S["MCA_ompi_fbtl_STATIC_LTLIBS"]=""
S["MCA_ompi_fbtl_DSO_COMPONENTS"]=" posix"
S["MCA_ompi_fbtl_STATIC_COMPONENTS"]=""
S["MCA_ompi_fbtl_ALL_COMPONENTS"]=" pvfs2 posix"
S["MCA_BUILD_ompi_fbtl_posix_DSO_FALSE"]="#"
S["MCA_BUILD_ompi_fbtl_posix_DSO_TRUE"]=""
S["MCA_BUILD_ompi_fbtl_pvfs2_DSO_FALSE"]="#"
S["MCA_BUILD_ompi_fbtl_pvfs2_DSO_TRUE"]=""
S["fbtl_pvfs2_LIBS"]=" -lpvfs2 -lpthread"
S["fbtl_pvfs2_LDFLAGS"]="-L/usr/local/lib"
S["fbtl_pvfs2_CPPFLAGS"]="-I/usr/local/include"
S["MCA_ompi_dpm_DSO_SUBDIRS"]=" mca/dpm/orte"
S["MCA_ompi_dpm_STATIC_SUBDIRS"]=""
S["MCA_ompi_dpm_ALL_SUBDIRS"]=" mca/dpm/orte"
S["MCA_ompi_dpm_STATIC_LTLIBS"]=""
S["MCA_ompi_dpm_DSO_COMPONENTS"]=" orte"
S["MCA_ompi_dpm_STATIC_COMPONENTS"]=""
S["MCA_ompi_dpm_ALL_COMPONENTS"]=" orte"
S["MCA_BUILD_ompi_dpm_orte_DSO_FALSE"]="#"
S["MCA_BUILD_ompi_dpm_orte_DSO_TRUE"]=""
S["MCA_ompi_crcp_DSO_SUBDIRS"]=""
S["MCA_ompi_crcp_STATIC_SUBDIRS"]=""
S["MCA_ompi_crcp_ALL_SUBDIRS"]=" mca/crcp/bkmrk"
S["MCA_ompi_crcp_STATIC_LTLIBS"]=""
S["MCA_ompi_crcp_DSO_COMPONENTS"]=""
S["MCA_ompi_crcp_STATIC_COMPONENTS"]=""
S["MCA_ompi_crcp_ALL_COMPONENTS"]=" bkmrk"
S["MCA_BUILD_ompi_crcp_bkmrk_DSO_FALSE"]="#"
S["MCA_BUILD_ompi_crcp_bkmrk_DSO_TRUE"]=""
S["MCA_ompi_coll_DSO_SUBDIRS"]=" mca/coll/tuned mca/coll/libnbc mca/coll/self mca/coll/sm mca/coll/basic mca/coll/inter mca/coll/hierarch mca/coll/ml"
S["MCA_ompi_coll_STATIC_SUBDIRS"]=""
S["MCA_ompi_coll_ALL_SUBDIRS"]=" mca/coll/tuned mca/coll/libnbc mca/coll/self mca/coll/sm mca/coll/basic mca/coll/inter mca/coll/hierarch mca/coll/hcoll mca/coll/ml mca/coll/fca mc"\
"a/coll/portals4 mca/coll/cuda"
S["MCA_ompi_coll_STATIC_LTLIBS"]=""
S["MCA_ompi_coll_DSO_COMPONENTS"]=" tuned libnbc self sm basic inter hierarch ml"
S["MCA_ompi_coll_STATIC_COMPONENTS"]=""
S["MCA_ompi_coll_ALL_COMPONENTS"]=" tuned libnbc self sm basic inter hierarch hcoll ml fca portals4 cuda"
S["MCA_BUILD_ompi_coll_cuda_DSO_FALSE"]="#"
S["MCA_BUILD_ompi_coll_cuda_DSO_TRUE"]=""
S["MCA_BUILD_ompi_coll_portals4_DSO_FALSE"]="#"
S["MCA_BUILD_ompi_coll_portals4_DSO_TRUE"]=""
S["coll_portals4_LIBS"]=""
S["coll_portals4_LDFLAGS"]=""
S["coll_portals4_CPPFLAGS"]=""
S["MCA_BUILD_ompi_coll_fca_DSO_FALSE"]="#"
S["MCA_BUILD_ompi_coll_fca_DSO_TRUE"]=""
S["coll_fca_LIBS"]=""
S["coll_fca_LDFLAGS"]=""
S["coll_fca_CPPFLAGS"]=""
S["coll_fca_CFLAGS"]=""
S["coll_fca_HOME"]=""
S["coll_fca_extra_CPPFLAGS"]=""
S["MCA_BUILD_ompi_coll_ml_DSO_FALSE"]="#"
S["MCA_BUILD_ompi_coll_ml_DSO_TRUE"]=""
S["MCA_BUILD_ompi_coll_hcoll_DSO_FALSE"]="#"
S["MCA_BUILD_ompi_coll_hcoll_DSO_TRUE"]=""
S["coll_hcoll_LIBS"]=""
S["coll_hcoll_LDFLAGS"]=""
S["coll_hcoll_CPPFLAGS"]=""
S["coll_hcoll_CFLAGS"]=""
S["coll_hcoll_HOME"]=""
S["coll_hcoll_extra_CPPFLAGS"]=""
S["MCA_BUILD_ompi_coll_hierarch_DSO_FALSE"]="#"
S["MCA_BUILD_ompi_coll_hierarch_DSO_TRUE"]=""
S["MCA_BUILD_ompi_coll_inter_DSO_FALSE"]="#"
S["MCA_BUILD_ompi_coll_inter_DSO_TRUE"]=""
S["MCA_BUILD_ompi_coll_basic_DSO_FALSE"]="#"
S["MCA_BUILD_ompi_coll_basic_DSO_TRUE"]=""
S["MCA_BUILD_ompi_coll_sm_DSO_FALSE"]="#"
S["MCA_BUILD_ompi_coll_sm_DSO_TRUE"]=""
S["MCA_BUILD_ompi_coll_self_DSO_FALSE"]="#"
S["MCA_BUILD_ompi_coll_self_DSO_TRUE"]=""
S["MCA_BUILD_ompi_coll_libnbc_DSO_FALSE"]="#"
S["MCA_BUILD_ompi_coll_libnbc_DSO_TRUE"]=""
S["MCA_BUILD_ompi_coll_tuned_DSO_FALSE"]="#"
S["MCA_BUILD_ompi_coll_tuned_DSO_TRUE"]=""
S["MCA_ompi_btl_DSO_SUBDIRS"]=" mca/btl/self mca/btl/sm mca/btl/tcp mca/btl/vader"
S["MCA_ompi_btl_STATIC_SUBDIRS"]=""
S["MCA_ompi_btl_ALL_SUBDIRS"]=" mca/btl/self mca/btl/smcuda mca/btl/ugni mca/btl/sm mca/btl/scif mca/btl/portals4 mca/btl/tcp mca/btl/openib mca/btl/vader mca/btl/usnic"
S["MCA_ompi_btl_STATIC_LTLIBS"]=""
S["MCA_ompi_btl_DSO_COMPONENTS"]=" self sm tcp vader"
S["MCA_ompi_btl_STATIC_COMPONENTS"]=""
S["MCA_ompi_btl_ALL_COMPONENTS"]=" self smcuda ugni sm scif portals4 tcp openib vader usnic"
S["MCA_BUILD_ompi_btl_usnic_DSO_FALSE"]="#"
S["MCA_BUILD_ompi_btl_usnic_DSO_TRUE"]=""
S["OMPI_BTL_USNIC_BUILD_LIBNL3_UTILS_FALSE"]=""
S["OMPI_BTL_USNIC_BUILD_LIBNL3_UTILS_TRUE"]="#"
S["OMPI_BTL_USNIC_BUILD_LIBNL1_UTILS_FALSE"]=""
S["OMPI_BTL_USNIC_BUILD_LIBNL1_UTILS_TRUE"]="#"
S["OMPI_BTL_USNIC_BUILD_UNIT_TESTS_FALSE"]=""
S["OMPI_BTL_USNIC_BUILD_UNIT_TESTS_TRUE"]="#"
S["btl_usnic_LIBS"]=""
S["btl_usnic_LDFLAGS"]=""
S["btl_usnic_CFLAGS"]=""
S["btl_usnic_CPPFLAGS"]=" -I/usr/include/infiniband"
S["MCA_BUILD_ompi_btl_vader_DSO_FALSE"]="#"
S["MCA_BUILD_ompi_btl_vader_DSO_TRUE"]=""
S["btl_vader_LIBS"]=""
S["btl_vader_LDFLAGS"]=""
S["btl_vader_CPPFLAGS"]=""
S["btl_vader_CFLAGS"]=""
S["MCA_BUILD_ompi_btl_openib_DSO_FALSE"]="#"
S["MCA_BUILD_ompi_btl_openib_DSO_TRUE"]=""
S["MCA_btl_openib_have_udcm_FALSE"]=""
S["MCA_btl_openib_have_udcm_TRUE"]="#"
S["MCA_btl_openib_have_dynamic_sl_FALSE"]=""
S["MCA_btl_openib_have_dynamic_sl_TRUE"]="#"
S["MCA_btl_openib_have_rdmacm_FALSE"]=""
S["MCA_btl_openib_have_rdmacm_TRUE"]="#"
S["MCA_btl_openib_have_xrc_FALSE"]=""
S["MCA_btl_openib_have_xrc_TRUE"]="#"
S["btl_openib_LIBS"]=""
S["btl_openib_LDFLAGS"]=""
S["btl_openib_CPPFLAGS"]=" -I/usr/include/infiniband"
S["btl_openib_CFLAGS"]=""
S["MCA_btl_openib_enable_failover_FALSE"]=""
S["MCA_btl_openib_enable_failover_TRUE"]="#"
S["MCA_BUILD_ompi_btl_tcp_DSO_FALSE"]="#"
S["MCA_BUILD_ompi_btl_tcp_DSO_TRUE"]=""
S["MCA_BUILD_ompi_btl_portals4_DSO_FALSE"]="#"
S["MCA_BUILD_ompi_btl_portals4_DSO_TRUE"]=""
S["btl_portals4_LIBS"]=""
S["btl_portals4_LDFLAGS"]=""
S["btl_portals4_CPPFLAGS"]=""
S["OMPI_BTL_PORTALS4_FLOW_CONTROL_FALSE"]=""
S["OMPI_BTL_PORTALS4_FLOW_CONTROL_TRUE"]="#"
S["MCA_BUILD_ompi_btl_scif_DSO_FALSE"]="#"
S["MCA_BUILD_ompi_btl_scif_DSO_TRUE"]=""
S["btl_scif_LIBS"]=""
S["btl_scif_LDFLAGS"]=""
S["btl_scif_CPPFLAGS"]=""
S["MCA_BUILD_ompi_btl_sm_DSO_FALSE"]="#"
S["MCA_BUILD_ompi_btl_sm_DSO_TRUE"]=""
S["btl_sm_CPPFLAGS"]=""
S["MCA_BUILD_ompi_btl_ugni_DSO_FALSE"]="#"
S["MCA_BUILD_ompi_btl_ugni_DSO_TRUE"]=""
S["btl_ugni_LIBS"]=""
S["btl_ugni_LDFLAGS"]=""
S["btl_ugni_CPPFLAGS"]=""
S["MCA_BUILD_ompi_btl_smcuda_DSO_FALSE"]="#"
S["MCA_BUILD_ompi_btl_smcuda_DSO_TRUE"]=""
S["MCA_BUILD_ompi_btl_self_DSO_FALSE"]="#"
S["MCA_BUILD_ompi_btl_self_DSO_TRUE"]=""
S["MCA_ompi_bml_DSO_SUBDIRS"]=" mca/bml/r2"
S["MCA_ompi_bml_STATIC_SUBDIRS"]=""
S["MCA_ompi_bml_ALL_SUBDIRS"]=" mca/bml/r2"
S["MCA_ompi_bml_STATIC_LTLIBS"]=""
S["MCA_ompi_bml_DSO_COMPONENTS"]=" r2"
S["MCA_ompi_bml_STATIC_COMPONENTS"]=""
S["MCA_ompi_bml_ALL_COMPONENTS"]=" r2"
S["MCA_BUILD_ompi_bml_r2_DSO_FALSE"]="#"
S["MCA_BUILD_ompi_bml_r2_DSO_TRUE"]=""
S["MCA_ompi_bcol_DSO_SUBDIRS"]=" mca/bcol/ptpcoll mca/bcol/basesmuma"
S["MCA_ompi_bcol_STATIC_SUBDIRS"]=""
S["MCA_ompi_bcol_ALL_SUBDIRS"]=" mca/bcol/ptpcoll mca/bcol/basesmuma"
S["MCA_ompi_bcol_STATIC_LTLIBS"]=""
S["MCA_ompi_bcol_DSO_COMPONENTS"]=" ptpcoll basesmuma"
S["MCA_ompi_bcol_STATIC_COMPONENTS"]=""
S["MCA_ompi_bcol_ALL_COMPONENTS"]=" ptpcoll basesmuma"
S["MCA_BUILD_ompi_bcol_basesmuma_DSO_FALSE"]="#"
S["MCA_BUILD_ompi_bcol_basesmuma_DSO_TRUE"]=""
S["MCA_BUILD_ompi_bcol_ptpcoll_DSO_FALSE"]="#"
S["MCA_BUILD_ompi_bcol_ptpcoll_DSO_TRUE"]=""
S["MCA_ompi_allocator_DSO_SUBDIRS"]=" mca/allocator/bucket mca/allocator/basic"
S["MCA_ompi_allocator_STATIC_SUBDIRS"]=""
S["MCA_ompi_allocator_ALL_SUBDIRS"]=" mca/allocator/bucket mca/allocator/basic"
S["MCA_ompi_allocator_STATIC_LTLIBS"]=""
S["MCA_ompi_allocator_DSO_COMPONENTS"]=" bucket basic"
S["MCA_ompi_allocator_STATIC_COMPONENTS"]=""
S["MCA_ompi_allocator_ALL_COMPONENTS"]=" bucket basic"
S["MCA_BUILD_ompi_allocator_basic_DSO_FALSE"]="#"
S["MCA_BUILD_ompi_allocator_basic_DSO_TRUE"]=""
S["MCA_BUILD_ompi_allocator_bucket_DSO_FALSE"]="#"
S["MCA_BUILD_ompi_allocator_bucket_DSO_TRUE"]=""
S["MCA_ompi_common_DSO_SUBDIRS"]=" mca/common/sm"
S["MCA_ompi_common_STATIC_SUBDIRS"]=""
S["MCA_ompi_common_ALL_SUBDIRS"]=" mca/common/ugni mca/common/sm mca/common/mx mca/common/verbs mca/common/cuda"
S["MCA_ompi_common_STATIC_LTLIBS"]=""
S["MCA_ompi_common_DSO_COMPONENTS"]=" sm"
S["MCA_ompi_common_STATIC_COMPONENTS"]=""
S["MCA_ompi_common_ALL_COMPONENTS"]=" ugni sm mx verbs cuda"
S["MCA_BUILD_ompi_common_cuda_DSO_FALSE"]="#"
S["MCA_BUILD_ompi_common_cuda_DSO_TRUE"]=""
S["common_cuda_CPPFLAGS"]=""
S["MCA_BUILD_ompi_common_verbs_DSO_FALSE"]="#"
S["MCA_BUILD_ompi_common_verbs_DSO_TRUE"]=""
S["common_verbs_LIBS"]=""
S["common_verbs_LDFLAGS"]=""
S["common_verbs_CPPFLAGS"]=" -I/usr/include/infiniband"
S["common_verbs_CFLAGS"]=""
S["MCA_BUILD_ompi_common_mx_DSO_FALSE"]="#"
S["MCA_BUILD_ompi_common_mx_DSO_TRUE"]=""
S["common_mx_LIBS"]=""
S["common_mx_LDFLAGS"]=""
S["common_mx_CPPFLAGS"]=""
S["common_mx_CFLAGS"]=""
S["MCA_BUILD_ompi_common_sm_DSO_FALSE"]="#"
S["MCA_BUILD_ompi_common_sm_DSO_TRUE"]=""
S["MCA_BUILD_ompi_common_ugni_DSO_FALSE"]="#"
S["MCA_BUILD_ompi_common_ugni_DSO_TRUE"]=""
S["common_ugni_LIBS"]=""
S["common_ugni_LDFLAGS"]=""
S["common_ugni_CPPFLAGS"]=""
S["MCA_orte_FRAMEWORK_LIBS"]=" mca/dfs/libmca_dfs.la $(MCA_orte_dfs_STATIC_LTLIBS) mca/errmgr/libmca_errmgr.la $(MCA_orte_errmgr_STATIC_LTLIBS) mca/ess/libmca_ess.la $(MCA_orte_e"\
"ss_STATIC_LTLIBS) mca/filem/libmca_filem.la $(MCA_orte_filem_STATIC_LTLIBS) mca/grpcomm/libmca_grpcomm.la $(MCA_orte_grpcomm_STATIC_LTLIBS) mca/iof/"\
"libmca_iof.la $(MCA_orte_iof_STATIC_LTLIBS) mca/odls/libmca_odls.la $(MCA_orte_odls_STATIC_LTLIBS) mca/oob/libmca_oob.la $(MCA_orte_oob_STATIC_LTLIB"\
"S) mca/plm/libmca_plm.la $(MCA_orte_plm_STATIC_LTLIBS) mca/ras/libmca_ras.la $(MCA_orte_ras_STATIC_LTLIBS) mca/rmaps/libmca_rmaps.la $(MCA_orte_rmap"\
"s_STATIC_LTLIBS) mca/rml/libmca_rml.la $(MCA_orte_rml_STATIC_LTLIBS) mca/routed/libmca_routed.la $(MCA_orte_routed_STATIC_LTLIBS) mca/sensor/libmca_"\
"sensor.la $(MCA_orte_sensor_STATIC_LTLIBS) mca/snapc/libmca_snapc.la $(MCA_orte_snapc_STATIC_LTLIBS) mca/sstore/libmca_sstore.la $(MCA_orte_sstore_S"\
"TATIC_LTLIBS) mca/state/libmca_state.la $(MCA_orte_state_STATIC_LTLIBS)"
S["MCA_orte_FRAMEWORK_COMPONENT_STATIC_SUBDIRS"]=" $(MCA_orte_dfs_STATIC_SUBDIRS) $(MCA_orte_errmgr_STATIC_SUBDIRS) $(MCA_orte_ess_STATIC_SUBDIRS) $(MCA_orte_filem_STATIC_SUBDIRS) $(MCA_orte_grpcomm"\
"_STATIC_SUBDIRS) $(MCA_orte_iof_STATIC_SUBDIRS) $(MCA_orte_odls_STATIC_SUBDIRS) $(MCA_orte_oob_STATIC_SUBDIRS) $(MCA_orte_plm_STATIC_SUBDIRS) $(MCA_"\
"orte_ras_STATIC_SUBDIRS) $(MCA_orte_rmaps_STATIC_SUBDIRS) $(MCA_orte_rml_STATIC_SUBDIRS) $(MCA_orte_routed_STATIC_SUBDIRS) $(MCA_orte_sensor_STATIC_"\
"SUBDIRS) $(MCA_orte_snapc_STATIC_SUBDIRS) $(MCA_orte_sstore_STATIC_SUBDIRS) $(MCA_orte_state_STATIC_SUBDIRS)"
S["MCA_orte_FRAMEWORK_COMPONENT_DSO_SUBDIRS"]=" $(MCA_orte_dfs_DSO_SUBDIRS) $(MCA_orte_errmgr_DSO_SUBDIRS) $(MCA_orte_ess_DSO_SUBDIRS) $(MCA_orte_filem_DSO_SUBDIRS) $(MCA_orte_grpcomm_DSO_SUBDIRS"\
") $(MCA_orte_iof_DSO_SUBDIRS) $(MCA_orte_odls_DSO_SUBDIRS) $(MCA_orte_oob_DSO_SUBDIRS) $(MCA_orte_plm_DSO_SUBDIRS) $(MCA_orte_ras_DSO_SUBDIRS) $(MCA"\
"_orte_rmaps_DSO_SUBDIRS) $(MCA_orte_rml_DSO_SUBDIRS) $(MCA_orte_routed_DSO_SUBDIRS) $(MCA_orte_sensor_DSO_SUBDIRS) $(MCA_orte_snapc_DSO_SUBDIRS) $(M"\
"CA_orte_sstore_DSO_SUBDIRS) $(MCA_orte_state_DSO_SUBDIRS)"
S["MCA_orte_FRAMEWORK_COMPONENT_ALL_SUBDIRS"]=" $(MCA_orte_dfs_ALL_SUBDIRS) $(MCA_orte_errmgr_ALL_SUBDIRS) $(MCA_orte_ess_ALL_SUBDIRS) $(MCA_orte_filem_ALL_SUBDIRS) $(MCA_orte_grpcomm_ALL_SUBDIRS"\
") $(MCA_orte_iof_ALL_SUBDIRS) $(MCA_orte_odls_ALL_SUBDIRS) $(MCA_orte_oob_ALL_SUBDIRS) $(MCA_orte_plm_ALL_SUBDIRS) $(MCA_orte_ras_ALL_SUBDIRS) $(MCA"\
"_orte_rmaps_ALL_SUBDIRS) $(MCA_orte_rml_ALL_SUBDIRS) $(MCA_orte_routed_ALL_SUBDIRS) $(MCA_orte_sensor_ALL_SUBDIRS) $(MCA_orte_snapc_ALL_SUBDIRS) $(M"\
"CA_orte_sstore_ALL_SUBDIRS) $(MCA_orte_state_ALL_SUBDIRS)"
S["MCA_orte_FRAMEWORKS_SUBDIRS"]=" mca/dfs mca/errmgr mca/ess mca/filem mca/grpcomm mca/iof mca/odls mca/oob mca/plm mca/ras mca/rmaps mca/rml mca/routed mca/sensor mca/snapc mca/sst"\
"ore mca/state"
S["MCA_orte_FRAMEWORKS"]=" dfs errmgr ess filem grpcomm iof odls oob plm ras rmaps rml routed sensor snapc sstore state"
S["MCA_orte_state_DSO_SUBDIRS"]=" mca/state/app mca/state/staged_orted mca/state/staged_hnp mca/state/tool mca/state/hnp mca/state/orted mca/state/novm"
S["MCA_orte_state_STATIC_SUBDIRS"]=""
S["MCA_orte_state_ALL_SUBDIRS"]=" mca/state/app mca/state/staged_orted mca/state/staged_hnp mca/state/tool mca/state/hnp mca/state/orted mca/state/novm"
S["MCA_orte_state_STATIC_LTLIBS"]=""
S["MCA_orte_state_DSO_COMPONENTS"]=" app staged_orted staged_hnp tool hnp orted novm"
S["MCA_orte_state_STATIC_COMPONENTS"]=""
S["MCA_orte_state_ALL_COMPONENTS"]=" app staged_orted staged_hnp tool hnp orted novm"
S["MCA_BUILD_orte_state_novm_DSO_FALSE"]="#"
S["MCA_BUILD_orte_state_novm_DSO_TRUE"]=""
S["MCA_BUILD_orte_state_orted_DSO_FALSE"]="#"
S["MCA_BUILD_orte_state_orted_DSO_TRUE"]=""
S["MCA_BUILD_orte_state_hnp_DSO_FALSE"]="#"
S["MCA_BUILD_orte_state_hnp_DSO_TRUE"]=""
S["MCA_BUILD_orte_state_tool_DSO_FALSE"]="#"
S["MCA_BUILD_orte_state_tool_DSO_TRUE"]=""
S["MCA_BUILD_orte_state_staged_hnp_DSO_FALSE"]="#"
S["MCA_BUILD_orte_state_staged_hnp_DSO_TRUE"]=""
S["MCA_BUILD_orte_state_staged_orted_DSO_FALSE"]="#"
S["MCA_BUILD_orte_state_staged_orted_DSO_TRUE"]=""
S["MCA_BUILD_orte_state_app_DSO_FALSE"]="#"
S["MCA_BUILD_orte_state_app_DSO_TRUE"]=""
S["MCA_orte_sstore_DSO_SUBDIRS"]=""
S["MCA_orte_sstore_STATIC_SUBDIRS"]=""
S["MCA_orte_sstore_ALL_SUBDIRS"]=" mca/sstore/stage mca/sstore/central"
S["MCA_orte_sstore_STATIC_LTLIBS"]=""
S["MCA_orte_sstore_DSO_COMPONENTS"]=""
S["MCA_orte_sstore_STATIC_COMPONENTS"]=""
S["MCA_orte_sstore_ALL_COMPONENTS"]=" stage central"
S["MCA_BUILD_orte_sstore_central_DSO_FALSE"]="#"
S["MCA_BUILD_orte_sstore_central_DSO_TRUE"]=""
S["MCA_BUILD_orte_sstore_stage_DSO_FALSE"]="#"
S["MCA_BUILD_orte_sstore_stage_DSO_TRUE"]=""
S["MCA_orte_snapc_DSO_SUBDIRS"]=""
S["MCA_orte_snapc_STATIC_SUBDIRS"]=""
S["MCA_orte_snapc_ALL_SUBDIRS"]=" mca/snapc/full"
S["MCA_orte_snapc_STATIC_LTLIBS"]=""
S["MCA_orte_snapc_DSO_COMPONENTS"]=""
S["MCA_orte_snapc_STATIC_COMPONENTS"]=""
S["MCA_orte_snapc_ALL_COMPONENTS"]=" full"
S["MCA_BUILD_orte_snapc_full_DSO_FALSE"]="#"
S["MCA_BUILD_orte_snapc_full_DSO_TRUE"]=""
S["MCA_orte_sensor_DSO_SUBDIRS"]=""
S["MCA_orte_sensor_STATIC_SUBDIRS"]=""
S["MCA_orte_sensor_ALL_SUBDIRS"]=" mca/sensor/resusage mca/sensor/file mca/sensor/heartbeat mca/sensor/ft_tester"
S["MCA_orte_sensor_STATIC_LTLIBS"]=""
S["MCA_orte_sensor_DSO_COMPONENTS"]=""
S["MCA_orte_sensor_STATIC_COMPONENTS"]=""
S["MCA_orte_sensor_ALL_COMPONENTS"]=" resusage file heartbeat ft_tester"
S["MCA_BUILD_orte_sensor_ft_tester_DSO_FALSE"]="#"
S["MCA_BUILD_orte_sensor_ft_tester_DSO_TRUE"]=""
S["MCA_BUILD_orte_sensor_heartbeat_DSO_FALSE"]="#"
S["MCA_BUILD_orte_sensor_heartbeat_DSO_TRUE"]=""
S["MCA_BUILD_orte_sensor_file_DSO_FALSE"]="#"
S["MCA_BUILD_orte_sensor_file_DSO_TRUE"]=""
S["MCA_BUILD_orte_sensor_resusage_DSO_FALSE"]="#"
S["MCA_BUILD_orte_sensor_resusage_DSO_TRUE"]=""
S["MCA_orte_routed_DSO_SUBDIRS"]=" mca/routed/direct mca/routed/radix mca/routed/debruijn mca/routed/binomial"
S["MCA_orte_routed_STATIC_SUBDIRS"]=""
S["MCA_orte_routed_ALL_SUBDIRS"]=" mca/routed/direct mca/routed/radix mca/routed/debruijn mca/routed/binomial"
S["MCA_orte_routed_STATIC_LTLIBS"]=""
S["MCA_orte_routed_DSO_COMPONENTS"]=" direct radix debruijn binomial"
S["MCA_orte_routed_STATIC_COMPONENTS"]=""
S["MCA_orte_routed_ALL_COMPONENTS"]=" direct radix debruijn binomial"
S["MCA_BUILD_orte_routed_binomial_DSO_FALSE"]="#"
S["MCA_BUILD_orte_routed_binomial_DSO_TRUE"]=""
S["MCA_BUILD_orte_routed_debruijn_DSO_FALSE"]="#"
S["MCA_BUILD_orte_routed_debruijn_DSO_TRUE"]=""
S["MCA_BUILD_orte_routed_radix_DSO_FALSE"]="#"
S["MCA_BUILD_orte_routed_radix_DSO_TRUE"]=""
S["MCA_BUILD_orte_routed_direct_DSO_FALSE"]="#"
S["MCA_BUILD_orte_routed_direct_DSO_TRUE"]=""
S["MCA_orte_rml_DSO_SUBDIRS"]=" mca/rml/oob"
S["MCA_orte_rml_STATIC_SUBDIRS"]=""
S["MCA_orte_rml_ALL_SUBDIRS"]=" mca/rml/oob mca/rml/ftrm"
S["MCA_orte_rml_STATIC_LTLIBS"]=""
S["MCA_orte_rml_DSO_COMPONENTS"]=" oob"
S["MCA_orte_rml_STATIC_COMPONENTS"]=""
S["MCA_orte_rml_ALL_COMPONENTS"]=" oob ftrm"
S["MCA_BUILD_orte_rml_ftrm_DSO_FALSE"]="#"
S["MCA_BUILD_orte_rml_ftrm_DSO_TRUE"]=""
S["MCA_BUILD_orte_rml_oob_DSO_FALSE"]="#"
S["MCA_BUILD_orte_rml_oob_DSO_TRUE"]=""
S["MCA_orte_rmaps_DSO_SUBDIRS"]=" mca/rmaps/resilient mca/rmaps/seq mca/rmaps/round_robin mca/rmaps/ppr mca/rmaps/staged mca/rmaps/mindist mca/rmaps/lama mca/rmaps/rank_file"
S["MCA_orte_rmaps_STATIC_SUBDIRS"]=""
S["MCA_orte_rmaps_ALL_SUBDIRS"]=" mca/rmaps/resilient mca/rmaps/seq mca/rmaps/round_robin mca/rmaps/ppr mca/rmaps/staged mca/rmaps/mindist mca/rmaps/lama mca/rmaps/rank_file"
S["MCA_orte_rmaps_STATIC_LTLIBS"]=""
S["MCA_orte_rmaps_DSO_COMPONENTS"]=" resilient seq round_robin ppr staged mindist lama rank_file"
S["MCA_orte_rmaps_STATIC_COMPONENTS"]=""
S["MCA_orte_rmaps_ALL_COMPONENTS"]=" resilient seq round_robin ppr staged mindist lama rank_file"
S["MCA_BUILD_orte_rmaps_rank_file_DSO_FALSE"]="#"
S["MCA_BUILD_orte_rmaps_rank_file_DSO_TRUE"]=""
S["MCA_BUILD_orte_rmaps_lama_DSO_FALSE"]="#"
S["MCA_BUILD_orte_rmaps_lama_DSO_TRUE"]=""
S["MCA_BUILD_orte_rmaps_mindist_DSO_FALSE"]="#"
S["MCA_BUILD_orte_rmaps_mindist_DSO_TRUE"]=""
S["MCA_BUILD_orte_rmaps_staged_DSO_FALSE"]="#"
S["MCA_BUILD_orte_rmaps_staged_DSO_TRUE"]=""
S["MCA_BUILD_orte_rmaps_ppr_DSO_FALSE"]="#"
S["MCA_BUILD_orte_rmaps_ppr_DSO_TRUE"]=""
S["MCA_BUILD_orte_rmaps_round_robin_DSO_FALSE"]="#"
S["MCA_BUILD_orte_rmaps_round_robin_DSO_TRUE"]=""
S["MCA_BUILD_orte_rmaps_seq_DSO_FALSE"]="#"
S["MCA_BUILD_orte_rmaps_seq_DSO_TRUE"]=""
S["MCA_BUILD_orte_rmaps_resilient_DSO_FALSE"]="#"
S["MCA_BUILD_orte_rmaps_resilient_DSO_TRUE"]=""
S["MCA_orte_ras_DSO_SUBDIRS"]=" mca/ras/simulator mca/ras/loadleveler"
S["MCA_orte_ras_STATIC_SUBDIRS"]=""
S["MCA_orte_ras_ALL_SUBDIRS"]=" mca/ras/simulator mca/ras/loadleveler mca/ras/slurm mca/ras/alps mca/ras/gridengine mca/ras/lsf mca/ras/tm"
S["MCA_orte_ras_STATIC_LTLIBS"]=""
S["MCA_orte_ras_DSO_COMPONENTS"]=" simulator loadleveler"
S["MCA_orte_ras_STATIC_COMPONENTS"]=""
S["MCA_orte_ras_ALL_COMPONENTS"]=" simulator loadleveler slurm alps gridengine lsf tm"
S["MCA_BUILD_orte_ras_tm_DSO_FALSE"]="#"
S["MCA_BUILD_orte_ras_tm_DSO_TRUE"]=""
S["ras_tm_LIBS"]=""
S["ras_tm_LDFLAGS"]=""
S["ras_tm_CPPFLAGS"]=""
S["MCA_BUILD_orte_ras_lsf_DSO_FALSE"]="#"
S["MCA_BUILD_orte_ras_lsf_DSO_TRUE"]=""
S["ras_lsf_LIBS"]=""
S["ras_lsf_LDFLAGS"]=""
S["ras_lsf_CPPFLAGS"]=""
S["MCA_BUILD_orte_ras_gridengine_DSO_FALSE"]="#"
S["MCA_BUILD_orte_ras_gridengine_DSO_TRUE"]=""
S["QRSH"]=""
S["MCA_BUILD_orte_ras_alps_DSO_FALSE"]="#"
S["MCA_BUILD_orte_ras_alps_DSO_TRUE"]=""
S["ras_alps_CPPFLAGS"]="-I/include"
S["MCA_BUILD_orte_ras_slurm_DSO_FALSE"]="#"
S["MCA_BUILD_orte_ras_slurm_DSO_TRUE"]=""
S["ras_slurm_LIBS"]=""
S["ras_slurm_LDFLAGS"]=""
S["ras_slurm_CPPFLAGS"]=""
S["MCA_BUILD_orte_ras_loadleveler_DSO_FALSE"]="#"
S["MCA_BUILD_orte_ras_loadleveler_DSO_TRUE"]=""
S["ras_loadleveler_LIBS"]=""
S["ras_loadleveler_LDFLAGS"]=""
S["ras_loadleveler_CPPFLAGS"]=""
S["MCA_BUILD_orte_ras_simulator_DSO_FALSE"]="#"
S["MCA_BUILD_orte_ras_simulator_DSO_TRUE"]=""
S["MCA_orte_plm_DSO_SUBDIRS"]=" mca/plm/isolated mca/plm/rsh"
S["MCA_orte_plm_STATIC_SUBDIRS"]=""
S["MCA_orte_plm_ALL_SUBDIRS"]=" mca/plm/isolated mca/plm/slurm mca/plm/alps mca/plm/rsh mca/plm/lsf mca/plm/tm"
S["MCA_orte_plm_STATIC_LTLIBS"]=""
S["MCA_orte_plm_DSO_COMPONENTS"]=" isolated rsh"
S["MCA_orte_plm_STATIC_COMPONENTS"]=""
S["MCA_orte_plm_ALL_COMPONENTS"]=" isolated slurm alps rsh lsf tm"
S["MCA_BUILD_orte_plm_tm_DSO_FALSE"]="#"
S["MCA_BUILD_orte_plm_tm_DSO_TRUE"]=""
S["plm_tm_LIBS"]=""
S["plm_tm_LDFLAGS"]=""
S["plm_tm_CPPFLAGS"]=""
S["MCA_BUILD_orte_plm_lsf_DSO_FALSE"]="#"
S["MCA_BUILD_orte_plm_lsf_DSO_TRUE"]=""
S["plm_lsf_LIBS"]=""
S["plm_lsf_LDFLAGS"]=""
S["plm_lsf_CPPFLAGS"]=""
S["MCA_BUILD_orte_plm_rsh_DSO_FALSE"]="#"
S["MCA_BUILD_orte_plm_rsh_DSO_TRUE"]=""
S["MCA_BUILD_orte_plm_alps_DSO_FALSE"]="#"
S["MCA_BUILD_orte_plm_alps_DSO_TRUE"]=""
S["MCA_BUILD_orte_plm_slurm_DSO_FALSE"]="#"
S["MCA_BUILD_orte_plm_slurm_DSO_TRUE"]=""
S["plm_slurm_LIBS"]=""
S["plm_slurm_LDFLAGS"]=""
S["plm_slurm_CPPFLAGS"]=""
S["MCA_BUILD_orte_plm_isolated_DSO_FALSE"]="#"
S["MCA_BUILD_orte_plm_isolated_DSO_TRUE"]=""
S["MCA_orte_oob_DSO_SUBDIRS"]=" mca/oob/tcp"
S["MCA_orte_oob_STATIC_SUBDIRS"]=""
S["MCA_orte_oob_ALL_SUBDIRS"]=" mca/oob/tcp"
S["MCA_orte_oob_STATIC_LTLIBS"]=""
S["MCA_orte_oob_DSO_COMPONENTS"]=" tcp"
S["MCA_orte_oob_STATIC_COMPONENTS"]=""
S["MCA_orte_oob_ALL_COMPONENTS"]=" tcp"
S["MCA_BUILD_orte_oob_tcp_DSO_FALSE"]="#"
S["MCA_BUILD_orte_oob_tcp_DSO_TRUE"]=""
S["MCA_orte_odls_DSO_SUBDIRS"]=" mca/odls/default"
S["MCA_orte_odls_STATIC_SUBDIRS"]=""
S["MCA_orte_odls_ALL_SUBDIRS"]=" mca/odls/default"
S["MCA_orte_odls_STATIC_LTLIBS"]=""
S["MCA_orte_odls_DSO_COMPONENTS"]=" default"
S["MCA_orte_odls_STATIC_COMPONENTS"]=""
S["MCA_orte_odls_ALL_COMPONENTS"]=" default"
S["MCA_BUILD_orte_odls_default_DSO_FALSE"]="#"
S["MCA_BUILD_orte_odls_default_DSO_TRUE"]=""
S["MCA_orte_iof_DSO_SUBDIRS"]=" mca/iof/mr_orted mca/iof/tool mca/iof/hnp mca/iof/orted mca/iof/mr_hnp"
S["MCA_orte_iof_STATIC_SUBDIRS"]=""
S["MCA_orte_iof_ALL_SUBDIRS"]=" mca/iof/mr_orted mca/iof/tool mca/iof/hnp mca/iof/orted mca/iof/mr_hnp"
S["MCA_orte_iof_STATIC_LTLIBS"]=""
S["MCA_orte_iof_DSO_COMPONENTS"]=" mr_orted tool hnp orted mr_hnp"
S["MCA_orte_iof_STATIC_COMPONENTS"]=""
S["MCA_orte_iof_ALL_COMPONENTS"]=" mr_orted tool hnp orted mr_hnp"
S["MCA_BUILD_orte_iof_mr_hnp_DSO_FALSE"]="#"
S["MCA_BUILD_orte_iof_mr_hnp_DSO_TRUE"]=""
S["MCA_BUILD_orte_iof_orted_DSO_FALSE"]="#"
S["MCA_BUILD_orte_iof_orted_DSO_TRUE"]=""
S["MCA_BUILD_orte_iof_hnp_DSO_FALSE"]="#"
S["MCA_BUILD_orte_iof_hnp_DSO_TRUE"]=""
S["MCA_BUILD_orte_iof_tool_DSO_FALSE"]="#"
S["MCA_BUILD_orte_iof_tool_DSO_TRUE"]=""
S["MCA_BUILD_orte_iof_mr_orted_DSO_FALSE"]="#"
S["MCA_BUILD_orte_iof_mr_orted_DSO_TRUE"]=""
S["MCA_orte_grpcomm_DSO_SUBDIRS"]=" mca/grpcomm/bad"
S["MCA_orte_grpcomm_STATIC_SUBDIRS"]=""
S["MCA_orte_grpcomm_ALL_SUBDIRS"]=" mca/grpcomm/bad mca/grpcomm/pmi"
S["MCA_orte_grpcomm_STATIC_LTLIBS"]=""
S["MCA_orte_grpcomm_DSO_COMPONENTS"]=" bad"
S["MCA_orte_grpcomm_STATIC_COMPONENTS"]=""
S["MCA_orte_grpcomm_ALL_COMPONENTS"]=" bad pmi"
S["MCA_BUILD_orte_grpcomm_pmi_DSO_FALSE"]="#"
S["MCA_BUILD_orte_grpcomm_pmi_DSO_TRUE"]=""
S["grpcomm_pmi_LIBS"]=""
S["grpcomm_pmi_LDFLAGS"]=""
S["grpcomm_pmi_CPPFLAGS"]=""
S["MCA_BUILD_orte_grpcomm_bad_DSO_FALSE"]="#"
S["MCA_BUILD_orte_grpcomm_bad_DSO_TRUE"]=""
S["MCA_orte_filem_DSO_SUBDIRS"]=" mca/filem/raw"
S["MCA_orte_filem_STATIC_SUBDIRS"]=""
S["MCA_orte_filem_ALL_SUBDIRS"]=" mca/filem/raw"
S["MCA_orte_filem_STATIC_LTLIBS"]=""
S["MCA_orte_filem_DSO_COMPONENTS"]=" raw"
S["MCA_orte_filem_STATIC_COMPONENTS"]=""
S["MCA_orte_filem_ALL_COMPONENTS"]=" raw"
S["MCA_BUILD_orte_filem_raw_DSO_FALSE"]="#"
S["MCA_BUILD_orte_filem_raw_DSO_TRUE"]=""
S["MCA_orte_ess_DSO_SUBDIRS"]=" mca/ess/tool mca/ess/hnp mca/ess/singleton mca/ess/env"
S["MCA_orte_ess_STATIC_SUBDIRS"]=""
S["MCA_orte_ess_ALL_SUBDIRS"]=" mca/ess/tool mca/ess/hnp mca/ess/singleton mca/ess/env mca/ess/pmi mca/ess/slurm mca/ess/alps mca/ess/lsf mca/ess/tm"
S["MCA_orte_ess_STATIC_LTLIBS"]=""
S["MCA_orte_ess_DSO_COMPONENTS"]=" tool hnp singleton env"
S["MCA_orte_ess_STATIC_COMPONENTS"]=""
S["MCA_orte_ess_ALL_COMPONENTS"]=" tool hnp singleton env pmi slurm alps lsf tm"
S["MCA_BUILD_orte_ess_tm_DSO_FALSE"]="#"
S["MCA_BUILD_orte_ess_tm_DSO_TRUE"]=""
S["ess_tm_LIBS"]=""
S["ess_tm_LDFLAGS"]=""
S["ess_tm_CPPFLAGS"]=""
S["MCA_BUILD_orte_ess_lsf_DSO_FALSE"]="#"
S["MCA_BUILD_orte_ess_lsf_DSO_TRUE"]=""
S["ess_lsf_LIBS"]=""
S["ess_lsf_LDFLAGS"]=""
S["ess_lsf_CPPFLAGS"]=""
S["MCA_BUILD_orte_ess_alps_DSO_FALSE"]="#"
S["MCA_BUILD_orte_ess_alps_DSO_TRUE"]=""
S["MCA_BUILD_orte_ess_slurm_DSO_FALSE"]="#"
S["MCA_BUILD_orte_ess_slurm_DSO_TRUE"]=""
S["ess_slurm_LIBS"]=""
S["ess_slurm_LDFLAGS"]=""
S["ess_slurm_CPPFLAGS"]=""
S["MCA_BUILD_orte_ess_pmi_DSO_FALSE"]="#"
S["MCA_BUILD_orte_ess_pmi_DSO_TRUE"]=""
S["ess_pmi_LIBS"]=""
S["ess_pmi_LDFLAGS"]=""
S["ess_pmi_CPPFLAGS"]=""
S["MCA_BUILD_orte_ess_env_DSO_FALSE"]="#"
S["MCA_BUILD_orte_ess_env_DSO_TRUE"]=""
S["MCA_BUILD_orte_ess_singleton_DSO_FALSE"]="#"
S["MCA_BUILD_orte_ess_singleton_DSO_TRUE"]=""
S["MCA_BUILD_orte_ess_hnp_DSO_FALSE"]="#"
S["MCA_BUILD_orte_ess_hnp_DSO_TRUE"]=""
S["MCA_BUILD_orte_ess_tool_DSO_FALSE"]="#"
S["MCA_BUILD_orte_ess_tool_DSO_TRUE"]=""
S["MCA_orte_errmgr_DSO_SUBDIRS"]=" mca/errmgr/default_tool mca/errmgr/default_hnp mca/errmgr/default_orted mca/errmgr/default_app"
S["MCA_orte_errmgr_STATIC_SUBDIRS"]=""
S["MCA_orte_errmgr_ALL_SUBDIRS"]=" mca/errmgr/default_tool mca/errmgr/default_hnp mca/errmgr/default_orted mca/errmgr/default_app"
S["MCA_orte_errmgr_STATIC_LTLIBS"]=""
S["MCA_orte_errmgr_DSO_COMPONENTS"]=" default_tool default_hnp default_orted default_app"
S["MCA_orte_errmgr_STATIC_COMPONENTS"]=""
S["MCA_orte_errmgr_ALL_COMPONENTS"]=" default_tool default_hnp default_orted default_app"
S["MCA_BUILD_orte_errmgr_default_app_DSO_FALSE"]="#"
S["MCA_BUILD_orte_errmgr_default_app_DSO_TRUE"]=""
S["MCA_BUILD_orte_errmgr_default_orted_DSO_FALSE"]="#"
S["MCA_BUILD_orte_errmgr_default_orted_DSO_TRUE"]=""
S["MCA_BUILD_orte_errmgr_default_hnp_DSO_FALSE"]="#"
S["MCA_BUILD_orte_errmgr_default_hnp_DSO_TRUE"]=""
S["MCA_BUILD_orte_errmgr_default_tool_DSO_FALSE"]="#"
S["MCA_BUILD_orte_errmgr_default_tool_DSO_TRUE"]=""
S["MCA_orte_dfs_DSO_SUBDIRS"]=" mca/dfs/test mca/dfs/app mca/dfs/orted"
S["MCA_orte_dfs_STATIC_SUBDIRS"]=""
S["MCA_orte_dfs_ALL_SUBDIRS"]=" mca/dfs/test mca/dfs/app mca/dfs/orted"
S["MCA_orte_dfs_STATIC_LTLIBS"]=""
S["MCA_orte_dfs_DSO_COMPONENTS"]=" test app orted"
S["MCA_orte_dfs_STATIC_COMPONENTS"]=""
S["MCA_orte_dfs_ALL_COMPONENTS"]=" test app orted"
S["MCA_BUILD_orte_dfs_orted_DSO_FALSE"]="#"
S["MCA_BUILD_orte_dfs_orted_DSO_TRUE"]=""
S["MCA_BUILD_orte_dfs_app_DSO_FALSE"]="#"
S["MCA_BUILD_orte_dfs_app_DSO_TRUE"]=""
S["MCA_BUILD_orte_dfs_test_DSO_FALSE"]="#"
S["MCA_BUILD_orte_dfs_test_DSO_TRUE"]=""
S["MCA_opal_FRAMEWORK_LIBS"]=" $(MCA_opal_common_STATIC_LTLIBS) mca/backtrace/libmca_backtrace.la $(MCA_opal_backtrace_STATIC_LTLIBS) mca/compress/libmca_compress.la $(MCA_opal_c"\
"ompress_STATIC_LTLIBS) mca/crs/libmca_crs.la $(MCA_opal_crs_STATIC_LTLIBS) mca/db/libmca_db.la $(MCA_opal_db_STATIC_LTLIBS) mca/dl/libmca_dl.la $(MC"\
"A_opal_dl_STATIC_LTLIBS) mca/event/libmca_event.la $(MCA_opal_event_STATIC_LTLIBS) mca/hwloc/libmca_hwloc.la $(MCA_opal_hwloc_STATIC_LTLIBS) mca/if/"\
"libmca_if.la $(MCA_opal_if_STATIC_LTLIBS) mca/installdirs/libmca_installdirs.la $(MCA_opal_installdirs_STATIC_LTLIBS) mca/memchecker/libmca_memcheck"\
"er.la $(MCA_opal_memchecker_STATIC_LTLIBS) mca/memcpy/libmca_memcpy.la $(MCA_opal_memcpy_STATIC_LTLIBS) mca/memory/libmca_memory.la $(MCA_opal_memor"\
"y_STATIC_LTLIBS) mca/pstat/libmca_pstat.la $(MCA_opal_pstat_STATIC_LTLIBS) mca/sec/libmca_sec.la $(MCA_opal_sec_STATIC_LTLIBS) mca/shmem/libmca_shme"\
"m.la $(MCA_opal_shmem_STATIC_LTLIBS) mca/timer/libmca_timer.la $(MCA_opal_timer_STATIC_LTLIBS)"
S["MCA_opal_FRAMEWORK_COMPONENT_STATIC_SUBDIRS"]="$(MCA_opal_common_STATIC_SUBDIRS)  $(MCA_opal_backtrace_STATIC_SUBDIRS) $(MCA_opal_compress_STATIC_SUBDIRS) $(MCA_opal_crs_STATIC_SUBDIRS) $(MCA_opa"\
"l_db_STATIC_SUBDIRS) $(MCA_opal_dl_STATIC_SUBDIRS) $(MCA_opal_event_STATIC_SUBDIRS) $(MCA_opal_hwloc_STATIC_SUBDIRS) $(MCA_opal_if_STATIC_SUBDIRS) $"\
"(MCA_opal_installdirs_STATIC_SUBDIRS) $(MCA_opal_memchecker_STATIC_SUBDIRS) $(MCA_opal_memcpy_STATIC_SUBDIRS) $(MCA_opal_memory_STATIC_SUBDIRS) $(MC"\
"A_opal_pstat_STATIC_SUBDIRS) $(MCA_opal_sec_STATIC_SUBDIRS) $(MCA_opal_shmem_STATIC_SUBDIRS) $(MCA_opal_timer_STATIC_SUBDIRS)"
S["MCA_opal_FRAMEWORK_COMPONENT_DSO_SUBDIRS"]="$(MCA_opal_common_DSO_SUBDIRS)  $(MCA_opal_backtrace_DSO_SUBDIRS) $(MCA_opal_compress_DSO_SUBDIRS) $(MCA_opal_crs_DSO_SUBDIRS) $(MCA_opal_db_DSO_SUB"\
"DIRS) $(MCA_opal_dl_DSO_SUBDIRS) $(MCA_opal_event_DSO_SUBDIRS) $(MCA_opal_hwloc_DSO_SUBDIRS) $(MCA_opal_if_DSO_SUBDIRS) $(MCA_opal_installdirs_DSO_S"\
"UBDIRS) $(MCA_opal_memchecker_DSO_SUBDIRS) $(MCA_opal_memcpy_DSO_SUBDIRS) $(MCA_opal_memory_DSO_SUBDIRS) $(MCA_opal_pstat_DSO_SUBDIRS) $(MCA_opal_se"\
"c_DSO_SUBDIRS) $(MCA_opal_shmem_DSO_SUBDIRS) $(MCA_opal_timer_DSO_SUBDIRS)"
S["MCA_opal_FRAMEWORK_COMPONENT_ALL_SUBDIRS"]="$(MCA_opal_common_ALL_SUBDIRS)  $(MCA_opal_backtrace_ALL_SUBDIRS) $(MCA_opal_compress_ALL_SUBDIRS) $(MCA_opal_crs_ALL_SUBDIRS) $(MCA_opal_db_ALL_SUB"\
"DIRS) $(MCA_opal_dl_ALL_SUBDIRS) $(MCA_opal_event_ALL_SUBDIRS) $(MCA_opal_hwloc_ALL_SUBDIRS) $(MCA_opal_if_ALL_SUBDIRS) $(MCA_opal_installdirs_ALL_S"\
"UBDIRS) $(MCA_opal_memchecker_ALL_SUBDIRS) $(MCA_opal_memcpy_ALL_SUBDIRS) $(MCA_opal_memory_ALL_SUBDIRS) $(MCA_opal_pstat_ALL_SUBDIRS) $(MCA_opal_se"\
"c_ALL_SUBDIRS) $(MCA_opal_shmem_ALL_SUBDIRS) $(MCA_opal_timer_ALL_SUBDIRS)"
S["MCA_opal_FRAMEWORKS_SUBDIRS"]="mca/common  mca/backtrace mca/compress mca/crs mca/db mca/dl mca/event mca/hwloc mca/if mca/installdirs mca/memchecker mca/memcpy mca/memory mca/pst"\
"at mca/sec mca/shmem mca/timer"
S["MCA_opal_FRAMEWORKS"]="common  backtrace compress crs db dl event hwloc if installdirs memchecker memcpy memory pstat sec shmem timer"
S["MCA_opal_timer_DSO_SUBDIRS"]=""
S["MCA_opal_timer_STATIC_SUBDIRS"]=" mca/timer/linux"
S["MCA_opal_timer_ALL_SUBDIRS"]=" mca/timer/altix mca/timer/catamount mca/timer/solaris mca/timer/linux mca/timer/aix mca/timer/darwin"
S["MCA_opal_timer_STATIC_LTLIBS"]="mca/timer/linux/libmca_timer_linux.la "
S["MCA_opal_timer_DSO_COMPONENTS"]=""
S["MCA_opal_timer_STATIC_COMPONENTS"]=" linux"
S["MCA_opal_timer_ALL_COMPONENTS"]=" altix catamount solaris linux aix darwin"
S["MCA_BUILD_opal_timer_darwin_DSO_FALSE"]=""
S["MCA_BUILD_opal_timer_darwin_DSO_TRUE"]="#"
S["MCA_BUILD_opal_timer_aix_DSO_FALSE"]=""
S["MCA_BUILD_opal_timer_aix_DSO_TRUE"]="#"
S["timer_aix_LIBS"]=""
S["MCA_BUILD_opal_timer_linux_DSO_FALSE"]=""
S["MCA_BUILD_opal_timer_linux_DSO_TRUE"]="#"
S["MCA_BUILD_opal_timer_solaris_DSO_FALSE"]=""
S["MCA_BUILD_opal_timer_solaris_DSO_TRUE"]="#"
S["MCA_BUILD_opal_timer_catamount_DSO_FALSE"]=""
S["MCA_BUILD_opal_timer_catamount_DSO_TRUE"]="#"
S["MCA_BUILD_opal_timer_altix_DSO_FALSE"]=""
S["MCA_BUILD_opal_timer_altix_DSO_TRUE"]="#"
S["MCA_opal_shmem_DSO_SUBDIRS"]=" mca/shmem/mmap mca/shmem/posix mca/shmem/sysv"
S["MCA_opal_shmem_STATIC_SUBDIRS"]=""
S["MCA_opal_shmem_ALL_SUBDIRS"]=" mca/shmem/mmap mca/shmem/posix mca/shmem/sysv"
S["MCA_opal_shmem_STATIC_LTLIBS"]=""
S["MCA_opal_shmem_DSO_COMPONENTS"]=" mmap posix sysv"
S["MCA_opal_shmem_STATIC_COMPONENTS"]=""
S["MCA_opal_shmem_ALL_COMPONENTS"]=" mmap posix sysv"
S["MCA_BUILD_opal_shmem_sysv_DSO_FALSE"]="#"
S["MCA_BUILD_opal_shmem_sysv_DSO_TRUE"]=""
S["MCA_BUILD_opal_shmem_posix_DSO_FALSE"]="#"
S["MCA_BUILD_opal_shmem_posix_DSO_TRUE"]=""
S["MCA_BUILD_opal_shmem_mmap_DSO_FALSE"]="#"
S["MCA_BUILD_opal_shmem_mmap_DSO_TRUE"]=""
S["MCA_opal_sec_DSO_SUBDIRS"]=" mca/sec/basic"
S["MCA_opal_sec_STATIC_SUBDIRS"]=""
S["MCA_opal_sec_ALL_SUBDIRS"]=" mca/sec/basic mca/sec/keystone"
S["MCA_opal_sec_STATIC_LTLIBS"]=""
S["MCA_opal_sec_DSO_COMPONENTS"]=" basic"
S["MCA_opal_sec_STATIC_COMPONENTS"]=""
S["MCA_opal_sec_ALL_COMPONENTS"]=" basic keystone"
S["MCA_BUILD_opal_sec_keystone_DSO_FALSE"]="#"
S["MCA_BUILD_opal_sec_keystone_DSO_TRUE"]=""
S["sec_keystone_LIBS"]=""
S["sec_keystone_LDFLAGS"]=""
S["sec_keystone_CPPFLAGS"]=""
S["MCA_BUILD_opal_sec_basic_DSO_FALSE"]="#"
S["MCA_BUILD_opal_sec_basic_DSO_TRUE"]=""
S["MCA_opal_pstat_DSO_SUBDIRS"]=" mca/pstat/linux"
S["MCA_opal_pstat_STATIC_SUBDIRS"]=""
S["MCA_opal_pstat_ALL_SUBDIRS"]=" mca/pstat/linux mca/pstat/test"
S["MCA_opal_pstat_STATIC_LTLIBS"]=""
S["MCA_opal_pstat_DSO_COMPONENTS"]=" linux"
S["MCA_opal_pstat_STATIC_COMPONENTS"]=""
S["MCA_opal_pstat_ALL_COMPONENTS"]=" linux test"
S["MCA_BUILD_opal_pstat_test_DSO_FALSE"]="#"
S["MCA_BUILD_opal_pstat_test_DSO_TRUE"]=""
S["MCA_BUILD_opal_pstat_linux_DSO_FALSE"]="#"
S["MCA_BUILD_opal_pstat_linux_DSO_TRUE"]=""
S["MCA_opal_memory_DSO_SUBDIRS"]=""
S["MCA_opal_memory_STATIC_SUBDIRS"]=""
S["MCA_opal_memory_ALL_SUBDIRS"]=" mca/memory/linux mca/memory/malloc_solaris"
S["MCA_opal_memory_STATIC_LTLIBS"]=""
S["MCA_opal_memory_DSO_COMPONENTS"]=""
S["MCA_opal_memory_STATIC_COMPONENTS"]=""
S["MCA_opal_memory_ALL_COMPONENTS"]=" linux malloc_solaris"
S["MCA_BUILD_opal_memory_malloc_solaris_DSO_FALSE"]=""
S["MCA_BUILD_opal_memory_malloc_solaris_DSO_TRUE"]="#"
S["memory_malloc_solaris_LIBS"]=""
S["MCA_BUILD_opal_memory_linux_DSO_FALSE"]=""
S["MCA_BUILD_opal_memory_linux_DSO_TRUE"]="#"
S["memory_linux_LIBS"]=""
S["MEMORY_LINUX_UMMUNOTIFY_FALSE"]=""
S["MEMORY_LINUX_UMMUNOTIFY_TRUE"]="#"
S["MEMORY_LINUX_PTMALLOC2_FALSE"]=""
S["MEMORY_LINUX_PTMALLOC2_TRUE"]="#"
S["MCA_opal_memcpy_DSO_SUBDIRS"]=""
S["MCA_opal_memcpy_STATIC_SUBDIRS"]=""
S["MCA_opal_memcpy_ALL_SUBDIRS"]=""
S["MCA_opal_memcpy_STATIC_LTLIBS"]=""
S["MCA_opal_memcpy_DSO_COMPONENTS"]=""
S["MCA_opal_memcpy_STATIC_COMPONENTS"]=""
S["MCA_opal_memcpy_ALL_COMPONENTS"]=""
S["MCA_opal_memchecker_DSO_SUBDIRS"]=""
S["MCA_opal_memchecker_STATIC_SUBDIRS"]=""
S["MCA_opal_memchecker_ALL_SUBDIRS"]=" mca/memchecker/valgrind"
S["MCA_opal_memchecker_STATIC_LTLIBS"]=""
S["MCA_opal_memchecker_DSO_COMPONENTS"]=""
S["MCA_opal_memchecker_STATIC_COMPONENTS"]=""
S["MCA_opal_memchecker_ALL_COMPONENTS"]=" valgrind"
S["MCA_BUILD_opal_memchecker_valgrind_DSO_FALSE"]=""
S["MCA_BUILD_opal_memchecker_valgrind_DSO_TRUE"]="#"
S["opal_memchecker_valgrind_CPPFLAGS"]=""
S["OMPI_WANT_MEMCHECKER_FALSE"]=""
S["OMPI_WANT_MEMCHECKER_TRUE"]="#"
S["MCA_opal_installdirs_DSO_SUBDIRS"]=""
S["MCA_opal_installdirs_STATIC_SUBDIRS"]=" mca/installdirs/env mca/installdirs/config"
S["MCA_opal_installdirs_ALL_SUBDIRS"]=" mca/installdirs/env mca/installdirs/config"
S["MCA_opal_installdirs_STATIC_LTLIBS"]="mca/installdirs/config/libmca_installdirs_config.la mca/installdirs/env/libmca_installdirs_env.la "
S["MCA_opal_installdirs_DSO_COMPONENTS"]=""
S["MCA_opal_installdirs_STATIC_COMPONENTS"]=" env config"
S["MCA_opal_installdirs_ALL_COMPONENTS"]=" env config"
S["MCA_BUILD_opal_installdirs_config_DSO_FALSE"]=""
S["MCA_BUILD_opal_installdirs_config_DSO_TRUE"]="#"
S["MCA_BUILD_opal_installdirs_env_DSO_FALSE"]=""
S["MCA_BUILD_opal_installdirs_env_DSO_TRUE"]="#"
S["MCA_opal_if_DSO_SUBDIRS"]=""
S["MCA_opal_if_STATIC_SUBDIRS"]=" mca/if/posix_ipv4 mca/if/linux_ipv6"
S["MCA_opal_if_ALL_SUBDIRS"]=" mca/if/solaris_ipv6 mca/if/bsdx_ipv4 mca/if/bsdx_ipv6 mca/if/posix_ipv4 mca/if/linux_ipv6"
S["MCA_opal_if_STATIC_LTLIBS"]="mca/if/linux_ipv6/libmca_if_linux_ipv6.la mca/if/posix_ipv4/libmca_if_posix_ipv4.la "
S["MCA_opal_if_DSO_COMPONENTS"]=""
S["MCA_opal_if_STATIC_COMPONENTS"]=" posix_ipv4 linux_ipv6"
S["MCA_opal_if_ALL_COMPONENTS"]=" solaris_ipv6 bsdx_ipv4 bsdx_ipv6 posix_ipv4 linux_ipv6"
S["MCA_BUILD_opal_if_linux_ipv6_DSO_FALSE"]=""
S["MCA_BUILD_opal_if_linux_ipv6_DSO_TRUE"]="#"
S["MCA_BUILD_opal_if_posix_ipv4_DSO_FALSE"]=""
S["MCA_BUILD_opal_if_posix_ipv4_DSO_TRUE"]="#"
S["MCA_BUILD_opal_if_bsdx_ipv6_DSO_FALSE"]=""
S["MCA_BUILD_opal_if_bsdx_ipv6_DSO_TRUE"]="#"
S["MCA_BUILD_opal_if_bsdx_ipv4_DSO_FALSE"]=""
S["MCA_BUILD_opal_if_bsdx_ipv4_DSO_TRUE"]="#"
S["MCA_BUILD_opal_if_solaris_ipv6_DSO_FALSE"]=""
S["MCA_BUILD_opal_if_solaris_ipv6_DSO_TRUE"]="#"
S["OPAL_HAVE_HWLOC_FALSE"]="#"
S["OPAL_HAVE_HWLOC_TRUE"]=""
S["MCA_opal_hwloc_DSO_SUBDIRS"]=""
S["MCA_opal_hwloc_STATIC_SUBDIRS"]=" mca/hwloc/hwloc191"
S["MCA_opal_hwloc_ALL_SUBDIRS"]=" mca/hwloc/hwloc191 mca/hwloc/external"
S["MCA_opal_hwloc_STATIC_LTLIBS"]="mca/hwloc/hwloc191/libmca_hwloc_hwloc191.la "
S["MCA_opal_hwloc_DSO_COMPONENTS"]=""
S["MCA_opal_hwloc_STATIC_COMPONENTS"]=" hwloc191"
S["MCA_opal_hwloc_ALL_COMPONENTS"]=" hwloc191 external"
S["MCA_BUILD_opal_hwloc_external_DSO_FALSE"]=""
S["MCA_BUILD_opal_hwloc_external_DSO_TRUE"]="#"
S["opal_hwloc_external_LIBS"]=""
S["opal_hwloc_external_LDFLAGS"]=""
S["MCA_BUILD_opal_hwloc_hwloc191_DSO_FALSE"]=""
S["MCA_BUILD_opal_hwloc_hwloc191_DSO_TRUE"]="#"
S["HWLOC_HAVE_CXX_FALSE"]=""
S["HWLOC_HAVE_CXX_TRUE"]="#"
S["HWLOC_XML_LIBXML_BUILD_STATIC_FALSE"]=""
S["HWLOC_XML_LIBXML_BUILD_STATIC_TRUE"]="#"
S["HWLOC_GL_BUILD_STATIC_FALSE"]=""
S["HWLOC_GL_BUILD_STATIC_TRUE"]="#"
S["HWLOC_NVML_BUILD_STATIC_FALSE"]=""
S["HWLOC_NVML_BUILD_STATIC_TRUE"]="#"
S["HWLOC_CUDA_BUILD_STATIC_FALSE"]=""
S["HWLOC_CUDA_BUILD_STATIC_TRUE"]="#"
S["HWLOC_OPENCL_BUILD_STATIC_FALSE"]=""
S["HWLOC_OPENCL_BUILD_STATIC_TRUE"]="#"
S["HWLOC_PCI_BUILD_STATIC_FALSE"]=""
S["HWLOC_PCI_BUILD_STATIC_TRUE"]="#"
S["HWLOC_HAVE_PLUGINS_FALSE"]=""
S["HWLOC_HAVE_PLUGINS_TRUE"]="#"
S["HWLOC_HAVE_X86_CPUID_FALSE"]="#"
S["HWLOC_HAVE_X86_CPUID_TRUE"]=""
S["HWLOC_HAVE_X86_64_FALSE"]="#"
S["HWLOC_HAVE_X86_64_TRUE"]=""
S["HWLOC_HAVE_X86_32_FALSE"]=""
S["HWLOC_HAVE_X86_32_TRUE"]="#"
S["HWLOC_HAVE_MINGW32_FALSE"]=""
S["HWLOC_HAVE_MINGW32_TRUE"]="#"
S["HWLOC_HAVE_WINDOWS_FALSE"]=""
S["HWLOC_HAVE_WINDOWS_TRUE"]="#"
S["HWLOC_HAVE_HPUX_FALSE"]=""
S["HWLOC_HAVE_HPUX_TRUE"]="#"
S["HWLOC_HAVE_OSF_FALSE"]=""
S["HWLOC_HAVE_OSF_TRUE"]="#"
S["HWLOC_HAVE_AIX_FALSE"]=""
S["HWLOC_HAVE_AIX_TRUE"]="#"
S["HWLOC_HAVE_SOLARIS_FALSE"]=""
S["HWLOC_HAVE_SOLARIS_TRUE"]="#"
S["HWLOC_HAVE_NETBSD_FALSE"]=""
S["HWLOC_HAVE_NETBSD_TRUE"]="#"
S["HWLOC_HAVE_FREEBSD_FALSE"]=""
S["HWLOC_HAVE_FREEBSD_TRUE"]="#"
S["HWLOC_HAVE_DARWIN_FALSE"]=""
S["HWLOC_HAVE_DARWIN_TRUE"]="#"
S["HWLOC_HAVE_IRIX_FALSE"]=""
S["HWLOC_HAVE_IRIX_TRUE"]="#"
S["HWLOC_HAVE_BGQ_FALSE"]=""
S["HWLOC_HAVE_BGQ_TRUE"]="#"
S["HWLOC_HAVE_LINUX_FALSE"]="#"
S["HWLOC_HAVE_LINUX_TRUE"]=""
S["HWLOC_INSTALL_DOXYGEN_FALSE"]=""
S["HWLOC_INSTALL_DOXYGEN_TRUE"]="#"
S["HWLOC_BUILD_README_FALSE"]=""
S["HWLOC_BUILD_README_TRUE"]="#"
S["HWLOC_BUILD_DOXYGEN_FALSE"]=""
S["HWLOC_BUILD_DOXYGEN_TRUE"]="#"
S["HWLOC_HAVE_BUNZIPP_FALSE"]="#"
S["HWLOC_HAVE_BUNZIPP_TRUE"]=""
S["HWLOC_HAVE_MBIND_FALSE"]="#"
S["HWLOC_HAVE_MBIND_TRUE"]=""
S["HWLOC_HAVE_SET_MEMPOLICY_FALSE"]="#"
S["HWLOC_HAVE_SET_MEMPOLICY_TRUE"]=""
S["HWLOC_HAVE_NVML_FALSE"]=""
S["HWLOC_HAVE_NVML_TRUE"]="#"
S["HWLOC_HAVE_OPENCL_FALSE"]=""
S["HWLOC_HAVE_OPENCL_TRUE"]="#"
S["HWLOC_HAVE_PCI_FALSE"]=""
S["HWLOC_HAVE_PCI_TRUE"]="#"
S["HWLOC_HAVE_CAIRO_FALSE"]=""
S["HWLOC_HAVE_CAIRO_TRUE"]="#"
S["HWLOC_HAVE_LIBXML2_FALSE"]=""
S["HWLOC_HAVE_LIBXML2_TRUE"]="#"
S["HWLOC_HAVE_CUDART_FALSE"]=""
S["HWLOC_HAVE_CUDART_TRUE"]="#"
S["HWLOC_HAVE_MYRIEXPRESS_FALSE"]=""
S["HWLOC_HAVE_MYRIEXPRESS_TRUE"]="#"
S["HWLOC_HAVE_GL_FALSE"]=""
S["HWLOC_HAVE_GL_TRUE"]="#"
S["HWLOC_HAVE_CUDA_FALSE"]=""
S["HWLOC_HAVE_CUDA_TRUE"]="#"
S["HWLOC_HAVE_LIBIBVERBS_FALSE"]=""
S["HWLOC_HAVE_LIBIBVERBS_TRUE"]="#"
S["HWLOC_HAVE_PTHREAD_FALSE"]=""
S["HWLOC_HAVE_PTHREAD_TRUE"]="#"
S["HWLOC_HAVE_SCHED_SETAFFINITY_FALSE"]="#"
S["HWLOC_HAVE_SCHED_SETAFFINITY_TRUE"]=""
S["HWLOC_HAVE_LINUX_LIBNUMA_FALSE"]=""
S["HWLOC_HAVE_LINUX_LIBNUMA_TRUE"]="#"
S["HWLOC_HAVE_OPENAT_FALSE"]="#"
S["HWLOC_HAVE_OPENAT_TRUE"]=""
S["HWLOC_HAVE_MS_LIB_FALSE"]=""
S["HWLOC_HAVE_MS_LIB_TRUE"]="#"
S["HWLOC_HAVE_GCC_FALSE"]="#"
S["HWLOC_HAVE_GCC_TRUE"]=""
S["HWLOC_BUILD_STANDALONE_FALSE"]=""
S["HWLOC_BUILD_STANDALONE_TRUE"]="#"
S["opal_hwloc_hwloc191_LIBS"]="$(OMPI_TOP_BUILDDIR)/opal/mca/hwloc/hwloc191/hwloc/src/libhwloc_embedded.la $(HWLOC_EMBEDDED_LIBS)"
S["opal_hwloc_hwloc191_LDFLAGS"]="$(HWLOC_EMBEDDED_LDFLAGS)"
S["opal_hwloc_hwloc191_CPPFLAGS"]=""
S["opal_hwloc_hwloc191_CFLAGS"]=""
S["HWLOC_EMBEDDED_LIBS"]="-lm  "
S["HWLOC_EMBEDDED_LDADD"]="$(HWLOC_top_builddir)/src/libhwloc_embedded.la"
S["HWLOC_EMBEDDED_CPPFLAGS"]="-I$(HWLOC_top_builddir)/include -I$(HWLOC_top_srcdir)/include"
S["HWLOC_EMBEDDED_CFLAGS"]=" -fvisibility=hidden"
S["HWLOC_LIBS_PRIVATE"]=" -lpthread"
S["HWLOC_LIBS"]=""
S["HWLOC_LDFLAGS"]=""
S["HWLOC_CPPFLAGS"]="-I$(HWLOC_top_builddir)/include -I$(HWLOC_top_srcdir)/include"
S["HWLOC_CFLAGS"]=" -fvisibility=hidden"
S["HWLOC_REQUIRES"]=""
S["HWLOC_PLUGINS_DIR"]="$(libdir)/hwloc"
S["HWLOC_PLUGINS_PATH"]="$(libdir)/hwloc"
S["HWLOC_HAVE_LIBXML2"]="0"
S["HWLOC_LIBXML2_LIBS"]=""
S["HWLOC_LIBXML2_CFLAGS"]=""
S["HWLOC_GL_LIBS"]=""
S["HWLOC_X11_LIBS"]="-lX11"
S["X_EXTRA_LIBS"]=""
S["X_LIBS"]=""
S["X_PRE_LIBS"]=" -lSM -lICE"
S["X_CFLAGS"]=""
S["XMKMF"]=""
S["HWLOC_HAVE_NVML"]="0"
S["HWLOC_NVML_LIBS"]=""
S["HWLOC_CUDA_LIBS"]=""
S["HWLOC_HAVE_OPENCL"]="0"
S["HWLOC_OPENCL_LIBS"]=""
S["HWLOC_PCIUTILS_LIBS"]=""
S["HWLOC_PCIUTILS_CFLAGS"]=""
S["HWLOC_PCIACCESS_LIBS"]=""
S["HWLOC_PCIACCESS_CFLAGS"]=""
S["HWLOC_LINUX_LIBNUMA_LIBS"]=""
S["BASH"]="/bin/bash"
S["HWLOC_MS_LIB"]=""
S["HWLOC_KERRIGHED_LIBS"]=""
S["HWLOC_KERRIGHED_CFLAGS"]=""
S["PKG_CONFIG"]="/usr/bin/pkg-config"
S["HWLOC_MS_LIB_ARCH"]="X64"
S["HWLOC_top_srcdir"]="/home/elwardi/foam/foam-extend-4.0/ThirdParty/rpmBuild/BUILD/openmpi-1.8.8/opal/mca/hwloc/hwloc191/hwloc"
S["HWLOC_top_builddir"]="/home/elwardi/foam/foam-extend-4.0/ThirdParty/rpmBuild/BUILD/openmpi-1.8.8/opal/mca/hwloc/hwloc191/hwloc"
S["MCA_opal_event_DSO_SUBDIRS"]=""
S["MCA_opal_event_STATIC_SUBDIRS"]=" mca/event/libevent2021"
S["MCA_opal_event_ALL_SUBDIRS"]=" mca/event/external mca/event/libevent2021"
S["MCA_opal_event_STATIC_LTLIBS"]="mca/event/libevent2021/libmca_event_libevent2021.la "
S["MCA_opal_event_DSO_COMPONENTS"]=""
S["MCA_opal_event_STATIC_COMPONENTS"]=" libevent2021"
S["MCA_opal_event_ALL_COMPONENTS"]=" external libevent2021"
S["MCA_BUILD_opal_event_libevent2021_DSO_FALSE"]=""
S["MCA_BUILD_opal_event_libevent2021_DSO_TRUE"]="#"
S["OPAL_EVENT_HAVE_THREAD_SUPPORT_FALSE"]=""
S["OPAL_EVENT_HAVE_THREAD_SUPPORT_TRUE"]="#"
S["MCA_BUILD_opal_event_external_DSO_FALSE"]=""
S["MCA_BUILD_opal_event_external_DSO_TRUE"]="#"
S["opal_event_external_LIBS"]=""
S["opal_event_external_LDFLAGS"]=""
S["opal_event_external_CPPFLAGS"]=""
S["MCA_opal_dl_DSO_SUBDIRS"]=""
S["MCA_opal_dl_STATIC_SUBDIRS"]=" mca/dl/dlopen"
S["MCA_opal_dl_ALL_SUBDIRS"]=" mca/dl/dlopen mca/dl/libltdl"
S["MCA_opal_dl_STATIC_LTLIBS"]="mca/dl/dlopen/libmca_dl_dlopen.la "
S["MCA_opal_dl_DSO_COMPONENTS"]=""
S["MCA_opal_dl_STATIC_COMPONENTS"]=" dlopen"
S["MCA_opal_dl_ALL_COMPONENTS"]=" dlopen libltdl"
S["MCA_BUILD_opal_dl_libltdl_DSO_FALSE"]=""
S["MCA_BUILD_opal_dl_libltdl_DSO_TRUE"]="#"
S["opal_dl_libltdl_LIBS"]=""
S["opal_dl_libltdl_LDFLAGS"]=""
S["opal_dl_libltdl_CPPFLAGS"]=""
S["MCA_BUILD_opal_dl_dlopen_DSO_FALSE"]=""
S["MCA_BUILD_opal_dl_dlopen_DSO_TRUE"]="#"
S["opal_dl_dlopen_LIBS"]="-ldl "
S["MCA_opal_db_DSO_SUBDIRS"]=" mca/db/print mca/db/hash"
S["MCA_opal_db_STATIC_SUBDIRS"]=""
S["MCA_opal_db_ALL_SUBDIRS"]=" mca/db/print mca/db/hash mca/db/pmi mca/db/sqlite"
S["MCA_opal_db_STATIC_LTLIBS"]=""
S["MCA_opal_db_DSO_COMPONENTS"]=" print hash"
S["MCA_opal_db_STATIC_COMPONENTS"]=""
S["MCA_opal_db_ALL_COMPONENTS"]=" print hash pmi sqlite"
S["MCA_BUILD_opal_db_sqlite_DSO_FALSE"]="#"
S["MCA_BUILD_opal_db_sqlite_DSO_TRUE"]=""
S["db_sqlite_LIBS"]=""
S["db_sqlite_LDFLAGS"]=""
S["db_sqlite_CPPFLAGS"]=""
S["MCA_BUILD_opal_db_pmi_DSO_FALSE"]="#"
S["MCA_BUILD_opal_db_pmi_DSO_TRUE"]=""
S["db_pmi_LIBS"]=""
S["db_pmi_LDFLAGS"]=""
S["db_pmi_CPPFLAGS"]=""
S["MCA_BUILD_opal_db_hash_DSO_FALSE"]="#"
S["MCA_BUILD_opal_db_hash_DSO_TRUE"]=""
S["MCA_BUILD_opal_db_print_DSO_FALSE"]="#"
S["MCA_BUILD_opal_db_print_DSO_TRUE"]=""
S["MCA_opal_crs_DSO_SUBDIRS"]=" mca/crs/none"
S["MCA_opal_crs_STATIC_SUBDIRS"]=""
S["MCA_opal_crs_ALL_SUBDIRS"]=" mca/crs/none mca/crs/dmtcp mca/crs/self mca/crs/blcr"
S["MCA_opal_crs_STATIC_LTLIBS"]=""
S["MCA_opal_crs_DSO_COMPONENTS"]=" none"
S["MCA_opal_crs_STATIC_COMPONENTS"]=""
S["MCA_opal_crs_ALL_COMPONENTS"]=" none dmtcp self blcr"
S["MCA_BUILD_opal_crs_blcr_DSO_FALSE"]="#"
S["MCA_BUILD_opal_crs_blcr_DSO_TRUE"]=""
S["MCA_BUILD_opal_crs_self_DSO_FALSE"]="#"
S["MCA_BUILD_opal_crs_self_DSO_TRUE"]=""
S["MCA_BUILD_opal_crs_dmtcp_DSO_FALSE"]="#"
S["MCA_BUILD_opal_crs_dmtcp_DSO_TRUE"]=""
S["MCA_BUILD_opal_crs_none_DSO_FALSE"]="#"
S["MCA_BUILD_opal_crs_none_DSO_TRUE"]=""
S["MCA_opal_compress_DSO_SUBDIRS"]=" mca/compress/gzip mca/compress/bzip"
S["MCA_opal_compress_STATIC_SUBDIRS"]=""
S["MCA_opal_compress_ALL_SUBDIRS"]=" mca/compress/gzip mca/compress/bzip"
S["MCA_opal_compress_STATIC_LTLIBS"]=""
S["MCA_opal_compress_DSO_COMPONENTS"]=" gzip bzip"
S["MCA_opal_compress_STATIC_COMPONENTS"]=""
S["MCA_opal_compress_ALL_COMPONENTS"]=" gzip bzip"
S["MCA_BUILD_opal_compress_bzip_DSO_FALSE"]="#"
S["MCA_BUILD_opal_compress_bzip_DSO_TRUE"]=""
S["MCA_BUILD_opal_compress_gzip_DSO_FALSE"]="#"
S["MCA_BUILD_opal_compress_gzip_DSO_TRUE"]=""
S["MCA_opal_backtrace_DSO_SUBDIRS"]=""
S["MCA_opal_backtrace_STATIC_SUBDIRS"]=" mca/backtrace/execinfo"
S["MCA_opal_backtrace_ALL_SUBDIRS"]=" mca/backtrace/printstack mca/backtrace/execinfo mca/backtrace/none"
S["MCA_opal_backtrace_STATIC_LTLIBS"]="mca/backtrace/execinfo/libmca_backtrace_execinfo.la "
S["MCA_opal_backtrace_DSO_COMPONENTS"]=""
S["MCA_opal_backtrace_STATIC_COMPONENTS"]=" execinfo"
S["MCA_opal_backtrace_ALL_COMPONENTS"]=" printstack execinfo none"
S["MCA_BUILD_opal_backtrace_none_DSO_FALSE"]=""
S["MCA_BUILD_opal_backtrace_none_DSO_TRUE"]="#"
S["MCA_BUILD_opal_backtrace_execinfo_DSO_FALSE"]=""
S["MCA_BUILD_opal_backtrace_execinfo_DSO_TRUE"]="#"
S["MCA_BUILD_opal_backtrace_printstack_DSO_FALSE"]=""
S["MCA_BUILD_opal_backtrace_printstack_DSO_TRUE"]="#"
S["MCA_opal_common_DSO_SUBDIRS"]=""
S["MCA_opal_common_STATIC_SUBDIRS"]=""
S["MCA_opal_common_ALL_SUBDIRS"]=" mca/common/pmi"
S["MCA_opal_common_STATIC_LTLIBS"]=""
S["MCA_opal_common_DSO_COMPONENTS"]=""
S["MCA_opal_common_STATIC_COMPONENTS"]=""
S["MCA_opal_common_ALL_COMPONENTS"]=" pmi"
S["MCA_BUILD_opal_common_pmi_DSO_FALSE"]="#"
S["MCA_BUILD_opal_common_pmi_DSO_TRUE"]=""
S["common_pmi_LIBS"]=""
S["common_pmi_LDFLAGS"]=""
S["common_pmi_CPPFLAGS"]=""
S["WANT_PMI2_SUPPORT_FALSE"]=""
S["WANT_PMI2_SUPPORT_TRUE"]="#"
S["WANT_PMI_SUPPORT_FALSE"]=""
S["WANT_PMI_SUPPORT_TRUE"]="#"
S["CASE_SENSITIVE_FS_FALSE"]="#"
S["CASE_SENSITIVE_FS_TRUE"]=""
S["LEXLIB"]="-lfl"
S["LEX_OUTPUT_ROOT"]="lex.yy"
S["LEX"]="flex"
S["WANT_FT_THREAD_FALSE"]=""
S["WANT_FT_THREAD_TRUE"]="#"
S["OPAL_HAVE_POSIX_THREADS_FALSE"]="#"
S["OPAL_HAVE_POSIX_THREADS_TRUE"]=""
S["OPAL_DESTRUCTOR_USE_FINI_FALSE"]=""
S["OPAL_DESTRUCTOR_USE_FINI_TRUE"]="#"
S["OMPI_MPI_OFFSET_KIND"]=""
S["OMPI_MPI_COUNT_KIND"]=""
S["OMPI_MPI_ADDRESS_KIND"]=""
S["OMPI_MPI_INTEGER_KIND"]=""
S["OSHMEM_BUILD_FORTRAN_BINDINGS_FALSE"]=""
S["OSHMEM_BUILD_FORTRAN_BINDINGS_TRUE"]="#"
S["OMPI_BUILD_FORTRAN_USEMPIF08_BINDINGS_FALSE"]=""
S["OMPI_BUILD_FORTRAN_USEMPIF08_BINDINGS_TRUE"]="#"
S["OMPI_FORTRAN_HAVE_BIND_C"]="0"
S["OMPI_FORTRAN_HAVE_C_FUNLOC"]="0"
S["OMPI_FORTRAN_HAVE_PROCEDURE"]="0"
S["OMPI_FORTRAN_HAVE_ASYNCHRONOUS"]="0"
S["OMPI_FORTRAN_HAVE_ABSTRACT"]="0"
S["OMPI_FORTRAN_HAVE_PROTECTED"]="0"
S["OMPI_FORTRAN_HAVE_PRIVATE"]="0"
S["OMPI_FORTRAN_HAVE_ISO_C_BINDING"]="0"
S["OMPI_FORTRAN_NEED_WRAPPER_ROUTINES"]="0"
S["OMPI_FORTRAN_SUBARRAYS_SUPPORTED"]=".FALSE."
S["OMPI_F_SUFFIX"]="_f"
S["OMPI_F08_SUFFIX"]="_f08"
S["OMPI_MPI_BIND_PREFIX"]="mpi_"
S["OMPI_MPI_PREFIX"]="MPI_"
S["OMPI_FORTRAN_F08_TYPE"]="real"
S["OMPI_FORTRAN_F08_PREDECL"]="!"
S["OMPI_FORTRAN_USEMPIF08_LIB"]=""
S["OMPI_FORTRAN_USEMPIF08_DIR"]=""
S["OMPI_BUILD_FORTRAN_DUMMY_MPI_MODULE_LIBRARY_FALSE"]=""
S["OMPI_BUILD_FORTRAN_DUMMY_MPI_MODULE_LIBRARY_TRUE"]="#"
S["OMPI_BUILD_FORTRAN_USEMPI_IGNORE_TKR_BINDINGS_FALSE"]=""
S["OMPI_BUILD_FORTRAN_USEMPI_IGNORE_TKR_BINDINGS_TRUE"]="#"
S["OMPI_BUILD_FORTRAN_USEMPI_TKR_BINDINGS_FALSE"]=""
S["OMPI_BUILD_FORTRAN_USEMPI_TKR_BINDINGS_TRUE"]="#"
S["OMPI_BUILD_FORTRAN_USEMPI_BINDINGS_FALSE"]=""
S["OMPI_BUILD_FORTRAN_USEMPI_BINDINGS_TRUE"]="#"
S["OMPI_FORTRAN_IGNORE_TKR_TYPE"]=""
S["OMPI_FORTRAN_IGNORE_TKR_PREDECL"]=""
S["OMPI_FORTRAN_USEMPI_LIB"]=""
S["OMPI_FORTRAN_USEMPI_DIR"]=""
S["OMPI_BUILD_FORTRAN_MPIFH_BINDINGS_FALSE"]=""
S["OMPI_BUILD_FORTRAN_MPIFH_BINDINGS_TRUE"]="#"
S["BUILD_PMPI_FORTRAN_MPIFH_BINDINGS_LAYER_FALSE"]=""
S["BUILD_PMPI_FORTRAN_MPIFH_BINDINGS_LAYER_TRUE"]="#"
S["BUILD_MPI_FORTRAN_MPIFH_BINDINGS_LAYER_FALSE"]=""
S["BUILD_MPI_FORTRAN_MPIFH_BINDINGS_LAYER_TRUE"]="#"
S["BUILD_FORTRAN_SIZEOF_FALSE"]=""
S["BUILD_FORTRAN_SIZEOF_TRUE"]="#"
S["OMPI_FC_ABSOLUTE"]="none"
S["OMPI_FC"]="none"
S["OMPI_FC_MODULE_FLAG"]=""
S["OMPI_FORTRAN_BUILD_SIZEOF"]="0"
S["OMPI_FORTRAN_HAVE_STORAGE_SIZE"]="0"
S["OMPI_FORTRAN_HAVE_ISO_FORTRAN_ENV"]="0"
S["OMPI_FORTRAN_HAVE_INTERFACE"]="0"
S["OMPI_FORTRAN_CKINDS"]=""
S["OMPI_FORTRAN_RKINDS"]=""
S["OMPI_FORTRAN_IKINDS"]=""
S["OMPI_FORTRAN_STATUS_SIZE"]="6"
S["OMPI_FORTRAN_MAX_ARRAY_RANK"]="0"
S["OMPI_ALIGNMENT_FORTRAN_DOUBLE_COMPLEX"]="4"
S["OMPI_SIZEOF_FORTRAN_DOUBLE_COMPLEX"]="4"
S["OMPI_KIND_FORTRAN_DOUBLE_COMPLEX"]="0"
S["OMPI_HAVE_FORTRAN_DOUBLE_COMPLEX"]="0"
S["OMPI_ALIGNMENT_FORTRAN_COMPLEX32"]="4"
S["OMPI_SIZEOF_FORTRAN_COMPLEX32"]="4"
S["OMPI_KIND_FORTRAN_COMPLEX32"]="0"
S["OMPI_HAVE_FORTRAN_COMPLEX32"]="0"
S["OMPI_ALIGNMENT_FORTRAN_COMPLEX16"]="4"
S["OMPI_SIZEOF_FORTRAN_COMPLEX16"]="4"
S["OMPI_KIND_FORTRAN_COMPLEX16"]="0"
S["OMPI_HAVE_FORTRAN_COMPLEX16"]="0"
S["OMPI_ALIGNMENT_FORTRAN_COMPLEX8"]="4"
S["OMPI_SIZEOF_FORTRAN_COMPLEX8"]="4"
S["OMPI_KIND_FORTRAN_COMPLEX8"]="0"
S["OMPI_HAVE_FORTRAN_COMPLEX8"]="0"
S["OMPI_ALIGNMENT_FORTRAN_COMPLEX4"]="4"
S["OMPI_SIZEOF_FORTRAN_COMPLEX4"]="4"
S["OMPI_KIND_FORTRAN_COMPLEX4"]="0"
S["OMPI_HAVE_FORTRAN_COMPLEX4"]="0"
S["OMPI_ALIGNMENT_FORTRAN_COMPLEX"]="4"
S["OMPI_SIZEOF_FORTRAN_COMPLEX"]="4"
S["OMPI_KIND_FORTRAN_COMPLEX"]="0"
S["OMPI_HAVE_FORTRAN_COMPLEX"]="0"
S["OMPI_ALIGNMENT_FORTRAN_DOUBLE_PRECISION"]="4"
S["OMPI_SIZEOF_FORTRAN_DOUBLE_PRECISION"]="4"
S["OMPI_KIND_FORTRAN_DOUBLE_PRECISION"]="0"
S["OMPI_HAVE_FORTRAN_DOUBLE_PRECISION"]="0"
S["OMPI_ALIGNMENT_FORTRAN_REAL16"]="4"
S["OMPI_SIZEOF_FORTRAN_REAL16"]="4"
S["OMPI_KIND_FORTRAN_REAL16"]="0"
S["OMPI_HAVE_FORTRAN_REAL16"]="0"
S["OMPI_ALIGNMENT_FORTRAN_REAL8"]="4"
S["OMPI_SIZEOF_FORTRAN_REAL8"]="4"
S["OMPI_KIND_FORTRAN_REAL8"]="0"
S["OMPI_HAVE_FORTRAN_REAL8"]="0"
S["OMPI_ALIGNMENT_FORTRAN_REAL4"]="4"
S["OMPI_SIZEOF_FORTRAN_REAL4"]="4"
S["OMPI_KIND_FORTRAN_REAL4"]="0"
S["OMPI_HAVE_FORTRAN_REAL4"]="0"
S["OMPI_ALIGNMENT_FORTRAN_REAL2"]="4"
S["OMPI_SIZEOF_FORTRAN_REAL2"]="4"
S["OMPI_KIND_FORTRAN_REAL2"]="0"
S["OMPI_HAVE_FORTRAN_REAL2"]="0"
S["OMPI_ALIGNMENT_FORTRAN_REAL"]="4"
S["OMPI_SIZEOF_FORTRAN_REAL"]="4"
S["OMPI_KIND_FORTRAN_REAL"]="0"
S["OMPI_HAVE_FORTRAN_REAL"]="0"
S["OMPI_ALIGNMENT_FORTRAN_INTEGER16"]="4"
S["OMPI_SIZEOF_FORTRAN_INTEGER16"]="4"
S["OMPI_KIND_FORTRAN_INTEGER16"]="0"
S["OMPI_HAVE_FORTRAN_INTEGER16"]="0"
S["OMPI_ALIGNMENT_FORTRAN_INTEGER8"]="4"
S["OMPI_SIZEOF_FORTRAN_INTEGER8"]="4"
S["OMPI_KIND_FORTRAN_INTEGER8"]="0"
S["OMPI_HAVE_FORTRAN_INTEGER8"]="0"
S["OMPI_ALIGNMENT_FORTRAN_INTEGER4"]="4"
S["OMPI_SIZEOF_FORTRAN_INTEGER4"]="4"
S["OMPI_KIND_FORTRAN_INTEGER4"]="0"
S["OMPI_HAVE_FORTRAN_INTEGER4"]="0"
S["OMPI_ALIGNMENT_FORTRAN_INTEGER2"]="4"
S["OMPI_SIZEOF_FORTRAN_INTEGER2"]="4"
S["OMPI_KIND_FORTRAN_INTEGER2"]="0"
S["OMPI_HAVE_FORTRAN_INTEGER2"]="0"
S["OMPI_ALIGNMENT_FORTRAN_INTEGER1"]="4"
S["OMPI_SIZEOF_FORTRAN_INTEGER1"]="4"
S["OMPI_KIND_FORTRAN_INTEGER1"]="0"
S["OMPI_HAVE_FORTRAN_INTEGER1"]="0"
S["OMPI_ALIGNMENT_FORTRAN_INTEGER"]="4"
S["OMPI_SIZEOF_FORTRAN_INTEGER"]="4"
S["OMPI_KIND_FORTRAN_INTEGER"]="0"
S["OMPI_HAVE_FORTRAN_INTEGER"]="0"
S["OMPI_ALIGNMENT_FORTRAN_LOGICAL8"]="4"
S["OMPI_SIZEOF_FORTRAN_LOGICAL8"]="4"
S["OMPI_KIND_FORTRAN_LOGICAL8"]="0"
S["OMPI_HAVE_FORTRAN_LOGICAL8"]="0"
S["OMPI_ALIGNMENT_FORTRAN_LOGICAL4"]="4"
S["OMPI_SIZEOF_FORTRAN_LOGICAL4"]="4"
S["OMPI_KIND_FORTRAN_LOGICAL4"]="0"
S["OMPI_HAVE_FORTRAN_LOGICAL4"]="0"
S["OMPI_ALIGNMENT_FORTRAN_LOGICAL2"]="4"
S["OMPI_SIZEOF_FORTRAN_LOGICAL2"]="4"
S["OMPI_KIND_FORTRAN_LOGICAL2"]="0"
S["OMPI_HAVE_FORTRAN_LOGICAL2"]="0"
S["OMPI_ALIGNMENT_FORTRAN_LOGICAL1"]="4"
S["OMPI_SIZEOF_FORTRAN_LOGICAL1"]="4"
S["OMPI_KIND_FORTRAN_LOGICAL1"]="0"
S["OMPI_HAVE_FORTRAN_LOGICAL1"]="0"
S["OMPI_ALIGNMENT_FORTRAN_LOGICAL"]="4"
S["OMPI_SIZEOF_FORTRAN_LOGICAL"]="4"
S["OMPI_KIND_FORTRAN_LOGICAL"]="0"
S["OMPI_HAVE_FORTRAN_LOGICAL"]="0"
S["OMPI_ALIGNMENT_FORTRAN_CHARACTER"]="4"
S["OMPI_SIZEOF_FORTRAN_CHARACTER"]="4"
S["OMPI_KIND_FORTRAN_CHARACTER"]="0"
S["OMPI_HAVE_FORTRAN_CHARACTER"]="0"
S["FCFLAGS_f90"]=""
S["FCFLAGS_f"]=""
S["OMPI_FORTRAN_EXTRA_SHARED_LIBRARY_FLAGS"]=""
S["ac_ct_FC"]=""
S["FCFLAGS"]=""
S["FC"]=""
S["LN_S"]="ln -s"
S["OMPI_ASM_FILE"]="atomic-amd64-linux.s"
S["OPAL_HAVE_ASM_FILE_FALSE"]="#"
S["OPAL_HAVE_ASM_FILE_TRUE"]=""
S["PERL"]="/usr/bin/perl"
S["FGREP"]="/bin/grep -F"
S["OPAL_ASSEMBLY_BUILTIN"]="BUILTIN_NO"
S["OPAL_ASSEMBLY_ARCH"]="AMD64"
S["OPAL_ASSEMBLY_FORMAT"]="default-.text-.globl-:--.L-@-1-0-1-1-1"
S["OPAL_ASM_SUPPORT_64BIT"]="1"
S["OPAL_ASM_TYPE"]="@"
S["OPAL_ASM_LSYM"]=".L"
S["NM"]="/usr/bin/nm -B"
S["ac_ct_DUMPBIN"]=""
S["DUMPBIN"]=""
S["OPAL_ASM_GSYM"]=""
S["OMPI_AS_LABEL_SUFFIX"]=""
S["OBJDUMP"]="objdump"
S["OMPI_AS_GLOBAL"]=""
S["OPAL_ASM_TEXT"]=".text"
S["am__fastdepCCAS_FALSE"]="#"
S["am__fastdepCCAS_TRUE"]=""
S["CCASDEPMODE"]="depmode=gcc3"
S["CCASFLAGS"]="-O3 -DNDEBUG -m64 -fPIC -finline-functions -fno-strict-aliasing"
S["CCAS"]="gcc-5"
S["OMPI_WANT_JAVA_BINDINGS_FALSE"]=""
S["OMPI_WANT_JAVA_BINDINGS_TRUE"]="#"
S["OPAL_HAVE_JAVA_SUPPORT_FALSE"]=""
S["OPAL_HAVE_JAVA_SUPPORT_TRUE"]="#"
S["OPAL_JDK_CPPFLAGS"]=""
S["JAR"]=""
S["JAVAH"]=""
S["JAVAC"]=""
S["BUILD_MPI_CXX_BINDINGS_FALSE"]="#"
S["BUILD_MPI_CXX_BINDINGS_TRUE"]=""
S["OMPI_CXX_ABSOLUTE"]="/usr/bin/g++-5"
S["OPAL_CXX_ABSOLUTE"]="/usr/bin/g++-5"
S["CXXCPP"]="g++-5 -E"
S["am__fastdepCXX_FALSE"]="#"
S["am__fastdepCXX_TRUE"]=""
S["CXXDEPMODE"]="depmode=gcc3"
S["ac_ct_CXX"]=""
S["CXXFLAGS"]="-O3 -DNDEBUG -m64 -fPIC -finline-functions -pthread"
S["CXX"]="g++-5"
S["OSHMEM_PROFILING_FALSE"]="#"
S["OSHMEM_PROFILING_TRUE"]=""
S["COMPILE_PROFILING_SEPARATELY_FALSE"]=""
S["COMPILE_PROFILING_SEPARATELY_TRUE"]="#"
S["BUILD_PMPI_BINDINGS_LAYER_FALSE"]="#"
S["BUILD_PMPI_BINDINGS_LAYER_TRUE"]=""
S["BUILD_MPI_BINDINGS_LAYER_FALSE"]=""
S["BUILD_MPI_BINDINGS_LAYER_TRUE"]="#"
S["OMPI_NEED_WINDOWS_REPLACEMENTS_FALSE"]=""
S["OMPI_NEED_WINDOWS_REPLACEMENTS_TRUE"]="#"
S["WRAPPER_CC"]="gcc-5"
S["OPAL_CC_ABSOLUTE"]="/usr/bin/gcc-5"
S["PROJECT_OSHMEM_FALSE"]="#"
S["PROJECT_OSHMEM_TRUE"]=""
S["PROJECT_ORTE_FALSE"]="#"
S["PROJECT_ORTE_TRUE"]=""
S["PROJECT_OMPI_FALSE"]="#"
S["PROJECT_OMPI_TRUE"]=""
S["OSHMEM_LIBSHMEM_EXTRA_LDFLAGS"]=""
S["OSHMEM_LIBSHMEM_EXTRA_LIBS"]=""
S["MPIF_H_PMPI_W_FUNCS"]=", PMPI_WTICK, PMPI_WTIME"
S["WANT_PERUSE_FALSE"]=""
S["WANT_PERUSE_TRUE"]="#"
S["ORTE_DISABLE_FULL_SUPPORT_FALSE"]=""
S["ORTE_DISABLE_FULL_SUPPORT_TRUE"]="#"
S["OPAL_cuda_gdr_support_FALSE"]=""
S["OPAL_cuda_gdr_support_TRUE"]="#"
S["OPAL_cuda_get_attributes_FALSE"]=""
S["OPAL_cuda_get_attributes_TRUE"]="#"
S["OPAL_cuda_sync_memops_FALSE"]=""
S["OPAL_cuda_sync_memops_TRUE"]="#"
S["OPAL_cuda_support_41_FALSE"]=""
S["OPAL_cuda_support_41_TRUE"]="#"
S["OPAL_cuda_support_FALSE"]=""
S["OPAL_cuda_support_TRUE"]="#"
S["opal_datatype_cuda_CPPFLAGS"]=""
S["OPAL_MAX_DATAREP_STRING"]="128"
S["OPAL_MAX_PORT_NAME"]="1024"
S["OPAL_MAX_INFO_VAL"]="256"
S["OPAL_MAX_INFO_KEY"]="36"
S["OPAL_MAX_OBJECT_NAME"]="64"
S["OPAL_MAX_ERROR_STRING"]="256"
S["OPAL_MAX_PROCESSOR_NAME"]="256"
S["OPAL_WANT_SCRIPT_WRAPPER_COMPILERS_FALSE"]=""
S["OPAL_WANT_SCRIPT_WRAPPER_COMPILERS_TRUE"]="#"
S["OMPI_INSTALL_BINARIES_FALSE"]="#"
S["OMPI_INSTALL_BINARIES_TRUE"]=""
S["WANT_FT_CR_FALSE"]=""
S["WANT_FT_CR_TRUE"]="#"
S["WANT_FT_FALSE"]=""
S["WANT_FT_TRUE"]="#"
S["WANT_INSTALL_HEADERS_FALSE"]=""
S["WANT_INSTALL_HEADERS_TRUE"]="#"
S["top_ompi_builddir"]="/home/elwardi/foam/foam-extend-4.0/ThirdParty/rpmBuild/BUILD/openmpi-1.8.8"
S["top_ompi_srcdir"]="/home/elwardi/foam/foam-extend-4.0/ThirdParty/rpmBuild/BUILD/openmpi-1.8.8"
S["ac_prefix_program"]=""
S["CLEANFILES"]="*~ .\\#*"
S["OMPI_TOP_SRCDIR"]="/home/elwardi/foam/foam-extend-4.0/ThirdParty/rpmBuild/BUILD/openmpi-1.8.8"
S["OMPI_TOP_BUILDDIR"]="/home/elwardi/foam/foam-extend-4.0/ThirdParty/rpmBuild/BUILD/openmpi-1.8.8"
S["libopen_pal_so_version"]="8:2:2"
S["libmca_opal_common_pmi_so_version"]="2:3:1"
S["libmca_opal_common_hwloc_so_version"]=""
S["liboshmem_so_version"]="3:1:0"
S["libopen_rte_so_version"]="7:6:0"
S["libmca_common_verbs_so_version"]="2:3:2"
S["libmca_common_ugni_so_version"]="2:1:2"
S["libmca_common_sm_so_version"]="4:4:0"
S["libmca_common_ofacm_so_version"]=""
S["libmca_common_mx_so_version"]="2:5:0"
S["libmca_common_cuda_so_version"]="1:8:0"
S["libmpi_java_so_version"]="3:1:2"
S["libmpi_usempif08_so_version"]="6:1:6"
S["libmpi_usempi_ignore_tkr_so_version"]="1:0:1"
S["libmpi_usempi_tkr_so_version"]="5:0:4"
S["libmpi_mpifh_so_version"]="7:2:5"
S["libmpi_cxx_so_version"]="2:3:1"
S["libmpi_so_version"]="7:3:6"
S["OPAL_RELEASE_DATE"]="Aug 05, 2015"
S["OPAL_VERSION"]="1.8.8"
S["OPAL_TARBALL_VERSION"]="1.8.8"
S["OPAL_REPO_REV"]="v1.8.7-20-g1d53995"
S["OPAL_GREEK_VERSION"]=""
S["OPAL_RELEASE_VERSION"]="8"
S["OPAL_MINOR_VERSION"]="8"
S["OPAL_MAJOR_VERSION"]="1"
S["OSHMEM_RELEASE_DATE"]="Aug 05, 2015"
S["OSHMEM_VERSION"]="1.8.8"
S["OSHMEM_TARBALL_VERSION"]="1.8.8"
S["OSHMEM_REPO_REV"]="v1.8.7-20-g1d53995"
S["OSHMEM_GREEK_VERSION"]=""
S["OSHMEM_RELEASE_VERSION"]="8"
S["OSHMEM_MINOR_VERSION"]="8"
S["OSHMEM_MAJOR_VERSION"]="1"
S["ORTE_RELEASE_DATE"]="Aug 05, 2015"
S["ORTE_VERSION"]="1.8.8"
S["ORTE_TARBALL_VERSION"]="1.8.8"
S["ORTE_REPO_REV"]="v1.8.7-20-g1d53995"
S["ORTE_GREEK_VERSION"]=""
S["ORTE_RELEASE_VERSION"]="8"
S["ORTE_MINOR_VERSION"]="8"
S["ORTE_MAJOR_VERSION"]="1"
S["OMPI_RELEASE_DATE"]="Aug 05, 2015"
S["OMPI_VERSION"]="1.8.8"
S["OMPI_TARBALL_VERSION"]="1.8.8"
S["OMPI_REPO_REV"]="v1.8.7-20-g1d53995"
S["OMPI_GREEK_VERSION"]=""
S["OMPI_RELEASE_VERSION"]="8"
S["OMPI_MINOR_VERSION"]="8"
S["OMPI_MAJOR_VERSION"]="1"
S["CONFIGURE_DEPENDENCIES"]="$(top_srcdir)/VERSION"
S["AM_BACKSLASH"]="\\"
S["AM_DEFAULT_VERBOSITY"]="0"
S["AM_DEFAULT_V"]="$(AM_DEFAULT_VERBOSITY)"
S["AM_V"]="$(V)"
S["am__fastdepCC_FALSE"]="#"
S["am__fastdepCC_TRUE"]=""
S["CCDEPMODE"]="depmode=gcc3"
S["am__nodep"]="_no"
S["AMDEPBACKSLASH"]="\\"
S["AMDEP_FALSE"]="#"
S["AMDEP_TRUE"]=""
S["am__quote"]=""
S["am__include"]="include"
S["DEPDIR"]=".deps"
S["am__untar"]="tar -xf -"
S["am__tar"]="tar --format=ustar -chf - \"$$tardir\""
S["AMTAR"]="$${TAR-tar}"
S["am__leading_dot"]="."
S["SET_MAKE"]=""
S["AWK"]="mawk"
S["mkdir_p"]="$(MKDIR_P)"
S["MKDIR_P"]="/bin/mkdir -p"
S["INSTALL_STRIP_PROGRAM"]="$(install_sh) -c -s"
S["STRIP"]="strip"
S["install_sh"]="${SHELL} /home/elwardi/foam/foam-extend-4.0/ThirdParty/rpmBuild/BUILD/openmpi-1.8.8/config/install-sh"
S["MAKEINFO"]="${SHELL} /home/elwardi/foam/foam-extend-4.0/ThirdParty/rpmBuild/BUILD/openmpi-1.8.8/config/missing --run makeinfo"
S["AUTOHEADER"]="${SHELL} /home/elwardi/foam/foam-extend-4.0/ThirdParty/rpmBuild/BUILD/openmpi-1.8.8/config/missing --run autoheader"
S["AUTOMAKE"]="${SHELL} /home/elwardi/foam/foam-extend-4.0/ThirdParty/rpmBuild/BUILD/openmpi-1.8.8/config/missing --run automake-1.12"
S["AUTOCONF"]="${SHELL} /home/elwardi/foam/foam-extend-4.0/ThirdParty/rpmBuild/BUILD/openmpi-1.8.8/config/missing --run autoconf"
S["ACLOCAL"]="${SHELL} /home/elwardi/foam/foam-extend-4.0/ThirdParty/rpmBuild/BUILD/openmpi-1.8.8/config/missing --run aclocal-1.12"
S["VERSION"]="1.8.8"
S["PACKAGE"]="openmpi"
S["CYGPATH_W"]="echo"
S["am__isrc"]=""
S["INSTALL_DATA"]="${INSTALL} -m 644"
S["INSTALL_SCRIPT"]="${INSTALL}"
S["INSTALL_PROGRAM"]="${INSTALL}"
S["EGREP"]="/bin/grep -E"
S["GREP"]="/bin/grep"
S["CPP"]="gcc-5 -E"
S["OBJEXT"]="o"
S["EXEEXT"]=""
S["ac_ct_CC"]="gcc-5"
S["CPPFLAGS"]="-I$(top_srcdir)   -I/home/elwardi/foam/foam-extend-4.0/ThirdParty/rpmBuild/BUILD/openmpi-1.8.8/opal/mca/hwloc/hwloc191/hwloc/include -I/home/elwardi"\
"/foam/foam-extend-4.0/ThirdParty/rpmBuild/BUILD/openmpi-1.8.8/opal/mca/event/libevent2021/libevent -I/home/elwardi/foam/foam-extend-4.0/ThirdParty/r"\
"pmBuild/BUILD/openmpi-1.8.8/opal/mca/event/libevent2021/libevent/include"
S["LDFLAGS"]="-m64 "
S["CFLAGS"]="-O3 -DNDEBUG -m64 -fPIC -finline-functions -fno-strict-aliasing -pthread"
S["CC"]="gcc-5"
S["target_os"]="linux-gnu"
S["target_vendor"]="pc"
S["target_cpu"]="x86_64"
S["target"]="x86_64-pc-linux-gnu"
S["host_os"]="linux-gnu"
S["host_vendor"]="pc"
S["host_cpu"]="x86_64"
S["host"]="x86_64-pc-linux-gnu"
S["build_os"]="linux-gnu"
S["build_vendor"]="pc"
S["build_cpu"]="x86_64"
S["build"]="x86_64-pc-linux-gnu"
S["OPAL_CONFIGURE_DATE"]="Wed Aug 28 10:36:40 CET 2019"
S["OPAL_CONFIGURE_HOST"]="Elwardi-PC"
S["OPAL_CONFIGURE_USER"]="elwardi"
S["OPAL_PARAM_FROM_PLATFORM"]=""
S["OPAL_DEFAULT_MCA_PARAM_CONF"]="openmpi-mca-params.conf"
S["target_alias"]=""
S["host_alias"]=""
S["build_alias"]=""
S["LIBS"]="-lrt -lm -lutil  "
S["ECHO_T"]=""
S["ECHO_N"]="-n"
S["ECHO_C"]=""
S["DEFS"]="-DHAVE_CONFIG_H"
S["mandir"]="${datarootdir}/man"
S["localedir"]="${datarootdir}/locale"
S["libdir"]="${exec_prefix}/lib"
S["psdir"]="${docdir}"
S["pdfdir"]="${docdir}"
S["dvidir"]="${docdir}"
S["htmldir"]="${docdir}"
S["infodir"]="${datarootdir}/info"
S["docdir"]="${datarootdir}/doc/${PACKAGE_TARNAME}"
S["oldincludedir"]="/usr/include"
S["includedir"]="${prefix}/include"
S["localstatedir"]="${prefix}/var"
S["sharedstatedir"]="${prefix}/com"
S["sysconfdir"]="${prefix}/etc"
S["datadir"]="${datarootdir}"
S["datarootdir"]="${prefix}/share"
S["libexecdir"]="${exec_prefix}/libexec"
S["sbindir"]="${exec_prefix}/sbin"
S["bindir"]="${exec_prefix}/bin"
S["program_transform_name"]="s,x,x,"
S["prefix"]="/home/elwardi/foam/foam-extend-4.0/ThirdParty/packages/openmpi-1.8.8/platforms/linux64GccDPDebug"
S["exec_prefix"]="/home/elwardi/foam/foam-extend-4.0/ThirdParty/packages/openmpi-1.8.8/platforms/linux64GccDPDebug"
S["PACKAGE_URL"]=""
S["PACKAGE_BUGREPORT"]="http://www.open-mpi.org/community/help/"
S["PACKAGE_STRING"]="Open MPI 1.8.8"
S["PACKAGE_VERSION"]="1.8.8"
S["PACKAGE_TARNAME"]="openmpi"
S["PACKAGE_NAME"]="Open MPI"
S["PATH_SEPARATOR"]=":"
S["SHELL"]="/bin/bash"
_ACAWK
cat >>"$ac_tmp/subs1.awk" <<_ACAWK &&
  for (key in S) S_is_set[key] = 1
  FS = ""

}
{
  line = $ 0
  nfields = split(line, field, "@")
  substed = 0
  len = length(field[1])
  for (i = 2; i < nfields; i++) {
    key = field[i]
    keylen = length(key)
    if (S_is_set[key]) {
      value = S[key]
      line = substr(line, 1, len) "" value "" substr(line, len + keylen + 3)
      len += length(value) + length(field[++i])
      substed = 1
    } else
      len += 1 + keylen
  }

  print line
}

_ACAWK
if sed "s/$ac_cr//" < /dev/null > /dev/null 2>&1; then
  sed "s/$ac_cr\$//; s/$ac_cr/$ac_cs_awk_cr/g"
else
  cat
fi < "$ac_tmp/subs1.awk" > "$ac_tmp/subs.awk" \
  || as_fn_error $? "could not setup config files machinery" "$LINENO" 5
fi # test -n "$CONFIG_FILES"

# Set up the scripts for CONFIG_HEADERS section.
# No need to generate them if there are no CONFIG_HEADERS.
# This happens for instance with `./config.status Makefile'.
if test -n "$CONFIG_HEADERS"; then
cat >"$ac_tmp/defines.awk" <<\_ACAWK ||
BEGIN {
D["PACKAGE_NAME"]=" \"Open MPI\""
D["PACKAGE_TARNAME"]=" \"openmpi\""
D["PACKAGE_VERSION"]=" \"1.8.8\""
D["PACKAGE_STRING"]=" \"Open MPI 1.8.8\""
D["PACKAGE_BUGREPORT"]=" \"http://www.open-mpi.org/community/help/\""
D["PACKAGE_URL"]=" \"\""
D["OPAL_ARCH"]=" \"x86_64-pc-linux-gnu\""
D["STDC_HEADERS"]=" 1"
D["HAVE_SYS_TYPES_H"]=" 1"
D["HAVE_SYS_STAT_H"]=" 1"
D["HAVE_STDLIB_H"]=" 1"
D["HAVE_STRING_H"]=" 1"
D["HAVE_MEMORY_H"]=" 1"
D["HAVE_STRINGS_H"]=" 1"
D["HAVE_INTTYPES_H"]=" 1"
D["HAVE_STDINT_H"]=" 1"
D["HAVE_UNISTD_H"]=" 1"
D["__EXTENSIONS__"]=" 1"
D["_ALL_SOURCE"]=" 1"
D["_GNU_SOURCE"]=" 1"
D["_POSIX_PTHREAD_SEMANTICS"]=" 1"
D["_TANDEM_SOURCE"]=" 1"
D["OMPI_MAJOR_VERSION"]=" 1"
D["OMPI_MINOR_VERSION"]=" 8"
D["OMPI_RELEASE_VERSION"]=" 8"
D["OMPI_GREEK_VERSION"]=" \"\""
D["OMPI_REPO_REV"]=" \"v1.8.7-20-g1d53995\""
D["OMPI_TARBALL_VERSION"]=" \"1.8.8\""
D["OMPI_VERSION"]=" \"8\""
D["OMPI_RELEASE_DATE"]=" \"Aug 05, 2015\""
D["ORTE_MAJOR_VERSION"]=" 1"
D["ORTE_MINOR_VERSION"]=" 8"
D["ORTE_RELEASE_VERSION"]=" 8"
D["ORTE_GREEK_VERSION"]=" \"\""
D["ORTE_REPO_REV"]=" \"v1.8.7-20-g1d53995\""
D["ORTE_TARBALL_VERSION"]=" \"1.8.8\""
D["ORTE_VERSION"]=" \"8\""
D["ORTE_RELEASE_DATE"]=" \"Aug 05, 2015\""
D["OSHMEM_MAJOR_VERSION"]=" 1"
D["OSHMEM_MINOR_VERSION"]=" 8"
D["OSHMEM_RELEASE_VERSION"]=" 8"
D["OSHMEM_GREEK_VERSION"]=" \"\""
D["OSHMEM_REPO_REV"]=" \"v1.8.7-20-g1d53995\""
D["OSHMEM_TARBALL_VERSION"]=" \"1.8.8\""
D["OSHMEM_VERSION"]=" \"8\""
D["OSHMEM_RELEASE_DATE"]=" \"Aug 05, 2015\""
D["OPAL_MAJOR_VERSION"]=" 1"
D["OPAL_MINOR_VERSION"]=" 8"
D["OPAL_RELEASE_VERSION"]=" 8"
D["OPAL_GREEK_VERSION"]=" \"\""
D["OPAL_REPO_REV"]=" \"v1.8.7-20-g1d53995\""
D["OPAL_TARBALL_VERSION"]=" \"1.8.8\""
D["OPAL_VERSION"]=" \"8\""
D["OPAL_RELEASE_DATE"]=" \"Aug 05, 2015\""
D["OPAL_ENABLE_MEM_DEBUG"]=" 0"
D["OPAL_ENABLE_MEM_PROFILE"]=" 0"
D["OPAL_ENABLE_DEBUG"]=" 0"
D["OPAL_WANT_PRETTY_PRINT_STACKTRACE"]=" 1"
D["OPAL_ENABLE_PTY_SUPPORT"]=" 1"
D["OPAL_ENABLE_HETEROGENEOUS_SUPPORT"]=" 0"
D["OPAL_ENABLE_FT"]=" 0"
D["OPAL_ENABLE_FT_CR"]=" 0"
D["OPAL_WANT_HOME_CONFIG_FILES"]=" 1"
D["OPAL_ENABLE_IPV6"]=" 0"
D["OPAL_PACKAGE_STRING"]=" \"Open MPI elwardi@Elwardi-PC Distribution\""
D["OPAL_IDENT_STRING"]=" \"1.8.8\""
D["OPAL_MAX_PROCESSOR_NAME"]=" 256"
D["OPAL_MAX_ERROR_STRING"]=" 256"
D["OPAL_MAX_OBJECT_NAME"]=" 64"
D["OPAL_MAX_INFO_KEY"]=" 36"
D["OPAL_MAX_INFO_VAL"]=" 256"
D["OPAL_MAX_PORT_NAME"]=" 1024"
D["OPAL_MAX_DATAREP_STRING"]=" 128"
D["OPAL_ENABLE_CRDEBUG"]=" 0"
D["OPAL_ENABLE_GETPWUID"]=" 1"
D["OPAL_HAVE_SOLARIS"]=" 0"
D["HAVE_NETDB_H"]=" 1"
D["HAVE_NETINET_IN_H"]=" 1"
D["HAVE_NETINET_TCP_H"]=" 1"
D["HAVE_STRUCT_SOCKADDR_IN"]=" 1"
D["OPAL_CUDA_SUPPORT"]=" 0"
D["OPAL_CUDA_SUPPORT_41"]=" 0"
D["OPAL_CUDA_SYNC_MEMOPS"]=" 0"
D["OPAL_CUDA_GET_ATTRIBUTES"]=" 0"
D["OPAL_CUDA_GDR_SUPPORT"]=" 0"
D["ORTE_DISABLE_FULL_SUPPORT"]=" 0"
D["ORTE_WANT_ORTERUN_PREFIX_BY_DEFAULT"]=" 1"
D["ORTE_ENABLE_SENSORS"]=" 0"
D["ORTE_ENABLE_STATIC_PORTS"]=" 1"
D["OMPI_WANT_MPI_INTERFACE_WARNING"]=" 1"
D["OMPI_GROUP_SPARSE"]=" 0"
D["OMPI_WANT_PERUSE"]=" 0"
D["OMPI_WANT_MPI_CXX_SEEK"]=" 1"
D["MPI_PARAM_CHECK"]=" ompi_mpi_param_check"
D["OMPI_PARAM_CHECK"]=" 1"
D["OMPI_BUILD_FORTRAN_F08_SUBARRAYS"]=" 0"
D["OMPI_ENABLE_PROGRESS_THREADS"]=" 0"
D["OSHMEM_SPEC_COMPAT"]=" 1"
D["OSHMEM_PARAM_CHECK"]=" 0"
D["HAVE_ON_EXIT"]=" 1"
D["OPAL_CC"]=" \"gcc-5\""
D["STDC_HEADERS"]=" 1"
D["_GNU_SOURCE"]=" 1"
D["OPAL_C_HAVE_BUILTIN_EXPECT"]=" 1"
D["OPAL_C_HAVE_BUILTIN_PREFETCH"]=" 1"
D["OPAL_C_HAVE_BUILTIN_CLZ"]=" 1"
D["OPAL_CC_USE_PRAGMA_IDENT"]=" 0"
D["OPAL_CC_USE_IDENT"]=" 1"
D["OPAL_CC_USE_PRAGMA_COMMENT"]=" "
D["OPAL_CC_USE_CONST_CHAR_IDENT"]=" 0"
D["HAVE_INT8_T"]=" 1"
D["HAVE_UINT8_T"]=" 1"
D["HAVE_INT16_T"]=" 1"
D["HAVE_UINT16_T"]=" 1"
D["HAVE_INT32_T"]=" 1"
D["HAVE_UINT32_T"]=" 1"
D["HAVE_INT64_T"]=" 1"
D["HAVE_UINT64_T"]=" 1"
D["HAVE_LONG_LONG"]=" 1"
D["HAVE___FLOAT128"]=" 1"
D["HAVE_LONG_DOUBLE"]=" 1"
D["HAVE_COMPLEX_H"]=" 1"
D["HAVE_FLOAT__COMPLEX"]=" 1"
D["HAVE_DOUBLE__COMPLEX"]=" 1"
D["HAVE_LONG_DOUBLE__COMPLEX"]=" 1"
D["HAVE_INTPTR_T"]=" 1"
D["HAVE_UINTPTR_T"]=" 1"
D["HAVE_MODE_T"]=" 1"
D["HAVE_SSIZE_T"]=" 1"
D["HAVE_PTRDIFF_T"]=" 1"
D["SIZEOF_CHAR"]=" 1"
D["SIZEOF_SHORT"]=" 2"
D["SIZEOF_INT"]=" 4"
D["SIZEOF_LONG"]=" 8"
D["SIZEOF_LONG_LONG"]=" 8"
D["SIZEOF_FLOAT"]=" 4"
D["SIZEOF_DOUBLE"]=" 8"
D["SIZEOF_LONG_DOUBLE"]=" 16"
D["SIZEOF___FLOAT128"]=" 16"
D["SIZEOF_FLOAT__COMPLEX"]=" 8"
D["SIZEOF_DOUBLE__COMPLEX"]=" 16"
D["SIZEOF_LONG_DOUBLE__COMPLEX"]=" 32"
D["SIZEOF_VOID_P"]=" 8"
D["SIZEOF_SIZE_T"]=" 8"
D["SIZEOF_SSIZE_T"]=" 8"
D["SIZEOF_PTRDIFF_T"]=" 8"
D["SIZEOF_WCHAR_T"]=" 4"
D["OPAL_ALIGNMENT_BOOL"]=" 1"
D["OPAL_ALIGNMENT_INT8"]=" 1"
D["OPAL_ALIGNMENT_INT16"]=" 2"
D["OPAL_ALIGNMENT_INT32"]=" 4"
D["OPAL_ALIGNMENT_INT64"]=" 8"
D["OPAL_ALIGNMENT_CHAR"]=" 1"
D["OPAL_ALIGNMENT_SHORT"]=" 2"
D["OPAL_ALIGNMENT_WCHAR"]=" 4"
D["OPAL_ALIGNMENT_INT"]=" 4"
D["OPAL_ALIGNMENT_LONG"]=" 8"
D["OPAL_ALIGNMENT_LONG_LONG"]=" 8"
D["OPAL_ALIGNMENT_FLOAT"]=" 4"
D["OPAL_ALIGNMENT_DOUBLE"]=" 8"
D["OPAL_ALIGNMENT_LONG_DOUBLE"]=" 16"
D["OPAL_ALIGNMENT___FLOAT128"]=" 16"
D["OPAL_ALIGNMENT_FLOAT_COMPLEX"]=" 4"
D["OPAL_ALIGNMENT_DOUBLE_COMPLEX"]=" 8"
D["OPAL_ALIGNMENT_LONG_DOUBLE_COMPLEX"]=" 16"
D["OPAL_ALIGNMENT_VOID_P"]=" 8"
D["OPAL_ALIGNMENT_SIZE_T"]=" 8"
D["OPAL_NEED_C_BOOL"]=" 1"
D["SIZEOF__BOOL"]=" 1"
D["OMPI_ENABLE_MPI_PROFILING"]=" 1"
D["OPAL_HAVE_WEAK_SYMBOLS"]=" 1"
D["OPAL_CXX"]=" \"g++-5\""
D["SIZEOF_BOOL"]=" 1"
D["OPAL_ALIGNMENT_CXX_BOOL"]=" 1"
D["OMPI_CXX"]=" \"g++-5\""
D["SIZEOF_BOOL"]=" 1"
D["OPAL_ALIGNMENT_CXX_BOOL"]=" 1"
D["OMPI_HAVE_CXX_EXCEPTION_SUPPORT"]=" 0"
D["OPAL_CXX_USE_PRAGMA_IDENT"]=" 0"
D["OPAL_CXX_USE_IDENT"]=" 1"
D["OPAL_CXX_USE_PRAGMA_COMMENT"]=" "
D["OPAL_CXX_USE_CONST_CHAR_IDENT"]=" 0"
D["OMPI_CXX_HAVE_BUILTIN_EXPECT"]=" 1"
D["OMPI_CXX_HAVE_BUILTIN_PREFETCH"]=" 1"
D["OMPI_CXX_SUPPORTS_2D_CONST_CAST"]=" 1"
D["OMPI_BUILD_CXX_BINDINGS"]=" 1"
D["OPAL_HAVE_ATTRIBUTE"]=" 1"
D["OPAL_HAVE_ATTRIBUTE_ALIGNED"]=" 1"
D["OPAL_HAVE_ATTRIBUTE_ALWAYS_INLINE"]=" 1"
D["OPAL_HAVE_ATTRIBUTE_COLD"]=" 1"
D["OPAL_HAVE_ATTRIBUTE_CONST"]=" 1"
D["OPAL_HAVE_ATTRIBUTE_DEPRECATED"]=" 1"
D["OPAL_HAVE_ATTRIBUTE_DEPRECATED_ARGUMENT"]=" 1"
D["OPAL_HAVE_ATTRIBUTE_FORMAT"]=" 1"
D["OPAL_HAVE_ATTRIBUTE_FORMAT_FUNCPTR"]=" 1"
D["OPAL_HAVE_ATTRIBUTE_HOT"]=" 1"
D["OPAL_HAVE_ATTRIBUTE_MALLOC"]=" 1"
D["OPAL_HAVE_ATTRIBUTE_MAY_ALIAS"]=" 1"
D["OPAL_HAVE_ATTRIBUTE_NO_INSTRUMENT_FUNCTION"]=" 1"
D["OPAL_HAVE_ATTRIBUTE_NOINLINE"]=" 1"
D["OPAL_HAVE_ATTRIBUTE_NONNULL"]=" 1"
D["OPAL_HAVE_ATTRIBUTE_NORETURN"]=" 1"
D["OPAL_HAVE_ATTRIBUTE_NORETURN_FUNCPTR"]=" 1"
D["OPAL_HAVE_ATTRIBUTE_PACKED"]=" 1"
D["OPAL_HAVE_ATTRIBUTE_PURE"]=" 1"
D["OPAL_HAVE_ATTRIBUTE_SENTINEL"]=" 1"
D["OPAL_HAVE_ATTRIBUTE_UNUSED"]=" 1"
D["OPAL_HAVE_ATTRIBUTE_VISIBILITY"]=" 1"
D["OPAL_HAVE_ATTRIBUTE_WARN_UNUSED_RESULT"]=" 1"
D["OPAL_HAVE_ATTRIBUTE_WEAK_ALIAS"]=" 1"
D["OPAL_HAVE_ATTRIBUTE_DESTRUCTOR"]=" 1"
D["OPAL_BUILD_PLATFORM_COMPILER_FAMILYID"]=" 1"
D["OPAL_BUILD_PLATFORM_COMPILER_FAMILYNAME"]=" GNU"
D["OPAL_BUILD_PLATFORM_COMPILER_VERSION"]=" 328960"
D["OPAL_BUILD_PLATFORM_COMPILER_VERSION_STR"]=" 5.5.0"
D["OPAL_HAVE_JAVA_SUPPORT"]=" no"
D["OMPI_WANT_JAVA_BINDINGS"]=" 0"
D["OPAL_WANT_SMP_LOCKS"]=" 1"
D["OPAL_ASM_TEXT"]=" \".text\""
D["OPAL_ASM_GLOBAL"]=" \".globl\""
D["OPAL_ASM_LABEL_SUFFIX"]=" \":\""
D["OPAL_ASM_GSYM"]=" \"\""
D["OPAL_ASM_LSYM"]=" \".L\""
D["OPAL_ASM_TYPE"]=" \"@\""
D["OPAL_ASM_SIZE"]=" \"1\""
D["OPAL_ASM_ALIGN_LOG"]=" "
D["OPAL_ASM_SUPPORT_64BIT"]=" 1"
D["OPAL_C_GCC_INLINE_ASSEMBLY"]=" 1"
D["OPAL_C_DEC_INLINE_ASSEMBLY"]=" 0"
D["OPAL_C_XLC_INLINE_ASSEMBLY"]=" 0"
D["OPAL_ASSEMBLY_FORMAT"]=" \"default-.text-.globl-:--.L-@-1-0-1-1-1\""
D["OPAL_ASSEMBLY_ARCH"]=" OMPI_AMD64"
D["OPAL_ASSEMBLY_BUILTIN"]=" OMPI_BUILTIN_NO"
D["OPAL_HAVE_ASM_FILE"]=" 1"
D["OMPI_FORTRAN_DOUBLE_UNDERSCORE"]=" 0"
D["OMPI_FORTRAN_SINGLE_UNDERSCORE"]=" 0"
D["OMPI_FORTRAN_CAPS"]=" 0"
D["OMPI_FORTRAN_PLAIN"]=" 0"
D["ompi_fortran_bogus_type_t"]=" int"
D["OMPI_HAVE_FORTRAN_CHARACTER"]=" 0"
D["OMPI_SIZEOF_FORTRAN_CHARACTER"]=" 4"
D["OMPI_ALIGNMENT_FORTRAN_CHARACTER"]=" 4"
D["OMPI_KIND_FORTRAN_CHARACTER"]=" 0"
D["ompi_fortran_character_t"]=" ompi_fortran_bogus_type_t"
D["OMPI_HAVE_FORTRAN_LOGICAL"]=" 0"
D["OMPI_SIZEOF_FORTRAN_LOGICAL"]=" 4"
D["OMPI_ALIGNMENT_FORTRAN_LOGICAL"]=" 4"
D["OMPI_KIND_FORTRAN_LOGICAL"]=" 0"
D["ompi_fortran_logical_t"]=" ompi_fortran_bogus_type_t"
D["OMPI_HAVE_FORTRAN_LOGICAL1"]=" 0"
D["OMPI_SIZEOF_FORTRAN_LOGICAL1"]=" 4"
D["OMPI_ALIGNMENT_FORTRAN_LOGICAL1"]=" 4"
D["OMPI_KIND_FORTRAN_LOGICAL1"]=" 0"
D["ompi_fortran_logical1_t"]=" ompi_fortran_bogus_type_t"
D["OMPI_HAVE_FORTRAN_LOGICAL2"]=" 0"
D["OMPI_SIZEOF_FORTRAN_LOGICAL2"]=" 4"
D["OMPI_ALIGNMENT_FORTRAN_LOGICAL2"]=" 4"
D["OMPI_KIND_FORTRAN_LOGICAL2"]=" 0"
D["ompi_fortran_logical2_t"]=" ompi_fortran_bogus_type_t"
D["OMPI_HAVE_FORTRAN_LOGICAL4"]=" 0"
D["OMPI_SIZEOF_FORTRAN_LOGICAL4"]=" 4"
D["OMPI_ALIGNMENT_FORTRAN_LOGICAL4"]=" 4"
D["OMPI_KIND_FORTRAN_LOGICAL4"]=" 0"
D["ompi_fortran_logical4_t"]=" ompi_fortran_bogus_type_t"
D["OMPI_HAVE_FORTRAN_LOGICAL8"]=" 0"
D["OMPI_SIZEOF_FORTRAN_LOGICAL8"]=" 4"
D["OMPI_ALIGNMENT_FORTRAN_LOGICAL8"]=" 4"
D["OMPI_KIND_FORTRAN_LOGICAL8"]=" 0"
D["ompi_fortran_logical8_t"]=" ompi_fortran_bogus_type_t"
D["OMPI_HAVE_FORTRAN_INTEGER"]=" 0"
D["OMPI_SIZEOF_FORTRAN_INTEGER"]=" 4"
D["OMPI_ALIGNMENT_FORTRAN_INTEGER"]=" 4"
D["OMPI_KIND_FORTRAN_INTEGER"]=" 0"
D["ompi_fortran_integer_t"]=" ompi_fortran_bogus_type_t"
D["OMPI_HAVE_FORTRAN_INTEGER1"]=" 0"
D["OMPI_SIZEOF_FORTRAN_INTEGER1"]=" 4"
D["OMPI_ALIGNMENT_FORTRAN_INTEGER1"]=" 4"
D["OMPI_KIND_FORTRAN_INTEGER1"]=" 0"
D["ompi_fortran_integer1_t"]=" ompi_fortran_bogus_type_t"
D["OMPI_HAVE_FORTRAN_INTEGER2"]=" 0"
D["OMPI_SIZEOF_FORTRAN_INTEGER2"]=" 4"
D["OMPI_ALIGNMENT_FORTRAN_INTEGER2"]=" 4"
D["OMPI_KIND_FORTRAN_INTEGER2"]=" 0"
D["ompi_fortran_integer2_t"]=" ompi_fortran_bogus_type_t"
D["OMPI_HAVE_FORTRAN_INTEGER4"]=" 0"
D["OMPI_SIZEOF_FORTRAN_INTEGER4"]=" 4"
D["OMPI_ALIGNMENT_FORTRAN_INTEGER4"]=" 4"
D["OMPI_KIND_FORTRAN_INTEGER4"]=" 0"
D["ompi_fortran_integer4_t"]=" ompi_fortran_bogus_type_t"
D["OMPI_HAVE_FORTRAN_INTEGER8"]=" 0"
D["OMPI_SIZEOF_FORTRAN_INTEGER8"]=" 4"
D["OMPI_ALIGNMENT_FORTRAN_INTEGER8"]=" 4"
D["OMPI_KIND_FORTRAN_INTEGER8"]=" 0"
D["ompi_fortran_integer8_t"]=" ompi_fortran_bogus_type_t"
D["OMPI_HAVE_FORTRAN_INTEGER16"]=" 0"
D["OMPI_SIZEOF_FORTRAN_INTEGER16"]=" 4"
D["OMPI_ALIGNMENT_FORTRAN_INTEGER16"]=" 4"
D["OMPI_KIND_FORTRAN_INTEGER16"]=" 0"
D["ompi_fortran_integer16_t"]=" ompi_fortran_bogus_type_t"
D["OMPI_HAVE_FORTRAN_REAL"]=" 0"
D["OMPI_SIZEOF_FORTRAN_REAL"]=" 4"
D["OMPI_ALIGNMENT_FORTRAN_REAL"]=" 4"
D["OMPI_KIND_FORTRAN_REAL"]=" 0"
D["ompi_fortran_real_t"]=" ompi_fortran_bogus_type_t"
D["OMPI_HAVE_FORTRAN_REAL2"]=" 0"
D["OMPI_SIZEOF_FORTRAN_REAL2"]=" 4"
D["OMPI_ALIGNMENT_FORTRAN_REAL2"]=" 4"
D["OMPI_KIND_FORTRAN_REAL2"]=" 0"
D["ompi_fortran_real2_t"]=" ompi_fortran_bogus_type_t"
D["OMPI_HAVE_FORTRAN_REAL4"]=" 0"
D["OMPI_SIZEOF_FORTRAN_REAL4"]=" 4"
D["OMPI_ALIGNMENT_FORTRAN_REAL4"]=" 4"
D["OMPI_KIND_FORTRAN_REAL4"]=" 0"
D["ompi_fortran_real4_t"]=" ompi_fortran_bogus_type_t"
D["OMPI_HAVE_FORTRAN_REAL8"]=" 0"
D["OMPI_SIZEOF_FORTRAN_REAL8"]=" 4"
D["OMPI_ALIGNMENT_FORTRAN_REAL8"]=" 4"
D["OMPI_KIND_FORTRAN_REAL8"]=" 0"
D["ompi_fortran_real8_t"]=" ompi_fortran_bogus_type_t"
D["OMPI_HAVE_FORTRAN_REAL16"]=" 0"
D["OMPI_SIZEOF_FORTRAN_REAL16"]=" 4"
D["OMPI_ALIGNMENT_FORTRAN_REAL16"]=" 4"
D["OMPI_KIND_FORTRAN_REAL16"]=" 0"
D["ompi_fortran_real16_t"]=" ompi_fortran_bogus_type_t"
D["OMPI_REAL16_MATCHES_C"]=" 0"
D["OMPI_HAVE_FORTRAN_DOUBLE_PRECISION"]=" 0"
D["OMPI_SIZEOF_FORTRAN_DOUBLE_PRECISION"]=" 4"
D["OMPI_ALIGNMENT_FORTRAN_DOUBLE_PRECISION"]=" 4"
D["OMPI_KIND_FORTRAN_DOUBLE_PRECISION"]=" 0"
D["ompi_fortran_double_precision_t"]=" ompi_fortran_bogus_type_t"
D["OMPI_HAVE_FORTRAN_COMPLEX"]=" 0"
D["OMPI_SIZEOF_FORTRAN_COMPLEX"]=" 4"
D["OMPI_ALIGNMENT_FORTRAN_COMPLEX"]=" 4"
D["OMPI_KIND_FORTRAN_COMPLEX"]=" 0"
D["OMPI_HAVE_FORTRAN_COMPLEX4"]=" 0"
D["OMPI_SIZEOF_FORTRAN_COMPLEX4"]=" 4"
D["OMPI_ALIGNMENT_FORTRAN_COMPLEX4"]=" 4"
D["OMPI_KIND_FORTRAN_COMPLEX4"]=" 0"
D["OMPI_HAVE_FORTRAN_COMPLEX8"]=" 0"
D["OMPI_SIZEOF_FORTRAN_COMPLEX8"]=" 4"
D["OMPI_ALIGNMENT_FORTRAN_COMPLEX8"]=" 4"
D["OMPI_KIND_FORTRAN_COMPLEX8"]=" 0"
D["OMPI_HAVE_FORTRAN_COMPLEX16"]=" 0"
D["OMPI_SIZEOF_FORTRAN_COMPLEX16"]=" 4"
D["OMPI_ALIGNMENT_FORTRAN_COMPLEX16"]=" 4"
D["OMPI_KIND_FORTRAN_COMPLEX16"]=" 0"
D["OMPI_HAVE_FORTRAN_COMPLEX32"]=" 0"
D["OMPI_SIZEOF_FORTRAN_COMPLEX32"]=" 4"
D["OMPI_ALIGNMENT_FORTRAN_COMPLEX32"]=" 4"
D["OMPI_KIND_FORTRAN_COMPLEX32"]=" 0"
D["OMPI_HAVE_FORTRAN_DOUBLE_COMPLEX"]=" 0"
D["OMPI_SIZEOF_FORTRAN_DOUBLE_COMPLEX"]=" 4"
D["OMPI_ALIGNMENT_FORTRAN_DOUBLE_COMPLEX"]=" 4"
D["OMPI_KIND_FORTRAN_DOUBLE_COMPLEX"]=" 0"
D["OMPI_FORTRAN_HANDLE_MAX"]=" 2147483647"
D["OMPI_FORTRAN_VALUE_TRUE"]=" 77"
D["OMPI_FORTRAN_MAX_ARRAY_RANK"]=" 0"
D["OMPI_FC"]=" \"none\""
D["OMPI_FC_ABSOLUTE"]=" \"none\""
D["OMPI_FORTRAN_BUILD_SIZEOF"]=" 0"
D["OMPI_FORTRAN_HAVE_INTERFACE"]=" 0"
D["OMPI_FORTRAN_HAVE_ISO_FORTRAN_ENV"]=" 0"
D["OMPI_FORTRAN_HAVE_STORAGE_SIZE"]=" 0"
D["OMPI_BUILD_FORTRAN_MPIFH_BINDINGS"]=" 0"
D["OMPI_FORTRAN_IGNORE_TKR_PREDECL"]=" \"\""
D["OMPI_FORTRAN_IGNORE_TKR_TYPE"]=" "
D["OMPI_BUILD_FORTRAN_USEMPI_BINDINGS"]=" 0"
D["OMPI_FORTRAN_HAVE_IGNORE_TKR"]=" 0"
D["OMPI_FORTRAN_SUBARRAYS_SUPPORTED"]=" .FALSE."
D["OMPI_FORTRAN_NEED_WRAPPER_ROUTINES"]=" 0"
D["OMPI_FORTRAN_F08_HANDLE_SIZE"]=" 4"
D["OMPI_BUILD_FORTRAN_USEMPIF08_BINDINGS"]=" 0"
D["OMPI_FORTRAN_HAVE_F08_ASSUMED_RANK"]=" 0"
D["OMPI_FORTRAN_HAVE_BIND_C"]=" 0"
D["OMPI_FORTRAN_HAVE_ISO_C_BINDING"]=" 0"
D["OMPI_FORTRAN_HAVE_BIND_C_SUB"]=" 0"
D["OMPI_FORTRAN_HAVE_BIND_C_TYPE"]=" 0"
D["OMPI_FORTRAN_HAVE_BIND_C_TYPE_NAME"]=" 0"
D["OMPI_FORTRAN_HAVE_OPTIONAL_ARGS"]=" 0"
D["OMPI_FORTRAN_HAVE_PRIVATE"]=" 0"
D["OMPI_FORTRAN_HAVE_PROTECTED"]=" 0"
D["OMPI_FORTRAN_HAVE_ABSTRACT"]=" 0"
D["OMPI_FORTRAN_HAVE_ASYNCHRONOUS"]=" 0"
D["OMPI_FORTRAN_HAVE_PROCEDURE"]=" 0"
D["OMPI_FORTRAN_HAVE_C_FUNLOC"]=" 0"
D["HAVE_ALLOCA_H"]=" 1"
D["HAVE_AIO_H"]=" 1"
D["HAVE_ARPA_INET_H"]=" 1"
D["HAVE_DIRENT_H"]=" 1"
D["HAVE_DLFCN_H"]=" 1"
D["HAVE_EXECINFO_H"]=" 1"
D["HAVE_ERR_H"]=" 1"
D["HAVE_FCNTL_H"]=" 1"
D["HAVE_GRP_H"]=" 1"
D["HAVE_INTTYPES_H"]=" 1"
D["HAVE_LIBGEN_H"]=" 1"
D["HAVE_MEMORY_H"]=" 1"
D["HAVE_NETDB_H"]=" 1"
D["HAVE_NETINET_IN_H"]=" 1"
D["HAVE_NETINET_TCP_H"]=" 1"
D["HAVE_POLL_H"]=" 1"
D["HAVE_PTHREAD_H"]=" 1"
D["HAVE_PTY_H"]=" 1"
D["HAVE_PWD_H"]=" 1"
D["HAVE_SCHED_H"]=" 1"
D["HAVE_STDINT_H"]=" 1"
D["HAVE_STDDEF_H"]=" 1"
D["HAVE_STDLIB_H"]=" 1"
D["HAVE_STRING_H"]=" 1"
D["HAVE_STRINGS_H"]=" 1"
D["HAVE_STROPTS_H"]=" 1"
D["HAVE_SYS_FCNTL_H"]=" 1"
D["HAVE_SYS_IPC_H"]=" 1"
D["HAVE_SYS_SHM_H"]=" 1"
D["HAVE_SYS_IOCTL_H"]=" 1"
D["HAVE_SYS_MMAN_H"]=" 1"
D["HAVE_SYS_PARAM_H"]=" 1"
D["HAVE_SYS_QUEUE_H"]=" 1"
D["HAVE_SYS_RESOURCE_H"]=" 1"
D["HAVE_SYS_SELECT_H"]=" 1"
D["HAVE_SYS_SOCKET_H"]=" 1"
D["HAVE_STDARG_H"]=" 1"
D["HAVE_SYS_STAT_H"]=" 1"
D["HAVE_SYS_STATFS_H"]=" 1"
D["HAVE_SYS_STATVFS_H"]=" 1"
D["HAVE_SYS_TIME_H"]=" 1"
D["HAVE_SYS_TYPES_H"]=" 1"
D["HAVE_SYS_UIO_H"]=" 1"
D["HAVE_SYS_UN_H"]=" 1"
D["HAVE_SYS_UTSNAME_H"]=" 1"
D["HAVE_SYS_VFS_H"]=" 1"
D["HAVE_SYS_WAIT_H"]=" 1"
D["HAVE_SYSLOG_H"]=" 1"
D["HAVE_TIME_H"]=" 1"
D["HAVE_TERMIOS_H"]=" 1"
D["HAVE_ULIMIT_H"]=" 1"
D["HAVE_UNISTD_H"]=" 1"
D["HAVE_UTMP_H"]=" 1"
D["HAVE_MALLOC_H"]=" 1"
D["HAVE_IFADDRS_H"]=" 1"
D["HAVE_REGEX_H"]=" 1"
D["HAVE_SIGNAL_H"]=" 1"
D["HAVE_MNTENT_H"]=" 1"
D["HAVE_PATHS_H"]=" 1"
D["HAVE_LIMITS_H"]=" 1"
D["HAVE_SYS_MOUNT_H"]=" 1"
D["HAVE_SYS_SYSCTL_H"]=" 1"
D["HAVE_NET_IF_H"]=" 1"
D["HAVE_STDBOOL_H"]=" 1"
D["OPAL_USE_STDBOOL_H"]=" 1"
D["SIZEOF_PID_T"]=" 4"
D["HAVE_SOCKLEN_T"]=" 1"
D["HAVE_STRUCT_SOCKADDR_IN"]=" 1"
D["HAVE_STRUCT_SOCKADDR_IN6"]=" 1"
D["HAVE_STRUCT_SOCKADDR_STORAGE"]=" 1"
D["HAVE_DECL_AF_UNSPEC"]=" 1"
D["HAVE_DECL_PF_UNSPEC"]=" 1"
D["HAVE_DECL_AF_INET6"]=" 1"
D["HAVE_DECL_PF_INET6"]=" 1"
D["OPAL_HAVE_SA_RESTART"]=" 1"
D["HAVE_STRUCT_DIRENT_D_TYPE"]=" 1"
D["HAVE_SIGINFO_T_SI_FD"]=" 1"
D["HAVE_SIGINFO_T_SI_BAND"]=" 1"
D["HAVE_STRUCT_STATFS_F_TYPE"]=" 1"
D["OPAL_PTRDIFF_TYPE"]=" ptrdiff_t"
D["OMPI_MPI_AINT_TYPE"]=" ptrdiff_t"
D["OMPI_MPI_COUNT_SIZE"]=" 8"
D["OMPI_MPI_COUNT_TYPE"]=" long long"
D["MPI_COUNT_MAX"]=" 0x7fffffffffffffffll"
D["OMPI_MPI_OFFSET_TYPE"]=" long long"
D["OMPI_MPI_OFFSET_SIZE"]=" 8"
D["OMPI_OFFSET_DATATYPE"]=" MPI_LONG_LONG"
D["OPAL_NO_LIB_DESTRUCTOR"]=" 0"
D["OPAL_HAVE_OPENPTY"]=" 1"
D["OPAL_HAVE_GETHOSTBYNAME"]=" 1"
D["OPAL_HAVE_SOCKET"]=" 1"
D["OPAL_HAVE_SCHED_YIELD"]=" 1"
D["OPAL_HAVE_DIRNAME"]=" 1"
D["OPAL_HAVE_CEIL"]=" 1"
D["HAVE_ASPRINTF"]=" 1"
D["HAVE_SNPRINTF"]=" 1"
D["HAVE_VASPRINTF"]=" 1"
D["HAVE_VSNPRINTF"]=" 1"
D["HAVE_OPENPTY"]=" 1"
D["HAVE_ISATTY"]=" 1"
D["HAVE_GETPWUID"]=" 1"
D["HAVE_FORK"]=" 1"
D["HAVE_WAITPID"]=" 1"
D["HAVE_EXECVE"]=" 1"
D["HAVE_PIPE"]=" 1"
D["HAVE_PTSNAME"]=" 1"
D["HAVE_SETSID"]=" 1"
D["HAVE_MMAP"]=" 1"
D["HAVE_TCGETPGRP"]=" 1"
D["HAVE_POSIX_MEMALIGN"]=" 1"
D["HAVE_STRSIGNAL"]=" 1"
D["HAVE_SYSCONF"]=" 1"
D["HAVE_SYSLOG"]=" 1"
D["HAVE_VSYSLOG"]=" 1"
D["HAVE_REGEXEC"]=" 1"
D["HAVE_REGFREE"]=" 1"
D["HAVE_SOCKETPAIR"]=" 1"
D["HAVE_USLEEP"]=" 1"
D["HAVE_MKFIFO"]=" 1"
D["HAVE_STATFS"]=" 1"
D["HAVE_STATVFS"]=" 1"
D["HAVE_SETPGID"]=" 1"
D["HAVE_SETENV"]=" 1"
D["HAVE_UNIX_BYTESWAP"]=" 1"
D["OPAL_HAVE_VA_COPY"]=" 1"
D["OPAL_HAVE_UNDERSCORE_VA_COPY"]=" 1"
D["HAVE_DECL___FUNC__"]=" 1"
D["OPAL_HAVE__SC_NPROCESSORS_ONLN"]=" 1"
D["OPAL_HAVE_BROKEN_QSORT"]=" 0"
D["OPAL_ALIGN_WORD_SIZE_INTEGERS"]=" 0"
D["HAVE_PTHREAD_MUTEXATTR_SETPSHARED"]=" 1"
D["HAVE_PTHREAD_CONDATTR_SETPSHARED"]=" 1"
D["OMPI_HAVE_PTHREAD_MUTEX_ERRORCHECK_NP"]=" 1"
D["OMPI_HAVE_PTHREAD_MUTEX_ERRORCHECK"]=" 1"
D["OPAL_HAVE_POSIX_THREADS"]=" 1"
D["OPAL_ENABLE_MULTI_THREADS"]=" 1"
D["OPAL_ENABLE_FT_THREAD"]=" 0"
D["OMPI_ENABLE_THREAD_MULTIPLE"]=" 0"
D["YYTEXT_POINTER"]=" 1"
D["ORTE_CLEAN_PS_CMD"]=" \"ps -A -o fname,pid,user\""
D["HAVE_DECL_RLIMIT_NPROC"]=" 1"
D["HAVE_DECL_RLIMIT_MEMLOCK"]=" 1"
D["HAVE_DECL_RLIMIT_NOFILE"]=" 1"
D["HAVE_DECL_RLIMIT_FSIZE"]=" 1"
D["HAVE_DECL_RLIMIT_CORE"]=" 1"
D["HAVE_DECL_RLIMIT_STACK"]=" 1"
D["HAVE_DECL_RLIMIT_AS"]=" 1"
D["HWLOC_SYM_PREFIX"]=" opal_hwloc191_"
D["HWLOC_SYM_PREFIX_CAPS"]=" OPAL_HWLOC191_"
D["HWLOC_SYM_TRANSFORM"]=" 1"
D["_HPUX_SOURCE"]=" 1"
D["SIZEOF_VOID_P"]=" 8"
D["HWLOC_LINUX_SYS"]=" 1"
D["HWLOC_HAVE_LINUXPCI"]=" 1"
D["HWLOC_X86_64_ARCH"]=" 1"
D["SIZEOF_UNSIGNED_LONG"]=" 8"
D["HWLOC_SIZEOF_UNSIGNED_LONG"]=" 8"
D["SIZEOF_UNSIGNED_INT"]=" 4"
D["HWLOC_SIZEOF_UNSIGNED_INT"]=" 4"
D["HWLOC_HAVE_ATTRIBUTE"]=" 1"
D["HWLOC_HAVE_ATTRIBUTE_ALIGNED"]=" 1"
D["HWLOC_HAVE_ATTRIBUTE_ALWAYS_INLINE"]=" 1"
D["HWLOC_HAVE_ATTRIBUTE_COLD"]=" 1"
D["HWLOC_HAVE_ATTRIBUTE_CONST"]=" 1"
D["HWLOC_HAVE_ATTRIBUTE_DEPRECATED"]=" 1"
D["HWLOC_HAVE_ATTRIBUTE_FORMAT"]=" 1"
D["HWLOC_HAVE_ATTRIBUTE_HOT"]=" 1"
D["HWLOC_HAVE_ATTRIBUTE_MALLOC"]=" 1"
D["HWLOC_HAVE_ATTRIBUTE_MAY_ALIAS"]=" 1"
D["HWLOC_HAVE_ATTRIBUTE_NO_INSTRUMENT_FUNCTION"]=" 1"
D["HWLOC_HAVE_ATTRIBUTE_NONNULL"]=" 1"
D["HWLOC_HAVE_ATTRIBUTE_NORETURN"]=" 1"
D["HWLOC_HAVE_ATTRIBUTE_PACKED"]=" 1"
D["HWLOC_HAVE_ATTRIBUTE_PURE"]=" 1"
D["HWLOC_HAVE_ATTRIBUTE_SENTINEL"]=" 1"
D["HWLOC_HAVE_ATTRIBUTE_UNUSED"]=" 1"
D["HWLOC_HAVE_ATTRIBUTE_WARN_UNUSED_RESULT"]=" 1"
D["HWLOC_HAVE_ATTRIBUTE_WEAK_ALIAS"]=" 1"
D["HWLOC_C_HAVE_VISIBILITY"]=" 1"
D["HAVE_UNISTD_H"]=" 1"
D["HAVE_DIRENT_H"]=" 1"
D["HAVE_STRINGS_H"]=" 1"
D["HAVE_CTYPE_H"]=" 1"
D["HAVE_STRNCASECMP"]=" 1"
D["HWLOC_HAVE_DECL_STRNCASECMP"]=" 1"
D["HAVE_STRFTIME"]=" 1"
D["HAVE_SETLOCALE"]=" 1"
D["HWLOC_HAVE_STDINT_H"]=" 1"
D["HAVE_SYS_MMAN_H"]=" 1"
D["HAVE_DECL_FABSF"]=" 1"
D["HAVE_DECL__SC_NPROCESSORS_ONLN"]=" 1"
D["HAVE_DECL__SC_NPROCESSORS_CONF"]=" 1"
D["HAVE_DECL__SC_NPROC_ONLN"]=" 0"
D["HAVE_DECL__SC_NPROC_CONF"]=" 0"
D["HAVE_DECL__SC_PAGESIZE"]=" 1"
D["HAVE_DECL__SC_PAGE_SIZE"]=" 1"
D["HAVE_DECL__SC_LARGE_PAGESIZE"]=" 0"
D["HAVE_SYS_PARAM_H"]=" 1"
D["HAVE_SYS_SYSCTL_H"]=" 1"
D["HAVE_DECL_CTL_HW"]=" 0"
D["HAVE_DECL_HW_NCPU"]=" 0"
D["HAVE_DECL_STRTOULL"]=" 1"
D["HAVE_SYSCTL"]=" 1"
D["HAVE_PTHREAD_T"]=" 1"
D["hwloc_pid_t"]=" pid_t"
D["hwloc_thread_t"]=" pthread_t"
D["HWLOC_HAVE_SCHED_SETAFFINITY"]=" 1"
D["HWLOC_HAVE_CPU_SET"]=" 1"
D["HWLOC_HAVE_CPU_SET_S"]=" 1"
D["HAVE_FFS"]=" 1"
D["HWLOC_HAVE_DECL_FFS"]=" 1"
D["HWLOC_HAVE_FFS"]=" 1"
D["HAVE_FFSL"]=" 1"
D["HWLOC_HAVE_DECL_FFSL"]=" 1"
D["HWLOC_HAVE_FFSL"]=" 1"
D["HAVE_OPENAT"]=" 1"
D["HAVE_MALLOC_H"]=" 1"
D["HAVE_GETPAGESIZE"]=" 1"
D["HAVE_MEMALIGN"]=" 1"
D["HAVE_POSIX_MEMALIGN"]=" 1"
D["HAVE_SYS_UTSNAME_H"]=" 1"
D["HAVE_UNAME"]=" 1"
D["HAVE_DECL_PTHREAD_SETAFFINITY_NP"]=" 1"
D["HAVE_DECL_PTHREAD_GETAFFINITY_NP"]=" 1"
D["HAVE_X11_XLIB_H"]=" 1"
D["HAVE_X11_XUTIL_H"]=" 1"
D["HAVE_X11_KEYSYM_H"]=" 1"
D["HWLOC_HAVE_X11_KEYSYM"]=" 1"
D["HWLOC_HAVE_X86_CPUID"]=" 1"
D["HWLOC_HAVE_PTHREAD_MUTEX"]=" 1"
D["HWLOC_HWLOC191_HWLOC_VERSION"]=" \"internal v1.9.2\""
D["MCA_hwloc_IMPLEMENTATION_HEADER"]=" \"opal/mca/hwloc/hwloc191/hwloc191.h\""
D["OPAL_HAVE_HWLOC"]=" 1"
D["WANT_PMI_SUPPORT"]=" 0"
D["WANT_PMI2_SUPPORT"]=" 0"
D["HAVE_UCONTEXT_H"]=" 1"
D["HAVE_EXECINFO_H"]=" 1"
D["OPAL_HAVE_BACKTRACE_EXECINFO"]=" 1"
D["WANT_PMI_SUPPORT"]=" 0"
D["WANT_PMI2_SUPPORT"]=" 0"
D["HAVE_DLFCN_H"]=" 1"
D["OPAL_DL_LIBLTDL_HAVE_LT_DLADVISE"]=" 0"
D["OPAL_HAVE_DL_SUPPORT"]=" 1"
D["OPAL_HAVE_WORKING_EVENTOPS"]=" 1"
D["MCA_event_IMPLEMENTATION_HEADER"]=" \"opal/mca/event/libevent2021/libevent2021.h\""
D["HAVE_STRUCT_IFREQ_IFR_HWADDR"]=" 1"
D["HAVE_STRUCT_IFREQ_IFR_MTU"]=" 1"
D["OMPI_WANT_MEMCHECKER"]=" 0"
D["MCA_memcpy_IMPLEMENTATION_HEADER"]=" \"opal/mca/memcpy/base/memcpy_base_default.h\""
D["MEMORY_LINUX_PTMALLOC2"]=" 0"
D["HAVE_STROPTS_H"]=" 1"
D["MEMORY_LINUX_UMMUNOTIFY"]=" 0"
D["OMPI_MEMORY_HAVE_COMPONENT"]=" 0"
D["MCA_memory_IMPLEMENTATION_HEADER"]=" \"opal/mca/memory/base/empty.h\""
D["HAVE_DECL_HZ"]=" 1"
D["OPAL_SHMEM_MMAP"]=" 1"
D["OPAL_HAVE_SHMEM_POSIX"]=" 1"
D["OPAL_SHMEM_POSIX"]=" 1"
D["OPAL_SHMEM_SYSV"]=" 1"
D["MCA_timer_IMPLEMENTATION_HEADER"]=" \"opal/mca/timer/linux/timer_linux.h\""
D["WANT_PMI_SUPPORT"]=" 0"
D["WANT_PMI2_SUPPORT"]=" 0"
D["OPAL_HAVE_YP_ALL_NSL"]=" 1"
D["WANT_PMI_SUPPORT"]=" 0"
D["WANT_PMI2_SUPPORT"]=" 0"
D["HAVE_STRUCT_SOCKADDR_IN"]=" 1"
D["OPAL_HAVE_YP_ALL_NSL"]=" 1"
D["OPAL_HAVE_YP_ALL_NSL"]=" 1"
D["OMPI_OPENIB_PAD_HDR"]=" 0"
D["HAVE_FCNTL_H"]=" 1"
D["HAVE_SYS_POLL_H"]=" 1"
D["OMPI_HAVE_CONNECTX_XRC"]=" 0"
D["OMPI_HAVE_CONNECTX_XRC_DOMAINS"]=" 0"
D["OMPI_ENABLE_DYNAMIC_SL"]=" 0"
D["OMPI_PROC_ENDPOINT_TAG_BML"]=" 0"
D["OMPI_BTL_SM_HAVE_CMA"]=" 0"
D["OMPI_BTL_SM_HAVE_KNEM"]=" 0"
D["OMPI_PORTALS4_MAX_MD_SIZE"]=" 0"
D["OMPI_PORTALS4_MAX_VA_SIZE"]=" 0"
D["OMPI_BTL_PORTALS4_FLOW_CONTROL"]=" 0"
D["HAVE_STRUCT_SOCKADDR_IN"]=" 1"
D["OMPI_OPENIB_PAD_HDR"]=" 0"
D["HAVE_FCNTL_H"]=" 1"
D["HAVE_SYS_POLL_H"]=" 1"
D["OMPI_HAVE_CONNECTX_XRC"]=" 0"
D["OMPI_HAVE_CONNECTX_XRC_DOMAINS"]=" 0"
D["OMPI_ENABLE_DYNAMIC_SL"]=" 0"
D["BTL_OPENIB_FAILOVER_ENABLED"]=" 0"
D["BTL_OPENIB_MALLOC_HOOKS_ENABLED"]=" 1"
D["OMPI_BTL_VADER_HAVE_XPMEM"]=" 0"
D["OMPI_BTL_VADER_HAVE_CMA"]=" 0"
D["OMPI_BTL_VADER_HAVE_KNEM"]=" 0"
D["OMPI_BTL_USNIC_UNIT_TESTS"]=" 0"
D["HAVE_NET_IF_H"]=" 1"
D["OMPI_OPENIB_PAD_HDR"]=" 0"
D["HAVE_FCNTL_H"]=" 1"
D["HAVE_SYS_POLL_H"]=" 1"
D["OMPI_HAVE_CONNECTX_XRC"]=" 0"
D["OMPI_HAVE_CONNECTX_XRC_DOMAINS"]=" 0"
D["OMPI_ENABLE_DYNAMIC_SL"]=" 0"
D["OMPI_PORTALS4_MAX_MD_SIZE"]=" 0"
D["OMPI_PORTALS4_MAX_VA_SIZE"]=" 0"
D["OPAL_HAVE_FBTL_POSIX"]=" 1"
D["MCA_io_romio_USER_CONFIGURE_FLAGS"]=" \"\""
D["MCA_io_romio_COMPLETE_CONFIGURE_FLAGS"]=" \" FROM_OMPI=yes CC='gcc-5' CFLAGS='-O3 -DNDEBUG -m64 -fPIC -finline-functions -fno-strict-aliasing -pt"\
"hread' CPPFLAGS='  -I/home/elwardi/foam/foam-extend-4.0/ThirdParty/rpmBuild/BUILD/openmpi-1.8.8/opal/mca/hwloc/hwloc191/hwloc/include -I/home/elward"\
"i/foam/foam-extend-4.0/ThirdParty/rpmBuild/BUILD/openmpi-1.8.8/opal/mca/event/libevent2021/libevent -I/home/elwardi/foam/foam-extend-4.0/ThirdParty/"\
"rpmBuild/BUILD/openmpi-1.8.8/opal/mca/event/libevent2021/libevent/include' FFLAGS='' LDFLAGS='-m64 ' --enable-shared --disable-static  --prefix=/hom"\
"e/elwardi/foam/foam-extend-4.0/ThirdParty/packages/openmpi-1.8.8/platforms/linux64GccDPDebug --disable-aio\""
D["OMPI_PROVIDE_MPI_FILE_INTERFACE"]=" 1"
D["OMPI_PORTALS4_MAX_MD_SIZE"]=" 0"
D["OMPI_PORTALS4_MAX_VA_SIZE"]=" 0"
D["OMPI_MTL_PORTALS4_FLOW_CONTROL"]=" 1"
D["OMPI_PORTALS4_MAX_MD_SIZE"]=" 0"
D["OMPI_PORTALS4_MAX_VA_SIZE"]=" 0"
D["WANT_PMI_SUPPORT"]=" 0"
D["WANT_PMI2_SUPPORT"]=" 0"
D["OMPI_RTE_ORTE"]=" 1"
D["MCA_rte_IMPLEMENTATION_HEADER"]=" \"ompi/mca/rte/orte/rte_orte.h\""
D["MCA_oshmem_memheap_DIRECT_CALL"]=" 0"
D["MCA_oshmem_memheap_DIRECT_CALL_COMPONENT"]=" "
D["MCA_oshmem_memheap_DIRECT_CALL_HEADER"]=" \"\""
D["MCA_oshmem_spml_DIRECT_CALL"]=" 0"
D["MCA_oshmem_spml_DIRECT_CALL_COMPONENT"]=" "
D["MCA_oshmem_spml_DIRECT_CALL_HEADER"]=" \"\""
D["OSHMEM_SSHMEM_MMAP"]=" 1"
D["OMPI_OPENIB_PAD_HDR"]=" 0"
D["HAVE_FCNTL_H"]=" 1"
D["HAVE_SYS_POLL_H"]=" 1"
D["OMPI_HAVE_CONNECTX_XRC"]=" 0"
D["OMPI_HAVE_CONNECTX_XRC_DOMAINS"]=" 0"
D["OMPI_ENABLE_DYNAMIC_SL"]=" 0"
D["MPAGE_HAVE_IBV_EXP_REG_MR_CREATE_FLAGS"]=" 0"
D["OSHMEM_SSHMEM_VERBS"]=" 0"
D["OSHMEM_SSHMEM_SYSV"]=" 1"
D["MCA_ompi_pml_DIRECT_CALL"]=" 0"
D["MCA_ompi_pml_DIRECT_CALL_COMPONENT"]=" "
D["MCA_ompi_pml_DIRECT_CALL_HEADER"]=" \"\""
D["MCA_ompi_mtl_DIRECT_CALL"]=" 0"
D["MCA_ompi_mtl_DIRECT_CALL_COMPONENT"]=" "
D["MCA_ompi_mtl_DIRECT_CALL_HEADER"]=" \"\""
D["OMPI_PROC_ENDPOINT_TAG_MAX"]=" 1"
D["OMPI_MPIEXT_COMPONENTS"]=" \"\""
D["OMPI_ENABLE_CONTRIB_vt"]=" 0"
D["OMPI_ENABLE_CONTRIB_libompitrace"]=" 1"
D["OMPI_MPI_CONTRIBS"]=" \"libompitrace\""
D["OPAL_C_HAVE_VISIBILITY"]=" 1"
D["HAVE_DLFCN_H"]=" 1"
D["LT_OBJDIR"]=" \".libs/\""
D["WRAPPER_EXTRA_CFLAGS"]=" \"-pthread \""
D["WRAPPER_EXTRA_CFLAGS_PREFIX"]=" \"\""
D["WRAPPER_EXTRA_CXXFLAGS"]=" \"-pthread \""
D["WRAPPER_EXTRA_CXXFLAGS_PREFIX"]=" \"\""
D["WRAPPER_EXTRA_FCFLAGS"]=" \" \""
D["WRAPPER_EXTRA_FCFLAGS_PREFIX"]=" \"\""
D["WRAPPER_EXTRA_LDFLAGS"]=" \"    -Wl,-rpath -Wl,@{libdir} -Wl,--enable-new-dtags\""
D["WRAPPER_EXTRA_LIBS"]=" \"-lm -lutil \""
D["WRAPPER_RPATH_SUPPORT"]=" \"runpath\""
D["OPAL_STDC_HEADERS"]=" 1"
D["OPAL_HAVE_SYS_TIME_H"]=" 1"
D["OPAL_HAVE_LONG_LONG"]=" 1"
  for (key in D) D_is_set[key] = 1
  FS = ""
}
/^[\t ]*#[\t ]*(define|undef)[\t ]+[_abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ][_abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789]*([\t (]|$)/ {
  line = $ 0
  split(line, arg, " ")
  if (arg[1] == "#") {
    defundef = arg[2]
    mac1 = arg[3]
  } else {
    defundef = substr(arg[1], 2)
    mac1 = arg[2]
  }
  split(mac1, mac2, "(") #)
  macro = mac2[1]
  prefix = substr(line, 1, index(line, defundef) - 1)
  if (D_is_set[macro]) {
    # Preserve the white space surrounding the "#".
    print prefix "define", macro P[macro] D[macro]
    next
  } else {
    # Replace #undef with comments.  This is necessary, for example,
    # in the case of _POSIX_SOURCE, which is predefined and required
    # on some systems where configure will not decide to define it.
    if (defundef == "undef") {
      print "/*", prefix defundef, macro, "*/"
      next
    }
  }
}
{ print }
_ACAWK
  as_fn_error $? "could not setup config headers machinery" "$LINENO" 5
fi # test -n "$CONFIG_HEADERS"


eval set X "  :F $CONFIG_FILES  :H $CONFIG_HEADERS    :C $CONFIG_COMMANDS"
shift
for ac_tag
do
  case $ac_tag in
  :[FHLC]) ac_mode=$ac_tag; continue;;
  esac
  case $ac_mode$ac_tag in
  :[FHL]*:*);;
  :L* | :C*:*) as_fn_error $? "invalid tag \`$ac_tag'" "$LINENO" 5;;
  :[FH]-) ac_tag=-:-;;
  :[FH]*) ac_tag=$ac_tag:$ac_tag.in;;
  esac
  ac_save_IFS=$IFS
  IFS=:
  set x $ac_tag
  IFS=$ac_save_IFS
  shift
  ac_file=$1
  shift

  case $ac_mode in
  :L) ac_source=$1;;
  :[FH])
    ac_file_inputs=
    for ac_f
    do
      case $ac_f in
      -) ac_f="$ac_tmp/stdin";;
      *) # Look for the file first in the build tree, then in the source tree
	 # (if the path is not absolute).  The absolute path cannot be DOS-style,
	 # because $ac_f cannot contain `:'.
	 test -f "$ac_f" ||
	   case $ac_f in
	   [\\/$]*) false;;
	   *) test -f "$srcdir/$ac_f" && ac_f="$srcdir/$ac_f";;
	   esac ||
	   as_fn_error 1 "cannot find input file: \`$ac_f'" "$LINENO" 5;;
      esac
      case $ac_f in *\'*) ac_f=`$as_echo "$ac_f" | sed "s/'/'\\\\\\\\''/g"`;; esac
      as_fn_append ac_file_inputs " '$ac_f'"
    done

    # Let's still pretend it is `configure' which instantiates (i.e., don't
    # use $as_me), people would be surprised to read:
    #    /* config.h.  Generated by config.status.  */
    configure_input='Generated from '`
	  $as_echo "$*" | sed 's|^[^:]*/||;s|:[^:]*/|, |g'
	`' by configure.'
    if test x"$ac_file" != x-; then
      configure_input="$ac_file.  $configure_input"
      { $as_echo "$as_me:${as_lineno-$LINENO}: creating $ac_file" >&5
$as_echo "$as_me: creating $ac_file" >&6;}
    fi
    # Neutralize special characters interpreted by sed in replacement strings.
    case $configure_input in #(
    *\&* | *\|* | *\\* )
       ac_sed_conf_input=`$as_echo "$configure_input" |
       sed 's/[\\\\&|]/\\\\&/g'`;; #(
    *) ac_sed_conf_input=$configure_input;;
    esac

    case $ac_tag in
    *:-:* | *:-) cat >"$ac_tmp/stdin" \
      || as_fn_error $? "could not create $ac_file" "$LINENO" 5 ;;
    esac
    ;;
  esac

  ac_dir=`$as_dirname -- "$ac_file" ||
$as_expr X"$ac_file" : 'X\(.*[^/]\)//*[^/][^/]*/*$' \| \
	 X"$ac_file" : 'X\(//\)[^/]' \| \
	 X"$ac_file" : 'X\(//\)$' \| \
	 X"$ac_file" : 'X\(/\)' \| . 2>/dev/null ||
$as_echo X"$ac_file" |
    sed '/^X\(.*[^/]\)\/\/*[^/][^/]*\/*$/{
	    s//\1/
	    q
	  }
	  /^X\(\/\/\)[^/].*/{
	    s//\1/
	    q
	  }
	  /^X\(\/\/\)$/{
	    s//\1/
	    q
	  }
	  /^X\(\/\).*/{
	    s//\1/
	    q
	  }
	  s/.*/./; q'`
  as_dir="$ac_dir"; as_fn_mkdir_p
  ac_builddir=.

case "$ac_dir" in
.) ac_dir_suffix= ac_top_builddir_sub=. ac_top_build_prefix= ;;
*)
  ac_dir_suffix=/`$as_echo "$ac_dir" | sed 's|^\.[\\/]||'`
  # A ".." for each directory in $ac_dir_suffix.
  ac_top_builddir_sub=`$as_echo "$ac_dir_suffix" | sed 's|/[^\\/]*|/..|g;s|/||'`
  case $ac_top_builddir_sub in
  "") ac_top_builddir_sub=. ac_top_build_prefix= ;;
  *)  ac_top_build_prefix=$ac_top_builddir_sub/ ;;
  esac ;;
esac
ac_abs_top_builddir=$ac_pwd
ac_abs_builddir=$ac_pwd$ac_dir_suffix
# for backward compatibility:
ac_top_builddir=$ac_top_build_prefix

case $srcdir in
  .)  # We are building in place.
    ac_srcdir=.
    ac_top_srcdir=$ac_top_builddir_sub
    ac_abs_top_srcdir=$ac_pwd ;;
  [\\/]* | ?:[\\/]* )  # Absolute name.
    ac_srcdir=$srcdir$ac_dir_suffix;
    ac_top_srcdir=$srcdir
    ac_abs_top_srcdir=$srcdir ;;
  *) # Relative name.
    ac_srcdir=$ac_top_build_prefix$srcdir$ac_dir_suffix
    ac_top_srcdir=$ac_top_build_prefix$srcdir
    ac_abs_top_srcdir=$ac_pwd/$srcdir ;;
esac
ac_abs_srcdir=$ac_abs_top_srcdir$ac_dir_suffix


  case $ac_mode in
  :F)
  #
  # CONFIG_FILE
  #

  case $INSTALL in
  [\\/$]* | ?:[\\/]* ) ac_INSTALL=$INSTALL ;;
  *) ac_INSTALL=$ac_top_build_prefix$INSTALL ;;
  esac
  ac_MKDIR_P=$MKDIR_P
  case $MKDIR_P in
  [\\/$]* | ?:[\\/]* ) ;;
  */*) ac_MKDIR_P=$ac_top_build_prefix$MKDIR_P ;;
  esac
# If the template does not know about datarootdir, expand it.
# FIXME: This hack should be removed a few years after 2.60.
ac_datarootdir_hack=; ac_datarootdir_seen=
ac_sed_dataroot='
/datarootdir/ {
  p
  q
}
/@datadir@/p
/@docdir@/p
/@infodir@/p
/@localedir@/p
/@mandir@/p'
case `eval "sed -n \"\$ac_sed_dataroot\" $ac_file_inputs"` in
*datarootdir*) ac_datarootdir_seen=yes;;
*@datadir@*|*@docdir@*|*@infodir@*|*@localedir@*|*@mandir@*)
  { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: $ac_file_inputs seems to ignore the --datarootdir setting" >&5
$as_echo "$as_me: WARNING: $ac_file_inputs seems to ignore the --datarootdir setting" >&2;}
  ac_datarootdir_hack='
  s&@datadir@&${datarootdir}&g
  s&@docdir@&${datarootdir}/doc/${PACKAGE_TARNAME}&g
  s&@infodir@&${datarootdir}/info&g
  s&@localedir@&${datarootdir}/locale&g
  s&@mandir@&${datarootdir}/man&g
  s&\${datarootdir}&${prefix}/share&g' ;;
esac
ac_sed_extra="/^[	 ]*VPATH[	 ]*=[	 ]*/{
h
s///
s/^/:/
s/[	 ]*$/:/
s/:\$(srcdir):/:/g
s/:\${srcdir}:/:/g
s/:@srcdir@:/:/g
s/^:*//
s/:*$//
x
s/\(=[	 ]*\).*/\1/
G
s/\n//
s/^[^=]*=[	 ]*$//
}

:t
/@[a-zA-Z_][a-zA-Z_0-9]*@/!b
s|@configure_input@|$ac_sed_conf_input|;t t
s&@top_builddir@&$ac_top_builddir_sub&;t t
s&@top_build_prefix@&$ac_top_build_prefix&;t t
s&@srcdir@&$ac_srcdir&;t t
s&@abs_srcdir@&$ac_abs_srcdir&;t t
s&@top_srcdir@&$ac_top_srcdir&;t t
s&@abs_top_srcdir@&$ac_abs_top_srcdir&;t t
s&@builddir@&$ac_builddir&;t t
s&@abs_builddir@&$ac_abs_builddir&;t t
s&@abs_top_builddir@&$ac_abs_top_builddir&;t t
s&@INSTALL@&$ac_INSTALL&;t t
s&@MKDIR_P@&$ac_MKDIR_P&;t t
$ac_datarootdir_hack
"
eval sed \"\$ac_sed_extra\" "$ac_file_inputs" | $AWK -f "$ac_tmp/subs.awk" \
  >$ac_tmp/out || as_fn_error $? "could not create $ac_file" "$LINENO" 5

test -z "$ac_datarootdir_hack$ac_datarootdir_seen" &&
  { ac_out=`sed -n '/\${datarootdir}/p' "$ac_tmp/out"`; test -n "$ac_out"; } &&
  { ac_out=`sed -n '/^[	 ]*datarootdir[	 ]*:*=/p' \
      "$ac_tmp/out"`; test -z "$ac_out"; } &&
  { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: $ac_file contains a reference to the variable \`datarootdir'
which seems to be undefined.  Please make sure it is defined" >&5
$as_echo "$as_me: WARNING: $ac_file contains a reference to the variable \`datarootdir'
which seems to be undefined.  Please make sure it is defined" >&2;}

  rm -f "$ac_tmp/stdin"
  case $ac_file in
  -) cat "$ac_tmp/out" && rm -f "$ac_tmp/out";;
  *) rm -f "$ac_file" && mv "$ac_tmp/out" "$ac_file";;
  esac \
  || as_fn_error $? "could not create $ac_file" "$LINENO" 5
 ;;
  :H)
  #
  # CONFIG_HEADER
  #
  if test x"$ac_file" != x-; then
    {
      $as_echo "/* $configure_input  */" \
      && eval '$AWK -f "$ac_tmp/defines.awk"' "$ac_file_inputs"
    } >"$ac_tmp/config.h" \
      || as_fn_error $? "could not create $ac_file" "$LINENO" 5
    if diff "$ac_file" "$ac_tmp/config.h" >/dev/null 2>&1; then
      { $as_echo "$as_me:${as_lineno-$LINENO}: $ac_file is unchanged" >&5
$as_echo "$as_me: $ac_file is unchanged" >&6;}
    else
      rm -f "$ac_file"
      mv "$ac_tmp/config.h" "$ac_file" \
	|| as_fn_error $? "could not create $ac_file" "$LINENO" 5
    fi
  else
    $as_echo "/* $configure_input  */" \
      && eval '$AWK -f "$ac_tmp/defines.awk"' "$ac_file_inputs" \
      || as_fn_error $? "could not create -" "$LINENO" 5
  fi
# Compute "$ac_file"'s index in $config_headers.
_am_arg="$ac_file"
_am_stamp_count=1
for _am_header in $config_headers :; do
  case $_am_header in
    $_am_arg | $_am_arg:* )
      break ;;
    * )
      _am_stamp_count=`expr $_am_stamp_count + 1` ;;
  esac
done
echo "timestamp for $_am_arg" >`$as_dirname -- "$_am_arg" ||
$as_expr X"$_am_arg" : 'X\(.*[^/]\)//*[^/][^/]*/*$' \| \
	 X"$_am_arg" : 'X\(//\)[^/]' \| \
	 X"$_am_arg" : 'X\(//\)$' \| \
	 X"$_am_arg" : 'X\(/\)' \| . 2>/dev/null ||
$as_echo X"$_am_arg" |
    sed '/^X\(.*[^/]\)\/\/*[^/][^/]*\/*$/{
	    s//\1/
	    q
	  }
	  /^X\(\/\/\)[^/].*/{
	    s//\1/
	    q
	  }
	  /^X\(\/\/\)$/{
	    s//\1/
	    q
	  }
	  /^X\(\/\).*/{
	    s//\1/
	    q
	  }
	  s/.*/./; q'`/stamp-h$_am_stamp_count
 ;;

  :C)  { $as_echo "$as_me:${as_lineno-$LINENO}: executing $ac_file commands" >&5
$as_echo "$as_me: executing $ac_file commands" >&6;}
 ;;
  esac


  case $ac_file$ac_mode in
    "depfiles":C) test x"$AMDEP_TRUE" != x"" || {
  # Autoconf 2.62 quotes --file arguments for eval, but not when files
  # are listed without --file.  Let's play safe and only enable the eval
  # if we detect the quoting.
  case $CONFIG_FILES in
  *\'*) eval set x "$CONFIG_FILES" ;;
  *)   set x $CONFIG_FILES ;;
  esac
  shift
  for mf
  do
    # Strip MF so we end up with the name of the file.
    mf=`echo "$mf" | sed -e 's/:.*$//'`
    # Check whether this is an Automake generated Makefile or not.
    # We used to match only the files named 'Makefile.in', but
    # some people rename them; so instead we look at the file content.
    # Grep'ing the first line is not enough: some people post-process
    # each Makefile.in and add a new line on top of each file to say so.
    # Grep'ing the whole file is not good either: AIX grep has a line
    # limit of 2048, but all sed's we know have understand at least 4000.
    if sed -n 's,^#.*generated by automake.*,X,p' "$mf" | grep X >/dev/null 2>&1; then
      dirpart=`$as_dirname -- "$mf" ||
$as_expr X"$mf" : 'X\(.*[^/]\)//*[^/][^/]*/*$' \| \
	 X"$mf" : 'X\(//\)[^/]' \| \
	 X"$mf" : 'X\(//\)$' \| \
	 X"$mf" : 'X\(/\)' \| . 2>/dev/null ||
$as_echo X"$mf" |
    sed '/^X\(.*[^/]\)\/\/*[^/][^/]*\/*$/{
	    s//\1/
	    q
	  }
	  /^X\(\/\/\)[^/].*/{
	    s//\1/
	    q
	  }
	  /^X\(\/\/\)$/{
	    s//\1/
	    q
	  }
	  /^X\(\/\).*/{
	    s//\1/
	    q
	  }
	  s/.*/./; q'`
    else
      continue
    fi
    # Extract the definition of DEPDIR, am__include, and am__quote
    # from the Makefile without running 'make'.
    DEPDIR=`sed -n 's/^DEPDIR = //p' < "$mf"`
    test -z "$DEPDIR" && continue
    am__include=`sed -n 's/^am__include = //p' < "$mf"`
    test -z "am__include" && continue
    am__quote=`sed -n 's/^am__quote = //p' < "$mf"`
    # Find all dependency output files, they are included files with
    # $(DEPDIR) in their names.  We invoke sed twice because it is the
    # simplest approach to changing $(DEPDIR) to its actual value in the
    # expansion.
    for file in `sed -n "
      s/^$am__include $am__quote\(.*(DEPDIR).*\)$am__quote"'$/\1/p' <"$mf" | \
	 sed -e 's/\$(DEPDIR)/'"$DEPDIR"'/g'`; do
      # Make sure the directory exists.
      test -f "$dirpart/$file" && continue
      fdir=`$as_dirname -- "$file" ||
$as_expr X"$file" : 'X\(.*[^/]\)//*[^/][^/]*/*$' \| \
	 X"$file" : 'X\(//\)[^/]' \| \
	 X"$file" : 'X\(//\)$' \| \
	 X"$file" : 'X\(/\)' \| . 2>/dev/null ||
$as_echo X"$file" |
    sed '/^X\(.*[^/]\)\/\/*[^/][^/]*\/*$/{
	    s//\1/
	    q
	  }
	  /^X\(\/\/\)[^/].*/{
	    s//\1/
	    q
	  }
	  /^X\(\/\/\)$/{
	    s//\1/
	    q
	  }
	  /^X\(\/\).*/{
	    s//\1/
	    q
	  }
	  s/.*/./; q'`
      as_dir=$dirpart/$fdir; as_fn_mkdir_p
      # echo "creating $dirpart/$file"
      echo '# dummy' > "$dirpart/$file"
    done
  done
}
 ;;
    "opal/mca/event/libevent2021/libevent/include/event2/event-config.h":C) libevent_basedir="opal/mca/event/libevent2021"
                               libevent_file="$libevent_basedir/libevent/include/event2/event-config.h"
                               rm -f "$libevent_file.new"
                               cat > "$libevent_file.new" <<EOF
/* event2/event-config.h
 *
 * This file was generated by autoconf when libevent was built, and
 * post- processed by Open MPI's component configure.m4 (so that
 * Libevent wouldn't build it during "make all") so that its macros
 * would have a uniform prefix.
 *
 * DO NOT EDIT THIS FILE.
 *
 * Do not rely on macros in this file existing in later versions
 */
#ifndef _EVENT2_EVENT_CONFIG_H_
#define _EVENT2_EVENT_CONFIG_H_
EOF

                               sed -e 's/#define /#define _EVENT_/' \
                                   -e 's/#undef /#undef _EVENT_/' \
                                   -e 's/#ifndef /#ifndef _EVENT_/' < "$libevent_basedir/libevent/config.h" >> "$libevent_file.new"
                               echo "#endif" >> "$libevent_file.new"

                               # Only make a new .h libevent_file if the
                               # contents haven't changed
                               diff -q $libevent_file "$libevent_file.new" > /dev/null 2> /dev/null
                               if test "$?" = "0"; then
                                   echo $libevent_file is unchanged
                               else
                                   cp "$libevent_file.new" $libevent_file
                               fi
                               rm -f "$libevent_file.new" ;;
    "libtool":C)

    # See if we are running on zsh, and set the options which allow our
    # commands through without removal of \ escapes.
    if test -n "${ZSH_VERSION+set}" ; then
      setopt NO_GLOB_SUBST
    fi

    cfgfile="${ofile}T"
    trap "$RM \"$cfgfile\"; exit 1" 1 2 15
    $RM "$cfgfile"

    cat <<_LT_EOF >> "$cfgfile"
#! $SHELL

# `$ECHO "$ofile" | sed 's%^.*/%%'` - Provide generalized library-building support services.
# Generated automatically by $as_me ($PACKAGE$TIMESTAMP) $VERSION
# Libtool was configured on host `(hostname || uname -n) 2>/dev/null | sed 1q`:
# NOTE: Changes made to this file will be lost: look at ltmain.sh.
#
#   Copyright (C) 1996, 1997, 1998, 1999, 2000, 2001, 2003, 2004, 2005,
#                 2006, 2007, 2008, 2009, 2010, 2011 Free Software
#                 Foundation, Inc.
#   Written by Gordon Matzigkeit, 1996
#
#   This file is part of GNU Libtool.
#
# GNU Libtool is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License as
# published by the Free Software Foundation; either version 2 of
# the License, or (at your option) any later version.
#
# As a special exception to the GNU General Public License,
# if you distribute this file as part of a program or library that
# is built using GNU Libtool, you may include this file under the
# same distribution terms that you use for the rest of that program.
#
# GNU Libtool is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with GNU Libtool; see the file COPYING.  If not, a copy
# can be downloaded from http://www.gnu.org/licenses/gpl.html, or
# obtained by writing to the Free Software Foundation, Inc.,
# 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.


# The names of the tagged configurations supported by this script.
available_tags="CXX FC "

# ### BEGIN LIBTOOL CONFIG

# Whether or not to build shared libraries.
build_libtool_libs=$enable_shared

# Whether or not to build static libraries.
build_old_libs=$enable_static

# A BSD- or MS-compatible name lister.
NM=$lt_NM

# Which release of libtool.m4 was used?
macro_version=$macro_version
macro_revision=$macro_revision

# Assembler program.
AS=$lt_AS

# DLL creation program.
DLLTOOL=$lt_DLLTOOL

# Object dumper program.
OBJDUMP=$lt_OBJDUMP

# What type of objects to build.
pic_mode=$pic_mode

# Whether or not to optimize for fast installation.
fast_install=$enable_fast_install

# Shell to use when invoking shell scripts.
SHELL=$lt_SHELL

# An echo program that protects backslashes.
ECHO=$lt_ECHO

# The PATH separator for the build system.
PATH_SEPARATOR=$lt_PATH_SEPARATOR

# The host system.
host_alias=$host_alias
host=$host
host_os=$host_os

# The build system.
build_alias=$build_alias
build=$build
build_os=$build_os

# A sed program that does not truncate output.
SED=$lt_SED

# Sed that helps us avoid accidentally triggering echo(1) options like -n.
Xsed="\$SED -e 1s/^X//"

# A grep program that handles long lines.
GREP=$lt_GREP

# An ERE matcher.
EGREP=$lt_EGREP

# A literal string matcher.
FGREP=$lt_FGREP

# Whether we need soft or hard links.
LN_S=$lt_LN_S

# What is the maximum length of a command?
max_cmd_len=$max_cmd_len

# Object file suffix (normally "o").
objext=$ac_objext

# Executable file suffix (normally "").
exeext=$exeext

# whether the shell understands "unset".
lt_unset=$lt_unset

# turn spaces into newlines.
SP2NL=$lt_lt_SP2NL

# turn newlines into spaces.
NL2SP=$lt_lt_NL2SP

# convert \$build file names to \$host format.
to_host_file_cmd=$lt_cv_to_host_file_cmd

# convert \$build files to toolchain format.
to_tool_file_cmd=$lt_cv_to_tool_file_cmd

# Method to check whether dependent libraries are shared objects.
deplibs_check_method=$lt_deplibs_check_method

# Command to use when deplibs_check_method = "file_magic".
file_magic_cmd=$lt_file_magic_cmd

# How to find potential files when deplibs_check_method = "file_magic".
file_magic_glob=$lt_file_magic_glob

# Find potential files using nocaseglob when deplibs_check_method = "file_magic".
want_nocaseglob=$lt_want_nocaseglob

# Command to associate shared and link libraries.
sharedlib_from_linklib_cmd=$lt_sharedlib_from_linklib_cmd

# The archiver.
AR=$lt_AR

# Flags to create an archive.
AR_FLAGS=$lt_AR_FLAGS

# How to feed a file listing to the archiver.
archiver_list_spec=$lt_archiver_list_spec

# A symbol stripping program.
STRIP=$lt_STRIP

# Commands used to install an old-style archive.
RANLIB=$lt_RANLIB
old_postinstall_cmds=$lt_old_postinstall_cmds
old_postuninstall_cmds=$lt_old_postuninstall_cmds

# Whether to use a lock for old archive extraction.
lock_old_archive_extraction=$lock_old_archive_extraction

# A C compiler.
LTCC=$lt_CC

# LTCC compiler flags.
LTCFLAGS=$lt_CFLAGS

# Take the output of nm and produce a listing of raw symbols and C names.
global_symbol_pipe=$lt_lt_cv_sys_global_symbol_pipe

# Transform the output of nm in a proper C declaration.
global_symbol_to_cdecl=$lt_lt_cv_sys_global_symbol_to_cdecl

# Transform the output of nm in a C name address pair.
global_symbol_to_c_name_address=$lt_lt_cv_sys_global_symbol_to_c_name_address

# Transform the output of nm in a C name address pair when lib prefix is needed.
global_symbol_to_c_name_address_lib_prefix=$lt_lt_cv_sys_global_symbol_to_c_name_address_lib_prefix

# Specify filename containing input files for \$NM.
nm_file_list_spec=$lt_nm_file_list_spec

# The root where to search for dependent libraries,and in which our libraries should be installed.
lt_sysroot=$lt_sysroot

# The name of the directory that contains temporary libtool files.
objdir=$objdir

# Used to examine libraries when file_magic_cmd begins with "file".
MAGIC_CMD=$MAGIC_CMD

# Must we lock files when doing compilation?
need_locks=$lt_need_locks

# Manifest tool.
MANIFEST_TOOL=$lt_MANIFEST_TOOL

# Tool to manipulate archived DWARF debug symbol files on Mac OS X.
DSYMUTIL=$lt_DSYMUTIL

# Tool to change global to local symbols on Mac OS X.
NMEDIT=$lt_NMEDIT

# Tool to manipulate fat objects and archives on Mac OS X.
LIPO=$lt_LIPO

# ldd/readelf like tool for Mach-O binaries on Mac OS X.
OTOOL=$lt_OTOOL

# ldd/readelf like tool for 64 bit Mach-O binaries on Mac OS X 10.4.
OTOOL64=$lt_OTOOL64

# Old archive suffix (normally "a").
libext=$libext

# Shared library suffix (normally ".so").
shrext_cmds=$lt_shrext_cmds

# The commands to extract the exported symbol list from a shared archive.
extract_expsyms_cmds=$lt_extract_expsyms_cmds

# Variables whose values should be saved in libtool wrapper scripts and
# restored at link time.
variables_saved_for_relink=$lt_variables_saved_for_relink

# Do we need the "lib" prefix for modules?
need_lib_prefix=$need_lib_prefix

# Do we need a version for libraries?
need_version=$need_version

# Library versioning type.
version_type=$version_type

# Shared library runtime path variable.
runpath_var=$runpath_var

# Shared library path variable.
shlibpath_var=$shlibpath_var

# Is shlibpath searched before the hard-coded library search path?
shlibpath_overrides_runpath=$shlibpath_overrides_runpath

# Format of library name prefix.
libname_spec=$lt_libname_spec

# List of archive names.  First name is the real one, the rest are links.
# The last name is the one that the linker finds with -lNAME
library_names_spec=$lt_library_names_spec

# The coded name of the library, if different from the real name.
soname_spec=$lt_soname_spec

# Permission mode override for installation of shared libraries.
install_override_mode=$lt_install_override_mode

# Command to use after installation of a shared archive.
postinstall_cmds=$lt_postinstall_cmds

# Command to use after uninstallation of a shared archive.
postuninstall_cmds=$lt_postuninstall_cmds

# Commands used to finish a libtool library installation in a directory.
finish_cmds=$lt_finish_cmds

# As "finish_cmds", except a single script fragment to be evaled but
# not shown.
finish_eval=$lt_finish_eval

# Whether we should hardcode library paths into libraries.
hardcode_into_libs=$hardcode_into_libs

# Compile-time system search path for libraries.
sys_lib_search_path_spec=$lt_sys_lib_search_path_spec

# Run-time system search path for libraries.
sys_lib_dlsearch_path_spec=$lt_sys_lib_dlsearch_path_spec

# Whether dlopen is supported.
dlopen_support=$enable_dlopen

# Whether dlopen of programs is supported.
dlopen_self=$enable_dlopen_self

# Whether dlopen of statically linked programs is supported.
dlopen_self_static=$enable_dlopen_self_static

# Commands to strip libraries.
old_striplib=$lt_old_striplib
striplib=$lt_striplib


# The linker used to build libraries.
LD=$lt_LD

# How to create reloadable object files.
reload_flag=$lt_reload_flag
reload_cmds=$lt_reload_cmds

# Commands used to build an old-style archive.
old_archive_cmds=$lt_old_archive_cmds

# A language specific compiler.
CC=$lt_compiler

# Is the compiler the GNU compiler?
with_gcc=$GCC

# Compiler flag to turn off builtin functions.
no_builtin_flag=$lt_lt_prog_compiler_no_builtin_flag

# Additional compiler flags for building library objects.
pic_flag=$lt_lt_prog_compiler_pic

# How to pass a linker flag through the compiler.
wl=$lt_lt_prog_compiler_wl

# Compiler flag to prevent dynamic linking.
link_static_flag=$lt_lt_prog_compiler_static

# Does compiler simultaneously support -c and -o options?
compiler_c_o=$lt_lt_cv_prog_compiler_c_o

# Whether or not to add -lc for building shared libraries.
build_libtool_need_lc=$archive_cmds_need_lc

# Whether or not to disallow shared libs when runtime libs are static.
allow_libtool_libs_with_static_runtimes=$enable_shared_with_static_runtimes

# Compiler flag to allow reflexive dlopens.
export_dynamic_flag_spec=$lt_export_dynamic_flag_spec

# Compiler flag to generate shared objects directly from archives.
whole_archive_flag_spec=$lt_whole_archive_flag_spec

# Whether the compiler copes with passing no objects directly.
compiler_needs_object=$lt_compiler_needs_object

# Create an old-style archive from a shared archive.
old_archive_from_new_cmds=$lt_old_archive_from_new_cmds

# Create a temporary old-style archive to link instead of a shared archive.
old_archive_from_expsyms_cmds=$lt_old_archive_from_expsyms_cmds

# Commands used to build a shared archive.
archive_cmds=$lt_archive_cmds
archive_expsym_cmds=$lt_archive_expsym_cmds

# Commands used to build a loadable module if different from building
# a shared archive.
module_cmds=$lt_module_cmds
module_expsym_cmds=$lt_module_expsym_cmds

# Whether we are building with GNU ld or not.
with_gnu_ld=$lt_with_gnu_ld

# Flag that allows shared libraries with undefined symbols to be built.
allow_undefined_flag=$lt_allow_undefined_flag

# Flag that enforces no undefined symbols.
no_undefined_flag=$lt_no_undefined_flag

# Flag to hardcode \$libdir into a binary during linking.
# This must work even if \$libdir does not exist
hardcode_libdir_flag_spec=$lt_hardcode_libdir_flag_spec

# Whether we need a single "-rpath" flag with a separated argument.
hardcode_libdir_separator=$lt_hardcode_libdir_separator

# Set to "yes" if using DIR/libNAME\${shared_ext} during linking hardcodes
# DIR into the resulting binary.
hardcode_direct=$hardcode_direct

# Set to "yes" if using DIR/libNAME\${shared_ext} during linking hardcodes
# DIR into the resulting binary and the resulting library dependency is
# "absolute",i.e impossible to change by setting \${shlibpath_var} if the
# library is relocated.
hardcode_direct_absolute=$hardcode_direct_absolute

# Set to "yes" if using the -LDIR flag during linking hardcodes DIR
# into the resulting binary.
hardcode_minus_L=$hardcode_minus_L

# Set to "yes" if using SHLIBPATH_VAR=DIR during linking hardcodes DIR
# into the resulting binary.
hardcode_shlibpath_var=$hardcode_shlibpath_var

# Set to "yes" if building a shared library automatically hardcodes DIR
# into the library and all subsequent libraries and executables linked
# against it.
hardcode_automatic=$hardcode_automatic

# Set to yes if linker adds runtime paths of dependent libraries
# to runtime path list.
inherit_rpath=$inherit_rpath

# Whether libtool must link a program against all its dependency libraries.
link_all_deplibs=$link_all_deplibs

# Set to "yes" if exported symbols are required.
always_export_symbols=$always_export_symbols

# The commands to list exported symbols.
export_symbols_cmds=$lt_export_symbols_cmds

# Symbols that should not be listed in the preloaded symbols.
exclude_expsyms=$lt_exclude_expsyms

# Symbols that must always be exported.
include_expsyms=$lt_include_expsyms

# Commands necessary for linking programs (against libraries) with templates.
prelink_cmds=$lt_prelink_cmds

# Commands necessary for finishing linking programs.
postlink_cmds=$lt_postlink_cmds

# Specify filename containing input files.
file_list_spec=$lt_file_list_spec

# How to hardcode a shared library path into an executable.
hardcode_action=$hardcode_action

# The directories searched by this compiler when creating a shared library.
compiler_lib_search_dirs=$lt_compiler_lib_search_dirs

# Dependencies to place before and after the objects being linked to
# create a shared library.
predep_objects=$lt_predep_objects
postdep_objects=$lt_postdep_objects
predeps=$lt_predeps
postdeps=$lt_postdeps

# The library search path used internally by the compiler when linking
# a shared library.
compiler_lib_search_path=$lt_compiler_lib_search_path

# ### END LIBTOOL CONFIG

_LT_EOF

  case $host_os in
  aix3*)
    cat <<\_LT_EOF >> "$cfgfile"
# AIX sometimes has problems with the GCC collect2 program.  For some
# reason, if we set the COLLECT_NAMES environment variable, the problems
# vanish in a puff of smoke.
if test "X${COLLECT_NAMES+set}" != Xset; then
  COLLECT_NAMES=
  export COLLECT_NAMES
fi
_LT_EOF
    ;;
  esac


ltmain="$ac_aux_dir/ltmain.sh"


  # We use sed instead of cat because bash on DJGPP gets confused if
  # if finds mixed CR/LF and LF-only lines.  Since sed operates in
  # text mode, it properly converts lines to CR/LF.  This bash problem
  # is reportedly fixed, but why not run on old versions too?
  sed '$q' "$ltmain" >> "$cfgfile" \
     || (rm -f "$cfgfile"; exit 1)

  if test x"$xsi_shell" = xyes; then
  sed -e '/^func_dirname ()$/,/^} # func_dirname /c\
func_dirname ()\
{\
\    case ${1} in\
\      */*) func_dirname_result="${1%/*}${2}" ;;\
\      *  ) func_dirname_result="${3}" ;;\
\    esac\
} # Extended-shell func_dirname implementation' "$cfgfile" > $cfgfile.tmp \
  && mv -f "$cfgfile.tmp" "$cfgfile" \
    || (rm -f "$cfgfile" && cp "$cfgfile.tmp" "$cfgfile" && rm -f "$cfgfile.tmp")
test 0 -eq $? || _lt_function_replace_fail=:


  sed -e '/^func_basename ()$/,/^} # func_basename /c\
func_basename ()\
{\
\    func_basename_result="${1##*/}"\
} # Extended-shell func_basename implementation' "$cfgfile" > $cfgfile.tmp \
  && mv -f "$cfgfile.tmp" "$cfgfile" \
    || (rm -f "$cfgfile" && cp "$cfgfile.tmp" "$cfgfile" && rm -f "$cfgfile.tmp")
test 0 -eq $? || _lt_function_replace_fail=:


  sed -e '/^func_dirname_and_basename ()$/,/^} # func_dirname_and_basename /c\
func_dirname_and_basename ()\
{\
\    case ${1} in\
\      */*) func_dirname_result="${1%/*}${2}" ;;\
\      *  ) func_dirname_result="${3}" ;;\
\    esac\
\    func_basename_result="${1##*/}"\
} # Extended-shell func_dirname_and_basename implementation' "$cfgfile" > $cfgfile.tmp \
  && mv -f "$cfgfile.tmp" "$cfgfile" \
    || (rm -f "$cfgfile" && cp "$cfgfile.tmp" "$cfgfile" && rm -f "$cfgfile.tmp")
test 0 -eq $? || _lt_function_replace_fail=:


  sed -e '/^func_stripname ()$/,/^} # func_stripname /c\
func_stripname ()\
{\
\    # pdksh 5.2.14 does not do ${X%$Y} correctly if both X and Y are\
\    # positional parameters, so assign one to ordinary parameter first.\
\    func_stripname_result=${3}\
\    func_stripname_result=${func_stripname_result#"${1}"}\
\    func_stripname_result=${func_stripname_result%"${2}"}\
} # Extended-shell func_stripname implementation' "$cfgfile" > $cfgfile.tmp \
  && mv -f "$cfgfile.tmp" "$cfgfile" \
    || (rm -f "$cfgfile" && cp "$cfgfile.tmp" "$cfgfile" && rm -f "$cfgfile.tmp")
test 0 -eq $? || _lt_function_replace_fail=:


  sed -e '/^func_split_long_opt ()$/,/^} # func_split_long_opt /c\
func_split_long_opt ()\
{\
\    func_split_long_opt_name=${1%%=*}\
\    func_split_long_opt_arg=${1#*=}\
} # Extended-shell func_split_long_opt implementation' "$cfgfile" > $cfgfile.tmp \
  && mv -f "$cfgfile.tmp" "$cfgfile" \
    || (rm -f "$cfgfile" && cp "$cfgfile.tmp" "$cfgfile" && rm -f "$cfgfile.tmp")
test 0 -eq $? || _lt_function_replace_fail=:


  sed -e '/^func_split_short_opt ()$/,/^} # func_split_short_opt /c\
func_split_short_opt ()\
{\
\    func_split_short_opt_arg=${1#??}\
\    func_split_short_opt_name=${1%"$func_split_short_opt_arg"}\
} # Extended-shell func_split_short_opt implementation' "$cfgfile" > $cfgfile.tmp \
  && mv -f "$cfgfile.tmp" "$cfgfile" \
    || (rm -f "$cfgfile" && cp "$cfgfile.tmp" "$cfgfile" && rm -f "$cfgfile.tmp")
test 0 -eq $? || _lt_function_replace_fail=:


  sed -e '/^func_lo2o ()$/,/^} # func_lo2o /c\
func_lo2o ()\
{\
\    case ${1} in\
\      *.lo) func_lo2o_result=${1%.lo}.${objext} ;;\
\      *)    func_lo2o_result=${1} ;;\
\    esac\
} # Extended-shell func_lo2o implementation' "$cfgfile" > $cfgfile.tmp \
  && mv -f "$cfgfile.tmp" "$cfgfile" \
    || (rm -f "$cfgfile" && cp "$cfgfile.tmp" "$cfgfile" && rm -f "$cfgfile.tmp")
test 0 -eq $? || _lt_function_replace_fail=:


  sed -e '/^func_xform ()$/,/^} # func_xform /c\
func_xform ()\
{\
    func_xform_result=${1%.*}.lo\
} # Extended-shell func_xform implementation' "$cfgfile" > $cfgfile.tmp \
  && mv -f "$cfgfile.tmp" "$cfgfile" \
    || (rm -f "$cfgfile" && cp "$cfgfile.tmp" "$cfgfile" && rm -f "$cfgfile.tmp")
test 0 -eq $? || _lt_function_replace_fail=:


  sed -e '/^func_arith ()$/,/^} # func_arith /c\
func_arith ()\
{\
    func_arith_result=$(( $* ))\
} # Extended-shell func_arith implementation' "$cfgfile" > $cfgfile.tmp \
  && mv -f "$cfgfile.tmp" "$cfgfile" \
    || (rm -f "$cfgfile" && cp "$cfgfile.tmp" "$cfgfile" && rm -f "$cfgfile.tmp")
test 0 -eq $? || _lt_function_replace_fail=:


  sed -e '/^func_len ()$/,/^} # func_len /c\
func_len ()\
{\
    func_len_result=${#1}\
} # Extended-shell func_len implementation' "$cfgfile" > $cfgfile.tmp \
  && mv -f "$cfgfile.tmp" "$cfgfile" \
    || (rm -f "$cfgfile" && cp "$cfgfile.tmp" "$cfgfile" && rm -f "$cfgfile.tmp")
test 0 -eq $? || _lt_function_replace_fail=:

fi

if test x"$lt_shell_append" = xyes; then
  sed -e '/^func_append ()$/,/^} # func_append /c\
func_append ()\
{\
    eval "${1}+=\\${2}"\
} # Extended-shell func_append implementation' "$cfgfile" > $cfgfile.tmp \
  && mv -f "$cfgfile.tmp" "$cfgfile" \
    || (rm -f "$cfgfile" && cp "$cfgfile.tmp" "$cfgfile" && rm -f "$cfgfile.tmp")
test 0 -eq $? || _lt_function_replace_fail=:


  sed -e '/^func_append_quoted ()$/,/^} # func_append_quoted /c\
func_append_quoted ()\
{\
\    func_quote_for_eval "${2}"\
\    eval "${1}+=\\\\ \\$func_quote_for_eval_result"\
} # Extended-shell func_append_quoted implementation' "$cfgfile" > $cfgfile.tmp \
  && mv -f "$cfgfile.tmp" "$cfgfile" \
    || (rm -f "$cfgfile" && cp "$cfgfile.tmp" "$cfgfile" && rm -f "$cfgfile.tmp")
test 0 -eq $? || _lt_function_replace_fail=:


  # Save a `func_append' function call where possible by direct use of '+='
  sed -e 's%func_append \([a-zA-Z_]\{1,\}\) "%\1+="%g' $cfgfile > $cfgfile.tmp \
    && mv -f "$cfgfile.tmp" "$cfgfile" \
      || (rm -f "$cfgfile" && cp "$cfgfile.tmp" "$cfgfile" && rm -f "$cfgfile.tmp")
  test 0 -eq $? || _lt_function_replace_fail=:
else
  # Save a `func_append' function call even when '+=' is not available
  sed -e 's%func_append \([a-zA-Z_]\{1,\}\) "%\1="$\1%g' $cfgfile > $cfgfile.tmp \
    && mv -f "$cfgfile.tmp" "$cfgfile" \
      || (rm -f "$cfgfile" && cp "$cfgfile.tmp" "$cfgfile" && rm -f "$cfgfile.tmp")
  test 0 -eq $? || _lt_function_replace_fail=:
fi

if test x"$_lt_function_replace_fail" = x":"; then
  { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: Unable to substitute extended shell functions in $ofile" >&5
$as_echo "$as_me: WARNING: Unable to substitute extended shell functions in $ofile" >&2;}
fi


   mv -f "$cfgfile" "$ofile" ||
    (rm -f "$ofile" && cp "$cfgfile" "$ofile" && rm -f "$cfgfile")
  chmod +x "$ofile"


    cat <<_LT_EOF >> "$ofile"

# ### BEGIN LIBTOOL TAG CONFIG: CXX

# The linker used to build libraries.
LD=$lt_LD_CXX

# How to create reloadable object files.
reload_flag=$lt_reload_flag_CXX
reload_cmds=$lt_reload_cmds_CXX

# Commands used to build an old-style archive.
old_archive_cmds=$lt_old_archive_cmds_CXX

# A language specific compiler.
CC=$lt_compiler_CXX

# Is the compiler the GNU compiler?
with_gcc=$GCC_CXX

# Compiler flag to turn off builtin functions.
no_builtin_flag=$lt_lt_prog_compiler_no_builtin_flag_CXX

# Additional compiler flags for building library objects.
pic_flag=$lt_lt_prog_compiler_pic_CXX

# How to pass a linker flag through the compiler.
wl=$lt_lt_prog_compiler_wl_CXX

# Compiler flag to prevent dynamic linking.
link_static_flag=$lt_lt_prog_compiler_static_CXX

# Does compiler simultaneously support -c and -o options?
compiler_c_o=$lt_lt_cv_prog_compiler_c_o_CXX

# Whether or not to add -lc for building shared libraries.
build_libtool_need_lc=$archive_cmds_need_lc_CXX

# Whether or not to disallow shared libs when runtime libs are static.
allow_libtool_libs_with_static_runtimes=$enable_shared_with_static_runtimes_CXX

# Compiler flag to allow reflexive dlopens.
export_dynamic_flag_spec=$lt_export_dynamic_flag_spec_CXX

# Compiler flag to generate shared objects directly from archives.
whole_archive_flag_spec=$lt_whole_archive_flag_spec_CXX

# Whether the compiler copes with passing no objects directly.
compiler_needs_object=$lt_compiler_needs_object_CXX

# Create an old-style archive from a shared archive.
old_archive_from_new_cmds=$lt_old_archive_from_new_cmds_CXX

# Create a temporary old-style archive to link instead of a shared archive.
old_archive_from_expsyms_cmds=$lt_old_archive_from_expsyms_cmds_CXX

# Commands used to build a shared archive.
archive_cmds=$lt_archive_cmds_CXX
archive_expsym_cmds=$lt_archive_expsym_cmds_CXX

# Commands used to build a loadable module if different from building
# a shared archive.
module_cmds=$lt_module_cmds_CXX
module_expsym_cmds=$lt_module_expsym_cmds_CXX

# Whether we are building with GNU ld or not.
with_gnu_ld=$lt_with_gnu_ld_CXX

# Flag that allows shared libraries with undefined symbols to be built.
allow_undefined_flag=$lt_allow_undefined_flag_CXX

# Flag that enforces no undefined symbols.
no_undefined_flag=$lt_no_undefined_flag_CXX

# Flag to hardcode \$libdir into a binary during linking.
# This must work even if \$libdir does not exist
hardcode_libdir_flag_spec=$lt_hardcode_libdir_flag_spec_CXX

# Whether we need a single "-rpath" flag with a separated argument.
hardcode_libdir_separator=$lt_hardcode_libdir_separator_CXX

# Set to "yes" if using DIR/libNAME\${shared_ext} during linking hardcodes
# DIR into the resulting binary.
hardcode_direct=$hardcode_direct_CXX

# Set to "yes" if using DIR/libNAME\${shared_ext} during linking hardcodes
# DIR into the resulting binary and the resulting library dependency is
# "absolute",i.e impossible to change by setting \${shlibpath_var} if the
# library is relocated.
hardcode_direct_absolute=$hardcode_direct_absolute_CXX

# Set to "yes" if using the -LDIR flag during linking hardcodes DIR
# into the resulting binary.
hardcode_minus_L=$hardcode_minus_L_CXX

# Set to "yes" if using SHLIBPATH_VAR=DIR during linking hardcodes DIR
# into the resulting binary.
hardcode_shlibpath_var=$hardcode_shlibpath_var_CXX

# Set to "yes" if building a shared library automatically hardcodes DIR
# into the library and all subsequent libraries and executables linked
# against it.
hardcode_automatic=$hardcode_automatic_CXX

# Set to yes if linker adds runtime paths of dependent libraries
# to runtime path list.
inherit_rpath=$inherit_rpath_CXX

# Whether libtool must link a program against all its dependency libraries.
link_all_deplibs=$link_all_deplibs_CXX

# Set to "yes" if exported symbols are required.
always_export_symbols=$always_export_symbols_CXX

# The commands to list exported symbols.
export_symbols_cmds=$lt_export_symbols_cmds_CXX

# Symbols that should not be listed in the preloaded symbols.
exclude_expsyms=$lt_exclude_expsyms_CXX

# Symbols that must always be exported.
include_expsyms=$lt_include_expsyms_CXX

# Commands necessary for linking programs (against libraries) with templates.
prelink_cmds=$lt_prelink_cmds_CXX

# Commands necessary for finishing linking programs.
postlink_cmds=$lt_postlink_cmds_CXX

# Specify filename containing input files.
file_list_spec=$lt_file_list_spec_CXX

# How to hardcode a shared library path into an executable.
hardcode_action=$hardcode_action_CXX

# The directories searched by this compiler when creating a shared library.
compiler_lib_search_dirs=$lt_compiler_lib_search_dirs_CXX

# Dependencies to place before and after the objects being linked to
# create a shared library.
predep_objects=$lt_predep_objects_CXX
postdep_objects=$lt_postdep_objects_CXX
predeps=$lt_predeps_CXX
postdeps=$lt_postdeps_CXX

# The library search path used internally by the compiler when linking
# a shared library.
compiler_lib_search_path=$lt_compiler_lib_search_path_CXX

# ### END LIBTOOL TAG CONFIG: CXX
_LT_EOF


    cat <<_LT_EOF >> "$ofile"

# ### BEGIN LIBTOOL TAG CONFIG: FC

# The linker used to build libraries.
LD=$lt_LD_FC

# How to create reloadable object files.
reload_flag=$lt_reload_flag_FC
reload_cmds=$lt_reload_cmds_FC

# Commands used to build an old-style archive.
old_archive_cmds=$lt_old_archive_cmds_FC

# A language specific compiler.
CC=$lt_compiler_FC

# Is the compiler the GNU compiler?
with_gcc=$GCC_FC

# Compiler flag to turn off builtin functions.
no_builtin_flag=$lt_lt_prog_compiler_no_builtin_flag_FC

# Additional compiler flags for building library objects.
pic_flag=$lt_lt_prog_compiler_pic_FC

# How to pass a linker flag through the compiler.
wl=$lt_lt_prog_compiler_wl_FC

# Compiler flag to prevent dynamic linking.
link_static_flag=$lt_lt_prog_compiler_static_FC

# Does compiler simultaneously support -c and -o options?
compiler_c_o=$lt_lt_cv_prog_compiler_c_o_FC

# Whether or not to add -lc for building shared libraries.
build_libtool_need_lc=$archive_cmds_need_lc_FC

# Whether or not to disallow shared libs when runtime libs are static.
allow_libtool_libs_with_static_runtimes=$enable_shared_with_static_runtimes_FC

# Compiler flag to allow reflexive dlopens.
export_dynamic_flag_spec=$lt_export_dynamic_flag_spec_FC

# Compiler flag to generate shared objects directly from archives.
whole_archive_flag_spec=$lt_whole_archive_flag_spec_FC

# Whether the compiler copes with passing no objects directly.
compiler_needs_object=$lt_compiler_needs_object_FC

# Create an old-style archive from a shared archive.
old_archive_from_new_cmds=$lt_old_archive_from_new_cmds_FC

# Create a temporary old-style archive to link instead of a shared archive.
old_archive_from_expsyms_cmds=$lt_old_archive_from_expsyms_cmds_FC

# Commands used to build a shared archive.
archive_cmds=$lt_archive_cmds_FC
archive_expsym_cmds=$lt_archive_expsym_cmds_FC

# Commands used to build a loadable module if different from building
# a shared archive.
module_cmds=$lt_module_cmds_FC
module_expsym_cmds=$lt_module_expsym_cmds_FC

# Whether we are building with GNU ld or not.
with_gnu_ld=$lt_with_gnu_ld_FC

# Flag that allows shared libraries with undefined symbols to be built.
allow_undefined_flag=$lt_allow_undefined_flag_FC

# Flag that enforces no undefined symbols.
no_undefined_flag=$lt_no_undefined_flag_FC

# Flag to hardcode \$libdir into a binary during linking.
# This must work even if \$libdir does not exist
hardcode_libdir_flag_spec=$lt_hardcode_libdir_flag_spec_FC

# Whether we need a single "-rpath" flag with a separated argument.
hardcode_libdir_separator=$lt_hardcode_libdir_separator_FC

# Set to "yes" if using DIR/libNAME\${shared_ext} during linking hardcodes
# DIR into the resulting binary.
hardcode_direct=$hardcode_direct_FC

# Set to "yes" if using DIR/libNAME\${shared_ext} during linking hardcodes
# DIR into the resulting binary and the resulting library dependency is
# "absolute",i.e impossible to change by setting \${shlibpath_var} if the
# library is relocated.
hardcode_direct_absolute=$hardcode_direct_absolute_FC

# Set to "yes" if using the -LDIR flag during linking hardcodes DIR
# into the resulting binary.
hardcode_minus_L=$hardcode_minus_L_FC

# Set to "yes" if using SHLIBPATH_VAR=DIR during linking hardcodes DIR
# into the resulting binary.
hardcode_shlibpath_var=$hardcode_shlibpath_var_FC

# Set to "yes" if building a shared library automatically hardcodes DIR
# into the library and all subsequent libraries and executables linked
# against it.
hardcode_automatic=$hardcode_automatic_FC

# Set to yes if linker adds runtime paths of dependent libraries
# to runtime path list.
inherit_rpath=$inherit_rpath_FC

# Whether libtool must link a program against all its dependency libraries.
link_all_deplibs=$link_all_deplibs_FC

# Set to "yes" if exported symbols are required.
always_export_symbols=$always_export_symbols_FC

# The commands to list exported symbols.
export_symbols_cmds=$lt_export_symbols_cmds_FC

# Symbols that should not be listed in the preloaded symbols.
exclude_expsyms=$lt_exclude_expsyms_FC

# Symbols that must always be exported.
include_expsyms=$lt_include_expsyms_FC

# Commands necessary for linking programs (against libraries) with templates.
prelink_cmds=$lt_prelink_cmds_FC

# Commands necessary for finishing linking programs.
postlink_cmds=$lt_postlink_cmds_FC

# Specify filename containing input files.
file_list_spec=$lt_file_list_spec_FC

# How to hardcode a shared library path into an executable.
hardcode_action=$hardcode_action_FC

# The directories searched by this compiler when creating a shared library.
compiler_lib_search_dirs=$lt_compiler_lib_search_dirs_FC

# Dependencies to place before and after the objects being linked to
# create a shared library.
predep_objects=$lt_predep_objects_FC
postdep_objects=$lt_postdep_objects_FC
predeps=$lt_predeps_FC
postdeps=$lt_postdeps_FC

# The library search path used internally by the compiler when linking
# a shared library.
compiler_lib_search_path=$lt_compiler_lib_search_path_FC

# ### END LIBTOOL TAG CONFIG: FC
_LT_EOF

 ;;
    "orte/tools/wrappers/orte_wrapper_script":F) chmod +x orte/tools/wrappers/orte_wrapper_script ;;
    "ompi/tools/wrappers/ompi_wrapper_script":F) chmod +x ompi/tools/wrappers/ompi_wrapper_script ;;
    "contrib/dist/mofed/debian/rules":F) chmod +x contrib/dist/mofed/debian/rules ;;
    "contrib/dist/mofed/compile_debian_mlnx_example":F) chmod +x contrib/dist/mofed/compile_debian_mlnx_example ;;

  esac
done # for ac_tag


as_fn_exit 0
