#!/bin/bash
#------------------------------------------------------------------------------
# =========                 |
# \\      /  F ield         | foam-extend: Open Source CFD
#  \\    /   O peration     | Version:     4.0
#   \\  /    A nd           | Web:         http://www.foam-extend.org
#    \\/     M anipulation  | For copyright notice see file Copyright
#------------------------------------------------------------------------------
# License
#     This file is part of foam-extend.
#
#     foam-extend is free software: you can redistribute it and/or modify it
#     under the terms of the GNU General Public License as published by the
#     Free Software Foundation, either version 3 of the License, or (at your
#     option) any later version.
#
#     foam-extend is distributed in the hope that it will be useful, but
#     WITHOUT ANY WARRANTY; without even the implied warranty of
#     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
#     General Public License for more details.
#
#     You should have received a copy of the GNU General Public License
#     along with foam-extend.  If not, see <http://www.gnu.org/licenses/>.
#
# Script
#     paraFoam
#
# Description
#     start paraview with the OpenFOAM libraries
#
#------------------------------------------------------------------------------
usage() {
    while [ "$#" -ge 1 ]; do echo "$1"; shift; done
    cat<<USAGE

usage: ${0##*/} [OPTION]
options:
  -case   dir    specify alternative case directory
  -region name   specify mesh region name
  -touch         only create the .OpenFOAM or .foam file
  -nativeReader  use the paraview native reader for OpenFOAM

* start paraview $ParaView_VERSION with the OpenFOAM libraries

USAGE
    exit 1
}

unset regionName touchOnly useNativeReader

# This is needed for systems that are using comma as the decimal separator
export LC_NUMERIC=C

# parse options
while [ "$#" -gt 0 ]
do
    case "$1" in
    -h | -help)
        usage
        ;;
    -case)
        [ "$#" -ge 2 ] || usage "'$1' option requires an argument"
        cd "$2" 2>/dev/null || usage "directory does not exist:  '$2'"
        shift 2
        ;;
    -region)
        [ "$#" -ge 2 ] || usage "'$1' option requires an argument"
        regionName=$2
        shift 2
        ;;
    -touch)
        touchOnly=true
        shift
        ;;
    -nativeReader)
        useNativeReader=true
        shift
        ;;
    *)
        usage "unknown option/argument: '$*'"
        ;;
    esac
done

# get a sensible caseName
caseName=${PWD##*/}

if [ -n "$useNativeReader" ]
then
    caseFileExt=".foam"
else
    caseFileExt=".OpenFOAM"
fi

caseFile="$caseName$caseFileExt"

fvControls="system"

if [ -n "$regionName" ]
then
    caseFile="$caseName{$regionName}$caseFileExt"
    fvControls="$fvControls/$regionName"
fi

if [ -n "$touchOnly" ]
then
    touch "$caseFile"
    echo "created '$caseFile'"
    exit 0
fi

# parent directory for normal or parallel results
case "$caseName" in
    processor*) parentDir=".." ;;
    *)          parentDir="."  ;;
esac

# check existence of essential files
for check in system/controlDict $fvControls/fvSchemes $fvControls/fvSolution
do
    [ -s "$parentDir/$check" ] || usage "file does not exist:  '$parentDir/$check'"
done


case "$ParaView_VERSION" in
2*)
    trap "rm -f paraFoam.pvs $caseFile 2>/dev/null; exit 0" EXIT TERM INT
    touch "$caseFile"

    # since we are now in the cwd, %CASE% is '$PWD/$caseFile'
    sed -e s@%CASE%@$PWD/$caseFile@g \
        $WM_PROJECT_DIR/bin/tools/paraFoam.pvs > paraFoam.pvs

    paraview paraFoam.pvs
    ;;

*)
    # only create/remove caseFile if it didn't already exist
    [ -e $caseFile ] || {
        trap "rm -f $caseFile 2>/dev/null; exit 0" EXIT TERM INT
        touch "$caseFile"
        echo "created temporary '$caseFile'"
    }

    paraview --data="$caseFile"
    ;;

esac
#------------------------------------------------------------------------------
